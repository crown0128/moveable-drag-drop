{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/utils.ts","../src/react-moveable/DraggableDragger.ts","../src/react-moveable/Scalable.ts","../src/react-moveable/Rotatable.ts","../src/react-moveable/Resizable.ts","../src/react-moveable/MoveableDragger.ts","../src/react-moveable/Moveable.tsx"],"sourcesContent":["import { prefixCSS } from \"framework-utils\";\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = prefixCSS(PREFIX, `\n{\n    position: fixed;\n    width: 0;\n    height: 0;\n    left: 0;\n    top: 0;\n    z-index: 3000;\n}\n.line, .control {\n    left: 0;\n    top: 0;\n}\n.control {\n    position: absolute;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    box-sizing: border-box;\n    background: #4af;\n    margin-top: -7px;\n    margin-left: -7px;\n}\n.line {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    background: #4af;\n    transform-origin: 0px 0.5px;\n}\n.line.rotation {\n    height: 40px;\n    width: 1px;\n    transform-origin: 0.5px 39.5px;\n}\n.line.rotation .control {\n    border-color: #4af;\n    background:#fff;\n    cursor: alias;\n}\n.control.e, .control.w {\n    cursor: ew-resize;\n}\n.control.s, .control.n {\n    cursor: ns-resize;\n}\n.control.nw, .control.se, :host.reverse .control.ne, :host.reverse .control.sw {\n    cursor: nwse-resize;\n}\n.control.ne, .control.sw, :host.reverse .control.nw, :host.reverse .control.se {\n    cursor: nesw-resize;\n}\n`);\n","import { PREFIX } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport { splitBracket, isUndefined } from \"@daybrush/utils\";\nimport { MoveableState, MoveableProps } from \"./types\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function caculate3x2(a: number[], b: number[]) {\n    // 0 2 4\n    // 1 3 5\n\n    return [\n        a[0] * b[0] + a[2] * b[1] + a[4] * b[2],\n        a[1] * b[0] + a[3] * b[1] + a[5] * b[2],\n    ];\n}\nexport function multiple3x2(a: number[], b: number[]) {\n    // 00 01 02\n    // 10 11 12\n    const [\n        a00,\n        a10,\n        a01,\n        a11,\n        a02,\n        a12,\n    ] = a;\n    const [\n        b00,\n        b10,\n        b01,\n        b11,\n        b02,\n        b12,\n    ] = b;\n\n    a[0] = a00 * b00 + a01 * b10;\n    a[1] = a10 * b00 + a11 * b10;\n    a[2] = a00 * b01 + a01 * b11;\n    a[3] = a10 * b01 + a11 * b11;\n    a[4] = a00 * b02 + a01 * b12 + a02 * 1;\n    a[5] = a10 * b02 + a11 * b12 + a12 * 1;\n    return a;\n}\nexport function invert3x2(a: number[]) {\n    // 00 01 02\n    // 10 11 12\n    // 20 21 22\n    const [\n        a00,\n        a10,\n        a01,\n        a11,\n        a02,\n        a12,\n    ] = a;\n    const a20 = 0;\n    const a21 = 0;\n    const a22 = 1;\n\n    const det\n        = a00 * a11 * a22\n        + a01 * a12 * a20\n        + a02 * a10 * a21\n        - a02 * a11 * a20\n        - a01 * a10 * a22\n        - a00 * a12 * a21;\n\n    const b00 = a11 * a22 - a12 * a21;\n    const b01 = a02 * a21 - a01 * a22;\n    const b02 = a01 * a12 - a02 * a11;\n\n    const b10 = a12 * a20 - a10 * a22;\n    const b11 = a22 * a00 - a20 * a02;\n    const b12 = a02 * a10 - a00 * a12;\n\n    // const b20 = a11 * a21 - a11 * a20;\n    // const b21 = a20 * a01 - a21 * a00;\n    // const b22 = a00 * a11 - a01 * a10;\n\n    a[0] = b00 / det;\n    a[1] = b10 / det;\n    a[2] = b01 / det;\n    a[3] = b11 / det;\n    a[4] = b02 / det;\n    a[5] = b12 / det;\n\n    return a;\n}\nexport function caculateMatrixStack(target: SVGElement | HTMLElement) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: Array<\"none\" | number[]> = [];\n\n    while (el) {\n        const transform = window.getComputedStyle(el).transform!;\n\n        if (transform !== \"none\") {\n            const value = splitBracket(transform).value!;\n            const matrix = value.split(/s*,\\s*/g).map(v => parseFloat(v));\n            matrixes.push(matrix);\n        } else {\n            matrixes.push(\"none\");\n        }\n        el = el.parentElement;\n    }\n\n    matrixes.reverse();\n\n    // 1 0 0\n    // 0 1 0\n    const mat = [1, 0, 0, 1, 0, 0];\n    const length = matrixes.length;\n    let beforeMatrix = [1, 0, 0, 1, 0, 0];\n\n    matrixes.forEach((matrix, i) => {\n        if (length - 1 === i) {\n            beforeMatrix = mat.slice();\n        }\n        if (matrix !== \"none\") {\n            multiple3x2(mat, matrix);\n        }\n\n    });\n    beforeMatrix[4] = 0;\n    beforeMatrix[5] = 0;\n    mat[4] = 0;\n    mat[5] = 0;\n\n    return [beforeMatrix, mat];\n}\nexport function caculatePosition(matrix: number[], origin: number[], width: number, height: number) {\n    let [x1, y1] = caculate3x2(matrix, [0, 0, 1]);\n    let [x2, y2] = caculate3x2(matrix, [width, 0, 1]);\n    let [x3, y3] = caculate3x2(matrix, [0, height, 1]);\n    let [x4, y4] = caculate3x2(matrix, [width, height, 1]);\n    let [originX, originY] = caculate3x2(matrix, [origin[0], origin[1], 1]);\n\n    const minX = Math.min(x1, x2, x3, x4);\n    const minY = Math.min(y1, y2, y3, y4);\n\n    x1 = (x1 - minX) || 0;\n    x2 = (x2 - minX) || 0;\n    x3 = (x3 - minX) || 0;\n    x4 = (x4 - minX) || 0;\n\n    y1 = (y1 - minY) || 0;\n    y2 = (y2 - minY) || 0;\n    y3 = (y3 - minY) || 0;\n    y4 = (y4 - minY) || 0;\n\n    originX = (originX - minX) || 0;\n    originY = (originY - minY) || 0;\n\n    return [\n        [originX, originY],\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ];\n}\nexport function multipleRotationMatrix(matrix: number[], rad: number) {\n    const mat = matrix.slice();\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n\n    const rotationMatrix = [cos, sin, -sin, cos, 0, 0];\n\n    return multiple3x2(mat, rotationMatrix);\n}\n\nexport function caculateRotationMatrix(matrix: number[], rad: number) {\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    const rotationMatrix = [cos, sin, -sin, cos, 0, 0];\n\n    return caculate3x2(rotationMatrix, matrix);\n}\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad > 0 ? rad : rad + Math.PI * 2;\n}\nexport function getLineTransform(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const width = Math.sqrt(distX * distX + distY * distY);\n    const rad = getRad(pos1, pos2);\n\n    return `translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad) scale(${width}, 1.2)`;\n}\nexport function getControlTransform(...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translate(${x}px, ${y}px)`,\n    };\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = window.getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getTargetInfo(\n    target?: SVGElement | HTMLElement,\n    container?: MoveableProps[\"container\"],\n): MoveableState {\n    let left = 0;\n    let top = 0;\n    let origin = [0, 0];\n    let pos1 = [0, 0];\n    let pos2 = [0, 0];\n    let pos3 = [0, 0];\n    let pos4 = [0, 0];\n    let beforeMatrix = [1, 0, 0, 1, 0, 0];\n    let matrix = [1, 0, 0, 1, 0, 0];\n    let width = 0;\n    let height = 0;\n    let transformOrigin = [0, 0];\n    let direction: 1 | -1 = 1;\n    let rotationPos = [0, 0];\n    let rotationRad = 0;\n\n    if (target) {\n        const rect = target.getBoundingClientRect();\n        const style = window.getComputedStyle(target);\n        left = rect.left;\n        top = rect.top;\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, style, true);\n        }\n        [beforeMatrix, matrix] = caculateMatrixStack(target);\n        transformOrigin = style.transformOrigin!.split(\" \").map(pos => parseFloat(pos));\n        [origin, pos1, pos2, pos3, pos4] = caculatePosition(matrix, transformOrigin, width, height);\n\n        if (container) {\n            const containerRect = container.getBoundingClientRect();\n\n            left -= containerRect.left;\n            top -= containerRect.top;\n        }\n        const pi = Math.PI;\n        const pos1Rad = getRad(origin, pos1);\n        const pos2Rad = getRad(origin, pos2);\n\n        // 1 : clockwise\n        // -1 : counterclockwise\n        direction =\n            (pos1Rad < pos2Rad && pos2Rad - pos1Rad < pi) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -pi)\n            ? 1 : -1;\n        rotationRad = getRad(direction > 0 ? pos1 : pos2, direction > 0 ? pos2 : pos1);\n        const relativeRotationPos = caculateRotationMatrix([0, -40, 0], rotationRad);\n\n        rotationPos = [\n            (pos1[0] + pos2[0]) / 2 + relativeRotationPos[0],\n            (pos1[1] + pos2[1]) / 2 + relativeRotationPos[1],\n        ];\n    }\n\n    return {\n        direction,\n        rotationRad,\n        rotationPos,\n        transform: \"\",\n        target,\n        left,\n        top,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        width,\n        height,\n        beforeMatrix,\n        matrix,\n        origin,\n        transformOrigin,\n    };\n}\n\nexport function getPosition(target: SVGElement | HTMLElement) {\n    const position = target.getAttribute(\"data-position\")!;\n\n    if (!position) {\n        return;\n    }\n    const pos = [0, 0];\n\n    (position.indexOf(\"w\") > -1) && (pos[0] = -1);\n    (position.indexOf(\"e\") > -1) && (pos[0] = 1);\n    (position.indexOf(\"n\") > -1) && (pos[1] = -1);\n    (position.indexOf(\"s\") > -1) && (pos[1] = 1);\n\n    return pos;\n}\n","import Moveable from \"./Moveable\";\nimport { drag } from \"@daybrush/drag\";\nimport { invert3x2, caculate3x2 } from \"./utils\";\n\nexport function getDraggableDragger(\n    moveable: Moveable,\n    target: HTMLElement | SVGElement,\n) {\n    return drag(target, {\n        container: window,\n        dragstart: ({ datas }) => {\n            const style = window.getComputedStyle(target!);\n            const { matrix, beforeMatrix } = moveable.state;\n\n            datas.matrix = invert3x2(matrix.slice());\n            datas.beforeMatrix = invert3x2(beforeMatrix.slice());\n            datas.left = parseFloat(style.left || \"\") || 0;\n            datas.top = parseFloat(style.top || \"\") || 0;\n            datas.bottom = parseFloat(style.bottom || \"\") || 0;\n            datas.right = parseFloat(style.right || \"\") || 0;\n            datas.transform = style.transform;\n            datas.prevDist = [0, 0];\n            datas.prevBeforeDist = [0, 0];\n\n            if (datas.transform === \"none\") {\n                datas.transform = \"\";\n            }\n            return moveable.props.onDragStart!({\n                target,\n            });\n        },\n        drag: ({ datas, distX, distY }) => {\n\n            const { beforeMatrix, matrix, prevDist, prevBeforeDist } = datas;\n            const beforeDist = caculate3x2(beforeMatrix, [distX, distY, 1]);\n            const dist = caculate3x2(matrix, [distX, distY, 1]);\n\n            const delta = [dist[0] - prevDist[0], dist[1] - prevDist[1]];\n            const beforeDelta = [beforeDist[0] - prevBeforeDist[0], beforeDist[1] - prevBeforeDist[1]];\n\n            datas.prevDist = dist;\n            datas.prevBeforeDist = beforeDist;\n\n            const left = datas.left + beforeDist[0];\n            const top = datas.top + beforeDist[1];\n            const right = datas.right - beforeDist[0];\n            const bottom = datas.bottom - beforeDist[1];\n            const transform = `${datas.transform} translate(${dist[0]}px, ${dist[1]}px)`;\n\n            moveable.props.onDrag!({\n                target,\n                transform,\n                dist,\n                delta,\n                beforeDist,\n                beforeDelta,\n                left,\n                top,\n                right,\n                bottom,\n            });\n\n            moveable.setState({\n                transform: `translate(${distX}px, ${distY}px)`,\n            });\n        },\n        dragend: ({ isDrag }) => {\n            moveable.props.onDragEnd!({ target, isDrag });\n            if (isDrag) {\n                moveable.updateRect();\n            }\n        },\n    });\n}\n","import Moveable from \"./Moveable\";\nimport { caculatePosition, invert3x2, caculate3x2, multiple3x2, getRad } from \"./utils\";\n\nexport function scaleStart(moveable: Moveable, position: number[] | undefined, { datas }: any) {\n    const target = moveable.props.target;\n    if (!position || !target) {\n        return false;\n    }\n    const style = window.getComputedStyle(target);\n    const {\n        matrix,\n        width,\n        height,\n        left, top,\n        transformOrigin,\n        origin,\n    } = moveable.state;\n\n    datas.matrix = invert3x2(matrix.slice());\n    datas.transform = style.transform;\n    datas.prevDist = [1, 1];\n    datas.position = position;\n    datas.width = width;\n    datas.height = height;\n    datas.transformOrigin = transformOrigin;\n    datas.originalMatrix = matrix;\n    datas.originalOrigin = origin;\n    datas.left = left;\n    datas.top = top;\n\n    if (datas.transform === \"none\") {\n        datas.transform = \"\";\n    }\n\n    moveable.props.onScaleStart!({\n        target,\n    });\n}\nexport function scale(moveable: Moveable, { datas, distX, distY }: any) {\n    const {\n        originalMatrix,\n        matrix,\n        prevDist,\n        position,\n        width,\n        height,\n        left,\n        top,\n        transformOrigin,\n        originalOrigin,\n        transform,\n    } = datas;\n    const dist = caculate3x2(matrix, [distX, distY, 1]);\n    let distWidth = position[0] * dist[0];\n    let distHeight = position[1] * dist[1];\n\n    // diagonal\n    if (position[0] && position[1]) {\n        const size = Math.sqrt(distWidth * distWidth + distHeight * distHeight);\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], position);\n        const distDiagonal = Math.cos(rad - standardRad) * size;\n\n        distWidth = distDiagonal;\n        distHeight = distDiagonal * height / width;\n    }\n\n    const nextWidth = width + distWidth;\n    const nextHeight = height + distHeight;\n    const scaleX = nextWidth / width;\n    const scaleY = nextHeight / height;\n    const [origin, pos1, pos2, pos3, pos4] = caculatePosition(\n        multiple3x2(originalMatrix.slice(), [scaleX, 0, 0, scaleY, 0, 0]),\n        transformOrigin, width, height,\n    );\n    const nextLeft = left + originalOrigin[0] - origin[0];\n    const nextTop = top + originalOrigin[1] - origin[1];\n\n    datas.prevDist = [scaleX, scaleY];\n    moveable.props.onScale!({\n        target: moveable.props.target!,\n        scale: [scaleX, scaleY],\n        dist: [scaleX - 1, scaleY - 1],\n        delta: [scaleX - prevDist[0], scaleY - prevDist[1]],\n        transform: `${transform} scale(${scaleX}, ${scaleY})`,\n    });\n\n    moveable.setState({\n        origin, pos1, pos2, pos3, pos4,\n        left: nextLeft,\n        top: nextTop,\n    });\n}\nexport function scaleEnd(moveable: Moveable, { isDrag }: any) {\n    moveable.props.onScaleEnd!({\n        target: moveable.props.target!,\n        isDrag,\n    });\n    if (isDrag) {\n        moveable.updateRect();\n    }\n}\n","import Moveable from \"./Moveable\";\nimport { multipleRotationMatrix, caculatePosition, getRad } from \"./utils\";\n\nfunction getRotateInfo(moveable: Moveable, datas: any, clientX: number, clientY: number) {\n    const {\n        startAbsoluteOrigin,\n        startRad,\n        prevRad,\n        loop: prevLoop,\n        direction,\n    } = datas;\n    const rad = getRad(startAbsoluteOrigin, [clientX, clientY]);\n\n    if (prevRad > rad && prevRad > 270 && rad < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevRad < rad && prevRad < 90 && rad > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n\n    const absolutePrevRad = prevLoop * 360 + prevRad;\n    const absoluteRad = datas.loop * 360 + rad;\n    const {\n        width,\n        height,\n        transformOrigin,\n        origin: prevOrigin,\n        left: prevLeft,\n        top: prevTop,\n    } = moveable.state;\n\n    const matrix = multipleRotationMatrix(datas.matrix, direction * (rad - startRad));\n    const prevAbsoluteOrigin = [prevLeft + prevOrigin[0], prevTop + prevOrigin[1]];\n    const [origin, pos1, pos2, pos3, pos4]\n        = caculatePosition(matrix, transformOrigin, width, height);\n    const left = prevAbsoluteOrigin[0] - origin[0];\n    const top = prevAbsoluteOrigin[1] - origin[1];\n\n    datas.prevRad = rad;\n\n    return {\n        delta: direction * (absoluteRad - absolutePrevRad) / Math.PI * 180,\n        dist: direction * (absolutePrevRad - startRad) / Math.PI * 180,\n        origin,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        matrix,\n        left,\n        top,\n    };\n}\n\nexport function rotateStart(moveable: Moveable, { datas, clientX, clientY }: any) {\n    const target = moveable.props.target;\n\n    if (!target) {\n        return false;\n    }\n    const { matrix, left, top, origin, rotationPos, direction } = moveable.state;\n\n    datas.transform = window.getComputedStyle(target!).transform;\n    datas.matrix = matrix;\n    datas.left = left;\n    datas.top = top;\n    datas.startAbsoluteOrigin = [clientX - rotationPos[0] + origin[0], clientY - rotationPos[1] + origin[1]];\n\n    datas.prevRad = getRad(datas.startAbsoluteOrigin, [clientX, clientY]);\n    datas.startRad = datas.prevRad;\n    datas.loop = 0;\n    datas.direction = direction;\n\n    if (datas.transform === \"none\") {\n        datas.transform = \"\";\n    }\n    moveable.props.onRotateStart!({\n        target,\n    });\n}\nexport function rotate(moveable: Moveable, { datas, clientX, clientY }: any) {\n    const {\n        delta,\n        dist,\n        origin,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        matrix,\n        left,\n        top,\n    } = getRotateInfo(moveable, datas, clientX, clientY);\n\n    moveable.props.onRotate!({\n        target: moveable.props.target!,\n        delta,\n        dist,\n        transform: `${datas.transform} rotate(${dist}deg)`,\n    });\n    moveable.setState({\n        origin,\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n        matrix,\n        left,\n        top,\n    });\n}\nexport function rotateEnd(moveable: Moveable, { isDrag }: any) {\n    moveable.props.onRotateEnd!({\n        target: moveable.props.target!,\n        isDrag,\n    });\n    if (isDrag) {\n        moveable.updateRect();\n    }\n}\n","import Moveable from \"./Moveable\";\nimport { invert3x2, caculate3x2, getRad, getSize } from \"./utils\";\n\nexport function resizeStart(moveable: Moveable, position: number[] | undefined, { datas }: any) {\n    const target = moveable.props.target;\n\n    if (!target || !position) {\n        return false;\n    }\n    const {\n        beforeMatrix,\n    } = moveable.state;\n\n    const [width, height] = getSize(target!);\n\n    datas.matrix = invert3x2(beforeMatrix.slice());\n    datas.position = position;\n    datas.width = width;\n    datas.height = height;\n    datas.prevWidth = 0;\n    datas.prevHeight = 0;\n\n    moveable.props.onResizeStart!({\n        target,\n    });\n}\nexport function resize(moveable: Moveable, { datas, distX, distY }: any) {\n    const {\n        matrix,\n        position,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n    } = datas;\n    const dist = caculate3x2(matrix, [distX, distY, 1]);\n    let distWidth = position[0] * dist[0];\n    let distHeight = position[1] * dist[1];\n\n    // diagonal\n    if (position[0] && position[1]) {\n        const size = Math.sqrt(distWidth * distWidth + distHeight * distHeight);\n        const rad = getRad([0, 0], dist);\n        const standardRad = getRad([0, 0], position);\n        const distDiagonal = Math.cos(rad - standardRad) * size;\n\n        distWidth = distDiagonal;\n        distHeight = distDiagonal * height / width;\n    }\n\n    const nextWidth = width + distWidth;\n    const nextHeight = height + distHeight;\n\n    datas.prevWidth = distWidth;\n    datas.prevHeight = distHeight;\n\n    moveable.props.onResize!({\n        target: moveable.props.target!,\n        width: nextWidth,\n        height: nextHeight,\n        dist: [distWidth, distHeight],\n        delta: [distWidth - prevWidth, distHeight - prevHeight],\n    });\n\n    moveable.updateRect();\n}\nexport function resizeEnd(moveable: Moveable, { isDrag }: any) {\n    moveable.props.onScaleEnd!({\n        target: moveable.props.target!,\n        isDrag,\n    });\n    if (isDrag) {\n        moveable.updateRect();\n    }\n}\n","import Moveable from \"./Moveable\";\nimport { drag } from \"@daybrush/drag\";\nimport { prefix, getPosition } from \"./utils\";\nimport { hasClass } from \"@daybrush/utils\";\nimport { scaleStart, scale, scaleEnd } from \"./Scalable\";\nimport { rotateStart, rotate, rotateEnd } from \"./Rotatable\";\nimport { resizeStart, resize, resizeEnd } from \"./Resizable\";\n\nexport function getMoveableDragger(\n    moveable: Moveable,\n    target: HTMLElement,\n) {\n    let type: \"rotate\" | \"scale\" | \"resize\" | \"\";\n\n    return drag(target, {\n        container: window,\n        dragstart: ({ datas, inputEvent, clientX, clientY }) => {\n            const inputTarget: HTMLElement = inputEvent.target;\n\n            type = \"\";\n            if (!hasClass(inputTarget, prefix(\"control\"))) {\n                return false;\n            }\n            if (hasClass(inputTarget, prefix(\"rotation\"))) {\n                type = \"rotate\";\n                return rotateStart(moveable, { datas, clientX, clientY });\n            } else if (moveable.props.scalable) {\n                const position = getPosition(inputTarget);\n                type = \"scale\";\n                return scaleStart(moveable, position, { datas });\n            } else if (moveable.props.resizable) {\n                const position = getPosition(inputTarget);\n                type = \"resize\";\n                return resizeStart(moveable, position, { datas });\n            } else {\n                return false;\n            }\n        },\n        drag: ({ datas, clientX, clientY, distX, distY }) => {\n            if (!type) {\n                return;\n            } else if (type === \"rotate\") {\n                return rotate(moveable, { datas, clientX, clientY });\n            } else if (type === \"scale\") {\n                return scale(moveable, { datas, distX, distY });\n            } else if (type === \"resize\") {\n                return resize(moveable, { datas, distX, distY });\n            }\n        },\n        dragend: ({ isDrag }) => {\n            if (!type) {\n                return;\n            } else if (type === \"rotate\") {\n                return rotateEnd(moveable, { isDrag });\n            } else if (type === \"scale\") {\n                return scaleEnd(moveable, { isDrag });\n            } else if (type === \"resize\") {\n                return resizeEnd(moveable, { isDrag });\n            }\n        },\n    });\n}\n","import * as React from \"react\";\nimport { MOVEABLE_CSS, PREFIX } from \"./consts\";\nimport {\n    prefix, getRad, getLineTransform,\n    getTargetInfo,\n    getControlTransform,\n} from \"./utils\";\nimport styler from \"react-css-styler\";\nimport { drag } from \"@daybrush/drag\";\nimport { ref } from \"framework-utils\";\nimport { MoveableState, MoveableProps } from \"./types\";\nimport { getDraggableDragger } from \"./DraggableDragger\";\nimport { getMoveableDragger } from \"./MoveableDragger\";\n\nconst ControlBoxElement = styler(\"div\", MOVEABLE_CSS);\n\nexport default class Moveable extends React.PureComponent<MoveableProps, MoveableState> {\n    public static defaultProps: MoveableProps = {\n        container: null,\n        rotatable: false,\n        draggable: false,\n        scalable: false,\n        resizable: false,\n        origin: true,\n        onRotateStart: () => { },\n        onRotate: () => { },\n        onRotateEnd: () => { },\n        onDragStart: () => { },\n        onDrag: () => { },\n        onDragEnd: () => { },\n        onScaleStart: () => { },\n        onScale: () => { },\n        onScaleEnd: () => { },\n        onResizeStart: () => { },\n        onResize: () => { },\n        onResizeEnd: () => { },\n    };\n    public state: MoveableState = {\n        target: null,\n        beforeMatrix: [1, 0, 0, 1, 0, 0],\n        matrix: [1, 0, 0, 1, 0, 0],\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        transform: \"\",\n        transformOrigin: [0, 0],\n        direction: 1,\n        rotationRad: 0,\n        rotationPos: [0, 0],\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n    };\n    private moveableDragger!: ReturnType<typeof drag> | null;\n    private draggableDragger!: ReturnType<typeof drag> | null;\n    private controlBox!: typeof ControlBoxElement extends new (...args: any[]) => infer U ? U : never;\n\n    public isMoveableElement(target: HTMLElement) {\n        return target && target.className.indexOf(PREFIX) > -1;\n    }\n    public render() {\n        if (this.state.target !== this.props.target) {\n            this.updateRect(true);\n        }\n        const { left, top, pos1, pos2, pos3, pos4, target, transform, direction } = this.state;\n\n        return (\n            <ControlBoxElement\n                ref={ref(this, \"controlBox\")}\n                className={prefix(\"control-box\", direction === -1 ? \"reverse\" : \"\")} style={{\n                    position: this.props.container ? \"absolute\" : \"fixed\",\n                    display: target ? \"block\" : \"none\",\n                    transform: `translate(${left}px, ${top}px) ${transform}`,\n                }}>\n                <div className={prefix(\"line\")} style={{ transform: getLineTransform(pos1, pos2) }}></div>\n                <div className={prefix(\"line\")} style={{ transform: getLineTransform(pos2, pos4) }}></div>\n                <div className={prefix(\"line\")} style={{ transform: getLineTransform(pos1, pos3) }}></div>\n                <div className={prefix(\"line\")} style={{ transform: getLineTransform(pos3, pos4) }}></div>\n                {this.renderRotation(direction)}\n                {this.renderPosition()}\n                {this.renderOrigin()}\n            </ControlBoxElement>\n        );\n    }\n    public renderRotation(direction: number) {\n        if (!this.props.rotatable) {\n            return null;\n        }\n        const { pos1, pos2 } = this.state;\n        const rotationRad = getRad(direction > 0 ? pos1 : pos2, direction > 0 ? pos2 : pos1);\n\n        return (\n            <div className={prefix(\"line rotation\")} style={{\n                // tslint:disable-next-line: max-line-length\n                transform: `translate(${(pos1[0] + pos2[0]) / 2}px, ${(pos1[1] + pos2[1]) / 2}px) translateY(-40px) rotate(${rotationRad}rad)`,\n            }}>\n                <div className={prefix(\"control\", \"rotation\")} ref={ref(this, \"rotationElement\")}></div>\n            </div>\n        );\n    }\n    public renderOrigin() {\n        if (!this.props.origin) {\n            return null;\n        }\n        const { origin } = this.state;\n\n        return (<div className={prefix(\"control\", \"origin\")} style={getControlTransform(origin)}></div>);\n    }\n    public renderPosition() {\n        if (!this.props.resizable && !this.props.scalable) {\n            return null;\n        }\n        const { pos1, pos2, pos3, pos4 } = this.state;\n        return [\n            <div className={prefix(\"control\", \"nw\")} data-position=\"nw\" key=\"nw\"\n                style={getControlTransform(pos1)}></div>,\n            <div className={prefix(\"control\", \"n\")} data-position=\"n\" key=\"n\"\n                style={getControlTransform(pos1, pos2)}></div>,\n            <div className={prefix(\"control\", \"ne\")} data-position=\"ne\" key=\"ne\"\n                style={getControlTransform(pos2)}></div>,\n            <div className={prefix(\"control\", \"w\")} data-position=\"w\" key=\"w\"\n                style={getControlTransform(pos1, pos3)}></div>,\n            <div className={prefix(\"control\", \"e\")} data-position=\"e\" key=\"e\"\n                style={getControlTransform(pos2, pos4)}></div>,\n            <div className={prefix(\"control\", \"sw\")} data-position=\"sw\" key=\"sw\"\n                style={getControlTransform(pos3)}></div>,\n            <div className={prefix(\"control\", \"s\")} data-position=\"s\" key=\"s\"\n                style={getControlTransform(pos3, pos4)}></div>,\n            <div className={prefix(\"control\", \"se\")} data-position=\"se\" key=\"se\"\n                style={getControlTransform(pos4)}></div>,\n        ];\n\n    }\n    public componentDidMount() {\n        /* rotatable */\n        /* resizable */\n        /* scalable */\n        this.moveableDragger = getMoveableDragger(this, this.controlBox.getElement());\n    }\n    public componentWillUnmount() {\n        if (this.draggableDragger) {\n            this.draggableDragger.unset();\n            this.draggableDragger = null;\n        }\n        if (this.moveableDragger) {\n            this.moveableDragger.unset();\n            this.moveableDragger = null;\n        }\n    }\n    public move(pos: number[]) {\n        if (!pos[0] && !pos[1]) {\n            return;\n        }\n        const { left, top } = this.state;\n        this.setState({\n            left: left + pos[0],\n            top: top + pos[1],\n        });\n    }\n    public updateRect(isNotSetState?: boolean) {\n        const target = this.props.target;\n        const state = this.state;\n        if (state.target !== target) {\n            if (this.draggableDragger) {\n                this.draggableDragger.unset();\n                this.draggableDragger = null;\n            }\n            if (target && this.props.draggable) {\n                this.draggableDragger = getDraggableDragger(this, target);\n            }\n        }\n        const container = this.props.container;\n        this.updateState(getTargetInfo(target, container), isNotSetState);\n    }\n    private updateState(nextState: any, isNotSetState?: boolean) {\n        const state = this.state as any;\n\n        if (isNotSetState) {\n            for (const name in nextState) {\n                state[name] = nextState[name];\n            }\n        } else {\n            this.setState(nextState);\n        }\n    }\n}\n"],"names":["PREFIX","MOVEABLE_CSS","prefixCSS","prefix","_i","classNames","prefixNames","caculate3x2","a","b","multiple3x2","a00","a10","a01","a11","a02","a12","b00","b10","b01","b11","b02","b12","invert3x2","a20","a21","a22","det","caculateMatrixStack","target","el","matrixes","transform","window","getComputedStyle","value","splitBracket","matrix","split","map","v","parseFloat","push","parentElement","reverse","mat","length","beforeMatrix","forEach","i","slice","caculatePosition","origin","width","height","_a","x1","y1","_b","x2","y2","_c","x3","y3","_d","x4","y4","_e","originX","originY","minX","Math","min","minY","multipleRotationMatrix","rad","cos","sin","rotationMatrix","caculateRotationMatrix","getRad","pos1","pos2","distX","distY","atan2","PI","getLineTransform","sqrt","getControlTransform","poses","x","reduce","prev","pos","y","getSize","style","isOffset","isBoxSizing","boxSizing","offsetWidth","offsetHeight","hasOffset","isUndefined","clientWidth","clientHeight","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","container","left","top","pos3","pos4","transformOrigin","direction","rotationPos","rotationRad","rect","getBoundingClientRect","containerRect","pi","pos1Rad","pos2Rad","relativeRotationPos","getPosition","position","getAttribute","indexOf","getDraggableDragger","moveable","drag","dragstart","datas","bottom","right","prevDist","prevBeforeDist","props","onDragStart","beforeDist","dist","delta","beforeDelta","onDrag","setState","dragend","isDrag","onDragEnd","updateRect","scaleStart","originalMatrix","originalOrigin","onScaleStart","scale","distWidth","distHeight","size","standardRad","distDiagonal","nextWidth","nextHeight","scaleX","scaleY","nextLeft","nextTop","onScale","scaleEnd","onScaleEnd","getRotateInfo","clientX","clientY","startAbsoluteOrigin","startRad","prevRad","prevLoop","loop","absolutePrevRad","absoluteRad","prevOrigin","prevLeft","prevTop","prevAbsoluteOrigin","rotateStart","onRotateStart","rotate","onRotate","rotateEnd","onRotateEnd","resizeStart","prevWidth","prevHeight","onResizeStart","resize","onResize","resizeEnd","getMoveableDragger","type","inputEvent","inputTarget","hasClass","scalable","resizable","ControlBoxElement","styler","tslib_1","_this","className","state","React","ref","display","renderRotation","renderPosition","renderOrigin","rotatable","key","moveableDragger","controlBox","getElement","draggableDragger","unset","isNotSetState","draggable","updateState","nextState","name","Moveable","onResizeEnd"],"mappings":"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"}