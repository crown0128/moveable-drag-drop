{"version":3,"file":"moveable.js","sources":["../src/InnerMoveable.tsx","../src/Moveable.tsx"],"sourcesContent":["import { Component, h } from \"preact\";\nimport Moveable, { MoveableProps, MoveableInterface } from \"preact-moveable\";\nimport { ref } from \"framework-utils\";\n\nexport default class InnerMoveable extends Component<MoveableProps> {\n    public state: MoveableProps = {};\n    public preactMoveable: MoveableInterface;\n    constructor(props: MoveableProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        return <Moveable ref={ref(this, \"preactMoveable\")} {...this.state} />;\n    }\n}\n","import EgComponent from \"@egjs/component\";\nimport { ref } from \"framework-utils\";\nimport { h, render } from \"preact\";\nimport InnerMoveable from \"./InnerMoveable\";\nimport { MoveableOptions } from \"./types\";\nimport {\n    OnDragStart, OnDrag, OnResize, OnResizeStart,\n    OnResizeEnd, OnScaleStart, OnScaleEnd, OnRotateStart,\n    OnRotateEnd, OnDragEnd, OnRotate, OnScale, OnWarpStart, OnWarpEnd, OnWarp,\n} from \"react-moveable/declaration/types\";\n\n/**\n * Moveable is Draggable! Resizable! Scalable! Rotatable!\n * @sort 1\n * @extends eg.Component\n */\nclass Moveable extends EgComponent {\n    private innerMoveable!: InnerMoveable;\n\n    /**\n     *\n     */\n    constructor(parentElement: HTMLElement | SVGElement, options: MoveableOptions = {}) {\n        super();\n        const element = document.createElement(\"div\");\n\n        render(\n            <InnerMoveable\n                ref={ref(this, \"innerMoveable\")}\n                {...options}\n                onDragStart={this.onDragStart}\n                onDrag={this.onDrag}\n                onDragEnd={this.onDragEnd}\n                onResizeStart={this.onResizeStart}\n                onResize={this.onResize}\n                onResizeEnd={this.onResizeEnd}\n                onScaleStart={this.onScaleStart}\n                onScale={this.onScale}\n                onScaleEnd={this.onScaleEnd}\n                onRotateStart={this.onRotateStart}\n                onRotate={this.onRotate}\n                onRotateEnd={this.onRotateEnd}\n                onWarpStart={this.onWarpStart}\n                onWarp={this.onWarp}\n                onWarpEnd={this.onWarpEnd}\n            />,\n            element,\n        );\n        parentElement.appendChild(element.children[0]);\n    }\n    /**\n     * Whether or not the origin controlbox will be visible or not\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.origin = true;\n     */\n    get origin() {\n        return this.getMoveableProps().origin;\n    }\n    set origin(origin: boolean) {\n        this.innerMoveable.setState({\n            origin,\n        });\n    }\n    /**\n     * The target to indicate Moveable Control Box.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     * moveable.target = document.querySelector(\".target\");\n     */\n    get target(): HTMLElement | SVGElement {\n        return this.getMoveableProps().target;\n    }\n    set target(target: HTMLElement | SVGElement) {\n        if (target !== this.target) {\n            this.innerMoveable.setState({\n                target,\n            });\n        } else {\n            this.updateRect();\n        }\n    }\n    /**\n     * Whether or not target can be dragged.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.draggable = true;\n     */\n    get draggable(): boolean {\n        return this.getMoveableProps().draggable || false;\n    }\n    set draggable(draggable: boolean) {\n        this.innerMoveable.setState({\n            draggable,\n        });\n    }\n    /**\n     * Whether or not target can be resized.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.resizable = true;\n     */\n    get resizable(): boolean {\n        return this.getMoveableProps().resizable;\n    }\n    set resizable(resizable: boolean) {\n        this.innerMoveable.setState({\n            resizable,\n        });\n    }\n    /**\n     * Whether or not target can scaled.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.scalable = true;\n     */\n    get scalable(): boolean {\n        return this.getMoveableProps().scalable;\n    }\n    set scalable(scalable: boolean) {\n        this.innerMoveable.setState({\n            scalable,\n        });\n    }\n    /**\n     * Whether or not target can be rotated.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.rotatable = true;\n     */\n    get rotatable(): boolean {\n        return this.getMoveableProps().rotatable;\n    }\n    set rotatable(rotatable: boolean) {\n        this.innerMoveable.setState({\n            rotatable,\n        });\n    }\n    /**\n     * Whether or not target can be warped.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.warpable = true;\n     */\n    get warpable(): boolean {\n        return this.getMoveableProps().warpable;\n    }\n    set warpable(warpable: boolean) {\n        this.innerMoveable.setState({\n            warpable,\n        });\n    }\n    /**\n     * When resize or scale, keeps a ratio of the width, height.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.keepRatio = true;\n     */\n    get keepRatio(): boolean {\n        return this.getMoveable().props.keepRatio;\n    }\n    set keepRatio(keepRatio: boolean) {\n        this.innerMoveable.setState({\n            keepRatio,\n        });\n    }\n    /**\n     * throttle of x, y when drag.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.throttleDrag = 1;\n     */\n    get throttleDrag(): number {\n        return this.getMoveable().props.throttleDrag;\n    }\n    set throttleDrag(throttleDrag: number) {\n        this.innerMoveable.setState({\n            throttleDrag,\n        });\n    }\n    /**\n     * throttle of width, height when resize.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.throttleResize = 1;\n     */\n    get throttleResize(): number {\n        return this.getMoveable().props.throttleResize;\n    }\n    set throttleResize(throttleResize: number) {\n        this.innerMoveable.setState({\n            throttleResize,\n        });\n    }\n    /**\n     * throttle of scaleX, scaleY when scale.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.throttleScale = 0.1;\n     */\n    get throttleScale(): number {\n        return this.getMoveable().props.throttleScale;\n    }\n    set throttleScale(throttleScale: number) {\n        this.innerMoveable.setState({\n            throttleScale,\n        });\n    }\n    /**\n     * hrottle of angle(degree) when rotate.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.throttleRotate = 1;\n     */\n    get throttleRotate(): number {\n        return this.getMoveable().props.throttleRotate;\n    }\n    set throttleRotate(throttleRotate: number) {\n        this.innerMoveable.setState({\n            throttleRotate,\n        });\n    }\n    /**\n     * Move the moveable as much as the `pos`.\n     * @param - the values of x and y to move moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.move([0, -10]);\n     */\n    public move(pos: number[]) {\n        this.getMoveable().move(pos);\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return this.getMoveable().isMoveableElement(target);\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @param - the values of x and y to move moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(): void {\n        this.getMoveable().updateTarget();\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy() {\n        const el = this.getMoveable().base;\n\n        el.remove ? el.remove() : el.parentElement.removeChild(el);\n        this.innerMoveable = null;\n        this.getMoveable().componentWillUnmount();\n    }\n    private getMoveable() {\n        return this.innerMoveable.preactMoveable;\n    }\n    private getMoveableProps() {\n        return this.getMoveable().props;\n    }\n    private onDragStart = (e: OnDragStart) => {\n        this.trigger(\"dragStart\", e);\n    }\n    private onDrag = (e: OnDrag) => {\n        this.trigger(\"drag\", e);\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        this.trigger(\"dragEnd\", e);\n    }\n    private onResizeStart = (e: OnResizeStart) => {\n        this.trigger(\"resizeStart\", e);\n    }\n    private onResize = (e: OnResize) => {\n        this.trigger(\"resize\", e);\n    }\n    private onResizeEnd = (e: OnResizeEnd) => {\n        this.trigger(\"resizeEnd\", e);\n    }\n    private onScaleStart = (e: OnScaleStart) => {\n        this.trigger(\"scaleStart\", e);\n    }\n    private onScale = (e: OnScale) => {\n        this.trigger(\"scale\", e);\n    }\n    private onScaleEnd = (e: OnScaleEnd) => {\n        this.trigger(\"scaleEnd\", e);\n    }\n    private onRotateStart = (e: OnRotateStart) => {\n        this.trigger(\"rotateStart\", e);\n    }\n    private onRotate = (e: OnRotate) => {\n        this.trigger(\"rotate\", e);\n    }\n    private onRotateEnd = (e: OnRotateEnd) => {\n        this.trigger(\"rotateEnd\", e);\n    }\n    private onWarpStart = (e: OnWarpStart) => {\n        this.trigger(\"warpStart\", e);\n    }\n    private onWarp = (e: OnWarp) => {\n        this.trigger(\"warp\", e);\n    }\n    private onWarpEnd = (e: OnWarpEnd) => {\n        this.trigger(\"warpEnd\", e);\n    }\n}\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable\n * @event dragStart\n * @param {Moveable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable\n * @event drag\n * @param {Moveable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable\n * @event dragEnd\n * @param {Moveable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable\n * @event resizeStart\n * @param {Moveable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable\n * @event resize\n * @param {Moveable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable\n * @event resizeEnd\n * @param {Moveable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable\n * @event scaleStart\n * @param {Moveable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable\n * @event scale\n * @param {Moveable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable\n * @event scaleEnd\n * @param {Moveable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable\n * @event rotateStart\n * @param {Moveable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When rotating, the rotate event is called.\n * @memberof Moveable\n * @event rotate\n * @param {Moveable.OnRotate} - Parameters for the rotate event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotate\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable\n * @event rotateEnd\n * @param {Moveable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n /**\n * When the warp starts, the warpStart event is called.\n * @memberof Moveable\n * @event warpStart\n * @param {Moveable.OnWarpStart} - Parameters for the warpStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When warping, the warp event is called.\n * @memberof Moveable\n * @event warp\n * @param {Moveable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable\n * @event warpEnd\n * @param {Moveable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\nexport default Moveable;\n\ndeclare interface Moveable {\n    on(eventName: \"drag\", handlerToAttach: (event: OnDrag) => any): this;\n    on(eventName: \"dragStart\", handlerToAttach: (event: OnDragStart) => any): this;\n    on(eventName: \"dragEnd\", handlerToAttach: (event: OnDragEnd) => any): this;\n    on(eventName: \"resize\", handlerToAttach: (event: OnResize) => any): this;\n    on(eventName: \"resizeStart\", handlerToAttach: (event: OnResizeStart) => any): this;\n    on(eventName: \"resizeEnd\", handlerToAttach: (event: OnResizeEnd) => any): this;\n    on(eventName: \"scale\", handlerToAttach: (event: OnScale) => any): this;\n    on(eventName: \"scaleStart\", handlerToAttach: (event: OnScaleStart) => any): this;\n    on(eventName: \"scaleEnd\", handlerToAttach: (event: OnScaleEnd) => any): this;\n    on(eventName: \"rotate\", handlerToAttach: (event: OnRotate) => any): this;\n    on(eventName: \"rotateStart\", handlerToAttach: (event: OnRotateStart) => any): this;\n    on(eventName: \"rotateEnd\", handlerToAttach: (event: OnRotateEnd) => any): this;\n    on(eventName: \"warp\", handlerToAttach: (event: OnWarp) => any): this;\n    on(eventName: \"warpStart\", handlerToAttach: (event: OnWarpStart) => any): this;\n    on(eventName: \"warpEnd\", handlerToAttach: (event: OnWarpEnd) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n"],"names":["tslib_1","props","_super","_this","state","h","Moveable","ref","Component","parentElement","options","e","trigger","element","document","createElement","render","InnerMoveable","onDragStart","onDrag","onDragEnd","onResizeStart","onResize","onResizeEnd","onScaleStart","onScale","onScaleEnd","onRotateStart","onRotate","onRotateEnd","onWarpStart","onWarp","onWarpEnd","appendChild","children","Object","getMoveableProps","origin","innerMoveable","setState","target","updateRect","draggable","resizable","scalable","rotatable","warpable","getMoveable","keepRatio","throttleDrag","throttleResize","throttleScale","throttleRotate","pos","move","isMoveableElement","updateTarget","el","base","remove","removeChild","componentWillUnmount","preactMoveable","EgComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}