{"version":3,"file":"moveable.cjs.js","sources":["../src/InnerMoveable.tsx","../src/Moveable.tsx"],"sourcesContent":["import { Component, h } from \"preact\";\nimport Moveable, { MoveableProps, MoveableInterface } from \"preact-moveable\";\nimport { ref } from \"framework-utils\";\n\nexport default class InnerMoveable extends Component<MoveableProps> {\n    public state: MoveableProps = {};\n    public preactMoveable: MoveableInterface;\n    constructor(props: MoveableProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        return <Moveable ref={ref(this, \"preactMoveable\")} {...this.state} />;\n    }\n}\n","import EgComponent from \"@egjs/component\";\nimport { ref } from \"framework-utils\";\nimport { h, render } from \"preact\";\nimport InnerMoveable from \"./InnerMoveable\";\nimport { MoveableOptions } from \"./types\";\nimport {\n    OnDragStart, OnDrag, OnResize, OnResizeStart,\n    OnResizeEnd, OnScaleStart, OnScaleEnd, OnRotateStart,\n    OnRotateEnd, OnDragEnd, OnRotate, OnScale,\n} from \"preact-moveable\";\n\n/**\n * Moveable is Draggable! Resizable! Scalable! Rotatable!\n * @sort 1\n * @extends eg.Component\n */\nclass Moveable extends EgComponent {\n    private innerMoveable!: InnerMoveable;\n\n    /**\n     *\n     */\n    constructor(parentElement: HTMLElement | SVGElement, options: MoveableOptions = {}) {\n        super();\n        const element = document.createElement(\"div\");\n\n        render(\n            <InnerMoveable\n                ref={ref(this, \"innerMoveable\")}\n                {...options}\n                onDragStart={this.onDragStart}\n                onDrag={this.onDrag}\n                onDragEnd={this.onDragEnd}\n                onResizeStart={this.onResizeStart}\n                onResize={this.onResize}\n                onResizeEnd={this.onResizeEnd}\n                onScaleStart={this.onScaleStart}\n                onScale={this.onScale}\n                onScaleEnd={this.onScaleEnd}\n                onRotateStart={this.onRotateStart}\n                onRotate={this.onRotate}\n                onRotateEnd={this.onRotateEnd}\n            />,\n            element,\n        );\n        parentElement.appendChild(element.children[0]);\n    }\n    /**\n     * target is target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.origin = true;\n     */\n    get origin() {\n        return this.getMoveableProps().origin;\n    }\n    set origin(origin: boolean) {\n        this.innerMoveable.setState({\n            origin,\n        });\n    }\n    /**\n     * target is target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     * moveable.target = document.querySelector(\".target\");\n     */\n    get target(): HTMLElement | SVGElement {\n        return this.getMoveableProps().target;\n    }\n    set target(target: HTMLElement | SVGElement) {\n        if (target !== this.target) {\n            this.innerMoveable.setState({\n                target,\n            });\n        } else {\n            this.updateRect();\n        }\n    }\n    /**\n     * Whether or not target can be dragged.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.draggable = true;\n     */\n    get draggable(): boolean {\n        return this.getMoveableProps().draggable || false;\n    }\n    set draggable(draggable: boolean) {\n        this.innerMoveable.setState({\n            draggable,\n        });\n    }\n    /**\n     * Whether or not target can be resized.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.resizable = true;\n     */\n    get resizable(): boolean {\n        return this.getMoveableProps().resizable;\n    }\n    set resizable(resizable: boolean) {\n        this.innerMoveable.setState({\n            resizable,\n        });\n    }\n    /**\n     * Whether or not target can scaled.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.scalable = true;\n     */\n    get scalable(): boolean {\n        return this.getMoveableProps().scalable;\n    }\n    set scalable(scalable: boolean) {\n        this.innerMoveable.setState({\n            scalable,\n        });\n    }\n    /**\n     * Whether or not target can be rotated.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.rotatable = true;\n     */\n    get rotatable(): boolean {\n        return this.getMoveableProps().rotatable;\n    }\n    set rotatable(rotatable: boolean) {\n        this.innerMoveable.setState({\n            rotatable,\n        });\n    }\n    /**\n     * Move the moveable as much as the `pos`.\n     * @param - the values of x and y to move moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.move([0, -10]);\n     */\n    public move(pos: number[]) {\n        this.getMoveable().move(pos);\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: HTMLElement | SVGElement) {\n        return this.getMoveable().isMoveableElement(target);\n    }\n    /**\n     * If the width, height, left, and top of the target change, update the shape of the moveable.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n    private getMoveable() {\n        return this.innerMoveable.preactMoveable;\n    }\n    private getMoveableProps() {\n        return this.getMoveable().props;\n    }\n    private onDragStart = (e: OnDragStart) => {\n        this.trigger(\"dragStart\", e);\n    }\n    private onDrag = (e: OnDrag) => {\n        this.trigger(\"drag\", e);\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        this.trigger(\"dragEnd\", e);\n    }\n    private onResizeStart = (e: OnResizeStart) => {\n        this.trigger(\"resizeStart\", e);\n    }\n    private onResize = (e: OnResize) => {\n        this.trigger(\"resize\", e);\n    }\n    private onResizeEnd = (e: OnResizeEnd) => {\n        this.trigger(\"resizeEnd\", e);\n    }\n    private onScaleStart = (e: OnScaleStart) => {\n        this.trigger(\"scaleStart\", e);\n    }\n    private onScale = (e: OnScale) => {\n        this.trigger(\"scale\", e);\n    }\n    private onScaleEnd = (e: OnScaleEnd) => {\n        this.trigger(\"scaleEnd\", e);\n    }\n    private onRotateStart = (e: OnRotateStart) => {\n        this.trigger(\"rotateStart\", e);\n    }\n    private onRotate = (e: OnRotate) => {\n        this.trigger(\"rotate\", e);\n    }\n    private onRotateEnd = (e: OnRotateEnd) => {\n        this.trigger(\"rotateEnd\", e);\n    }\n}\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable\n * @event dragStart\n * @param {Moveable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable\n * @event drag\n * @param {Moveable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable\n * @event dragEnd\n * @param {Moveable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable\n * @event resizeStart\n * @param {Moveable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable\n * @event resize\n * @param {Moveable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable\n * @event resizeEnd\n * @param {Moveable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable\n * @event scaleStart\n * @param {Moveable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable\n * @event scale\n * @param {Moveable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable\n * @event scaleEnd\n * @param {Moveable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable\n * @event rotateStart\n * @param {Moveable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When rotating, the rotate event is called.\n * @memberof Moveable\n * @event rotate\n * @param {Moveable.OnRotate} - Parameters for the rotate event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotate\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable\n * @event rotateEnd\n * @param {Moveable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\nexport default Moveable;\n"],"names":["tslib_1","props","_super","_this","state","h","Moveable","ref","Component","parentElement","options","e","trigger","element","document","createElement","render","InnerMoveable","onDragStart","onDrag","onDragEnd","onResizeStart","onResize","onResizeEnd","onScaleStart","onScale","onScaleEnd","onRotateStart","onRotate","onRotateEnd","appendChild","children","Object","getMoveableProps","origin","innerMoveable","setState","target","updateRect","draggable","resizable","scalable","rotatable","pos","getMoveable","move","isMoveableElement","preactMoveable","EgComponent"],"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"}