{"version":3,"sources":["Editor/consts.ts","Editor/utils/utils.ts","Editor/Menu/Icon.tsx","Editor/Menu/MoveToolIcon.tsx","Editor/Menu/TextIcon.tsx","Editor/Menu/OvalIcon.tsx","Editor/Menu/RectIcon.tsx","Editor/Menu/CircleIcon.tsx","Editor/Menu/PolygonIcon.tsx","Editor/Menu/CropIcon.tsx","Editor/Menu/RoundRectIcon.tsx","Editor/KeyManager/KeyManager.ts","Editor/Popup/Popup.tsx","Editor/Menu/KeyboardIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/utils/EventBus.ts","Editor/utils/Memory.ts","Editor/Viewport/MoveableMananger.tsx","Editor/utils/MoveableData.ts","Editor/utils/HistoryManager.ts","Editor/utils/Debugger.ts","Editor/Editor.tsx","App.tsx","index.tsx"],"names":["EDITOR_PROPERTIES","PREFIX","userAgent","navigator","isMacintosh","indexOf","prefix","classNames","prefixNames","getContentElement","el","contentEditable","parentElement","connectEditorProps","component","prototype","Object","defineProperty","get","this","props","editor","forEach","name","getId","getAttribute","getIds","els","map","Icon","keys","subContainer","React","onClick","selected","focusSub","onSelect","constructor","id","onSubClick","e","stopPropagation","blur","current","style","display","className","renderIcon","renderSubContainer","subIcons","renderSubIcons","length","key","ref","IconClass","isSelect","onSubSelect","camelize","keyManager","keydown","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","TextIcon","memory","tag","color","target","focus","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","moveableData","getSelectedFrames","cropType","clipPath","splitBracket","renderSubIcon","infos","removeProperties","historyManager","addAction","set","eventBus","requestTrigger","forceUpdate","RoundRectIcon","check","inputEvent","tagName","isContentEditable","KeyManager","console","keycon","KeyController","keylist","isEnable","callback","description","log","join","push","keyup","destroy","altKey","shiftKey","metaKey","ctrlKey","Popup","overlayElement","popupKeyManager","onClose","children","disable","enable","KeyboardIcon","state","renderPopup","setState","ReactDOM","editorElement","MENUS","Menu","menuRefs","select","renderMenus","MenuClass","i","filter","m","Viewport","ids","info","jsx","Math","floor","random","getInfo","jsxs","jsxInfos","prevId","index","makeId","addedIndex","setInfo","nextInfos","isNumber","splice","Promise","resolve","document","querySelector","added","next","findIndex","getElement","targets","removed","find","Tab","title","eventList","renderTab","on","moveableManager","getMoveable","off","Input","input","value","updateValue","setValue","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","type","min","step","pattern","TabInputBox","label","InputType","v","getValue","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","indexes","split","parseFloat","max","round","h","j","data-anchor-index","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","request","isInstant","onChangePos","x","y","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","width","height","onRender","left","top","rotation","addEvent","Folder","fold","multiselect","nextSelected","slice","global","onClickFold","scope","fullName","isSelected","data-file-key","marginLeft","renderProperties","properties","FileComponent","getName","getChildren","nextScope","isObject","defaultProps","_","LabelBox","File","Property","FrameTab","renderProperty","setProperty","setTargets","Align","direction","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveable","moveables","pos","getFrame","prev","subRect","subPos","delta","translate","t","renderFrames","updateRect","viewportPos","Layer","LayerTab","renderFile","setSelectedTargets","getViewportInfos","getSelectedTargets","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","b","a","onChangeComplete","ColorBox","colorInput","textInput","onFocus","onBlur","relatedTarget","contains","onDragStart","preventDefault","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectBox","options","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","getProperties","family","align","weight","decoration","TABS","CurrentTab","Tabs","tabs","classList","remove","onMouseOver","prevSelected","add","onMouseOut","renderTabs","UserTab","data-target-id","EventBus","eventMap","params","cancelAnimationFrame","requestAnimationFrame","trigger","Component","Memory","Map","clear","restoreRender","prevState","viewport","error","result","diff","prevList","removeProperty","render","undoRender","redoRender","undoRenders","redoRenders","MoveableManager","verticalGuidelines","horizontalGuidelines","selectedTargets","selectedMenu","selecto","elementGuidelines","getTargets","isShift","draggable","resizable","throttleResize","clippable","dragArea","checkInput","throttleDragRotate","keepRatio","rotatable","snappable","snapCenter","snapGap","roundable","clipArea","onDrag","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResize","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","selectMenu","onClickGroup","clickTarget","onRenderStart","datas","prevData","isRender","onRenderEnd","onRenderGroupStart","prevDatas","onRenderGroup","onRenderGroupEnd","registerType","MoveableData","createAuto","names","defaultValues","property","MoveableHelper","HistoryManager","undoStack","redoStack","types","undo","redo","undoAction","pop","redoAction","Debugger","isDebug","args","undoCreateElements","removeByIds","restoreElements","appendJSXs","undoSelectTargets","prevs","nexts","getElements","redoSelectTargets","Editor","horizontalGuides","verticalGuides","zoom","debug","infiniteViewer","menu","onMenuChange","resize","onWheel","deltaY","horizontalSnapGuides","verticalSnapGuides","unit","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","pinchThreshold","checkBlur","nodeName","isMoveableElement","some","stop","onDragEnd","isDrag","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","container","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","undefined","contentElement","hasAttribute","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","then","dragStart","isRestore","promiseState","appendElements","createFrame","elements","Tag","removeElements","removeFrame","removeTargets","getInfos","selectedTarget","isUpdate","window","addEventListener","passive","deltaX","removeEventListener","selectIcon","getSelected","position","appendElement","activeElement","selection","getSelection","removeAllRanges","App","href","src","alt","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01d81e8b.chunk.js","sourcesContent":["export const EDITOR_PROPERTIES = [\"memory\", \"eventBus\", \"keyManager\", \"moveableData\", \"moveableManager\", \"historyManager\", \"console\"];\nexport const PREFIX = \"scena-\";\nexport const DATA_SCENA_ELEMENT_ID = \"data-scena-element-id\";\nexport const DATA_SCENA_ELEMENT = \"data-scena-element\";\nexport const userAgent = ((typeof navigator !== \"undefined\" && navigator) || {} as any).userAgent || \"\";\nexport const isMacintosh = userAgent.indexOf('Macintosh') >= 0 || userAgent.indexOf('iPad') >= 0 || userAgent.indexOf('iPhone') >= 0;\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX, DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { EDITOR_PROPERTIES } from \"../consts\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\")  {\n        return el;\n    }\n    return null;\n}\n\nexport function connectEditorProps(component: any) {\n    const prototype = component.prototype;\n    Object.defineProperty(prototype, \"editor\", {\n        get: function () {\n            return this.props.editor;\n        },\n    });\n    EDITOR_PROPERTIES.forEach(name => {\n        Object.defineProperty(prototype, name, {\n            get: function () {\n                return this.props.editor[name];\n            },\n        });\n    })\n};\n\nexport function getId(el: HTMLElement | SVGElement) {\n    return el.getAttribute(DATA_SCENA_ELEMENT_ID)!;\n}\nexport function getIds(els: Array<HTMLElement | SVGElement>): string[] {\n    return els.map(el => getId(el));\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport Memory from \"../utils/Memory\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\n\n\nexport interface Maker {\n    tag: string,\n    props: IObject<any>,\n    style: IObject<any>,\n}\n\n@connectEditorProps\nexport default abstract class Icon extends React.PureComponent<{\n    editor: Editor,\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: (memory: Memory) => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => { };\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n            >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass editor={this.props.editor} selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) { }\n    public componentDidMount() {\n        const keys = this.keys;\n        if (keys.length) {\n            this.keyManager.keydown(keys, () => {\n                this.onClick();\n            }, (this.constructor as any).id);\n        }\n    }\n}\n\nexport default interface Icon extends EditorInterface {}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        props: {\n            contentEditable: true,\n        },\n        style: {\n            color: memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = this.moveableData.getSelectedFrames()[0];\n        let cropType = this.memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const moveableData = this.moveableData;\n        const frame = moveableData.getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    const infos = moveableData.removeProperties(\"clip-path\", \"clip\");\n\n                    this.historyManager.addAction(\"renders\", { infos });\n                }\n            }\n        }\n\n        this.memory.set(\"crop\", id);\n        this.eventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import KeyController from \"keycon\";\nimport Debugger from \"../utils/Debugger\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n    const tagName = target.tagName;\n\n    if (\n        target.isContentEditable\n        || tagName === \"INPUT\" || tagName === \"TEXTAREA\"\n    ) {\n        return false;\n    }\n    return true;\n}\nexport default class KeyManager {\n    constructor(private console: Debugger) {}\n    public keycon = new KeyController();\n    public keylist: Array<[string[], string]> = [];\n    public isEnable = true;\n\n    public enable() {\n        this.isEnable = true;\n    }\n    public disable() {\n        this.isEnable = false;\n    }\n    public keydown(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keydown(keys, e => {\n            if (!this.isEnable || !check(e)) {\n                return false;\n            }\n\n            if (description) {\n                this.console.log(`keydown: ${keys.join(\" + \")}`, description);\n            }\n            callback(e);\n        });\n        if (description) {\n            this.keylist.push([\n                keys,\n                description,\n            ]);\n        }\n    }\n    public keyup(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keyup(keys, e => {\n            if (!this.isEnable || !check(e)) {\n                return false;\n            }\n            if (description) {\n                this.console.log(`keyup: ${keys.join(\" + \")}`, description);\n            }\n            callback(e);\n        });\n        if (description) {\n            this.keylist.push([\n                keys,\n                description,\n            ]);\n        }\n    }\n    get altKey() {\n        return this.keycon.altKey;\n    }\n    get shiftKey() {\n        return this.keycon.shiftKey;\n    }\n    get metaKey() {\n        return this.keycon.metaKey;\n    }\n    get ctrlKey() {\n        return this.keycon.ctrlKey;\n    }\n    public destroy() {\n        this.keycon.destroy();\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport \"./Popup.css\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport KeyManager from \"../KeyManager/KeyManager\";\n\n@connectEditorProps\nexport default class Popup extends React.PureComponent<{\n    editor: Editor,\n    onClose: () => any,\n}> {\n    public overlayElement = React.createRef<HTMLDivElement>();\n    public popupKeyManager = new KeyManager(this.console);\n    public render() {\n        return <div ref={this.overlayElement} className={prefix(\"overlay\")} onClick={this.onClick}>\n            <div className={prefix(\"popup\")}>\n                <div className={prefix(\"close\")} onClick={this.props.onClose}></div>\n                {this.props.children}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.keyManager.disable();\n        this.popupKeyManager.keyup([\"esc\"], () => {\n            this.props.onClose();\n        });\n    }\n    public componentWillUnmount() {\n        this.keyManager.enable();\n        this.popupKeyManager.destroy();\n    }\n    public onClick = (e: any) => {\n        e.stopPropagation();\n        if (e.target === this.overlayElement.current) {\n            this.props.onClose();\n        }\n    }\n}\n\n\nexport default interface Popup extends EditorInterface {}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Icon from \"./Icon\";\nimport { prefix } from \"../utils/utils\";\nimport Popup from \"../Popup/Popup\";\n\nexport default class KeyboardIcon extends Icon {\n    public static id = \"Shortcuts\";\n    public keys = [\"s\"];\n    public state = {\n        renderPopup: false,\n    }\n    public renderIcon() {\n        return (\n            <div className={prefix(\"i\")}>\n                <div className={prefix(\"keyboard\")}>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"space\")}></div>\n                </div>\n                {this.state.renderPopup && this.renderPopup()}\n            </div>\n        );\n    }\n    public renderPopup() {\n        return ReactDOM.createPortal(<Popup editor={this.editor} onClose={this.onClose}>\n            <h2>Shortcuts</h2>\n            <ul className={prefix(\"key-list\")}>\n                {this.keyManager.keylist.map(([keys, description]) => {\n                    return <li>\n                        <p className={prefix(\"key-description\")}>{description} <strong>{keys.map(key => <span>{key}</span>)}</strong></p>\n                    </li>\n                })}\n            </ul>\n        </Popup>, this.editor.editorElement.current!);\n    }\n    public onClick = () => {\n        this.setState({\n            renderPopup: true,\n        })\n    }\n    public onClose = () => {\n        this.setState({\n            renderPopup: false,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveToolIcon from \"./MoveToolIcon\";\nimport \"./Menu.css\";\nimport TextIcon from \"./TextIcon\";\nimport CropIcon from \"./CropIcon\";\nimport RectIcon from \"./RectIcon\";\nimport OvalIcon from \"./OvalIcon\";\nimport RoundRectIcon from \"./RoundRectIcon\";\nimport Icon from \"./Icon\";\nimport Editor from \"../Editor\";\nimport KeyboardIcon from \"./KeyboardIcon\";\n\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    editor: Editor,\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public menuRefs: Array<React.RefObject<Icon>> = [];\n    public render() {\n        return (\n            <div className={prefix(\"menu\")}>\n                {this.renderMenus()}\n                <div className={prefix(\"menu-bottom\")}>\n                    <KeyboardIcon editor={this.props.editor} />\n                </div>\n            </div>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n        const menuRefs = this.menuRefs;\n        const editor = this.props.editor;\n\n        return MENUS.map((MenuClass, i) => {\n            const id = MenuClass.id;\n            if (!menuRefs[i]) {\n                menuRefs[i] = React.createRef();\n            }\n            return <MenuClass ref={menuRefs[i]} key={id} editor={editor} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n    public blur() {\n        this.menuRefs.forEach(ref => {\n            if (!ref.current) {\n                return;\n            }\n            ref.current.blur();\n        });\n    }\n}\n","import * as React from \"react\";\nimport { IObject, find, findIndex } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport { isNumber } from \"util\";\n\nexport interface ElementInfo {\n    jsx: any;\n    el: HTMLElement | null;\n    id: string;\n    name: string;\n    frame: IObject<any>;\n    addedIndex?: number;\n}\n\nexport interface AddedInfo {\n    added: ElementInfo[];\n    next: ElementInfo[];\n}\nexport interface RemovedInfo {\n    removed: ElementInfo[];\n    next: ElementInfo[];\n}\nexport interface JSXInfo {\n    jsx: any;\n    name: string;\n    frame?: IObject<any>;\n    id?: string;\n    index?: number;\n}\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n}> {\n    public state: {\n        ids: IObject<ElementInfo | null>;\n        infos: ElementInfo[],\n    } = {\n            ids: {},\n            infos: [],\n        };\n    public render() {\n        const style = this.props.style;\n        return <div className={prefix(\"viewport\")} style={style}>\n            {this.props.children}\n            {this.state.infos.map(info => info.jsx)}\n        </div>;\n    }\n    public makeId() {\n        const ids = this.state.ids;\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.state.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.state.ids[id];\n    }\n    public getElement(id: string) {\n        const info = this.getInfo(id);\n\n        return info ? info.el : null;\n    }\n    public getInfos() {\n        return this.state.infos;\n    }\n    public appendJSXs(jsxs: JSXInfo[]): Promise<AddedInfo> {\n        const infos = this.state.infos;\n        const jsxInfos = jsxs.map(({ jsx, name, id: prevId, frame, index }) => {\n            const id = prevId || this.makeId();\n            const info: ElementInfo = {\n                jsx: React.cloneElement(jsx, {\n                    \"data-scena-element\": true,\n                    \"data-scena-element-id\": id,\n                    \"key\": id,\n                }),\n                frame: frame || {},\n                el: null,\n                id,\n                name,\n                addedIndex: index,\n            };\n            this.setInfo(id, info);\n\n            return info;\n        });\n        const nextInfos = [...infos];\n\n        jsxInfos.forEach(info => {\n            if (isNumber(info.addedIndex)) {\n                nextInfos.splice(info.addedIndex, 0, info);\n            } else {\n                info.addedIndex = nextInfos.length;\n                nextInfos.push(info);\n            }\n        });\n\n        return new Promise(resolve => {\n            this.setState({\n                infos: nextInfos,\n            }, () => {\n                const infos = jsxInfos.map((info, i) => {\n                    const id = info.id;\n\n                    const target = document.querySelector<HTMLElement>(`[data-scena-element-id=\"${id}\"]`)!;\n                    info.el = target;\n\n                    return { ...info };\n                });\n\n                resolve({\n                    added: infos,\n                    next: nextInfos,\n                });\n            });\n        });\n    }\n    public findIndex(id: string) {\n        return findIndex(this.state.infos, info => info.id === id);\n    }\n    public getElements(ids: string[]) {\n        return ids.map(id => this.getElement(id)).filter(el => el) as Array<HTMLElement | SVGElement>;\n    }\n    public removeTargets(targets: Array<HTMLElement | SVGElement>): Promise<RemovedInfo> {\n        const { ids, infos } = this.state;\n\n        const removed = targets.map(target => {\n            const info = find(infos, ({ el }) => el === target);\n\n            if (!info) {\n                return undefined;\n            }\n\n            delete ids[info.id];\n            delete info.el;\n\n            infos.splice(infos.indexOf(info), 1);\n\n            return { ...info };\n        }).filter(info => info) as ElementInfo[];\n\n        return new Promise(resolve => {\n            this.setState({\n                ids: { ...ids },\n                infos: [...infos],\n            }, () => {\n                resolve({\n                    removed,\n                    next: infos,\n                });\n            })\n        });\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\n\n@connectEditorProps\nexport default abstract class Tab extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public static id: string;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public eventList: Array<[string, any]> = [];\n    public render() {\n        return (\n            <div className={prefix(\"tab\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public addEvent(name: string, callback: any) {\n        this.eventList.push([name, callback]);\n        this.eventBus.on(name, callback);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public componentWillUnmount() {\n        const eventBus = this.eventBus;\n        this.eventList.forEach(([name, callback]) => {\n            eventBus.off(name, callback);\n        });\n    }\n}\nexport default interface Tab extends React.PureComponent<{ editor: Editor }>, EditorInterface {};\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport \"./Input.css\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<I>();\n    public getValue(): any {\n        return;\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <input ref={this.input as any}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport \"./TabInputBox.css\";\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </div>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Anchor.css\";\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <div className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </div>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender);\n        this.addEvent(\"renderGroup\", this.onRender);\n        this.addEvent(\"setSelectedTargets\", this.onRender);\n\n        this.onRender();\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.yInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\nimport { IObject, isObject } from \"@daybrush/utils\";\nimport \"./Folder.css\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\n\nexport default class Folder extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<any>,\n    selected: string[] | null,\n    multiselect?: boolean,\n    onSelect: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any) => any,\n}> {\n    public static defaultProps = {\n        getId: (_: any, id: any) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public state = {\n        fold: false,\n    };\n    isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    render() {\n        const {\n            scope,\n            name,\n        } = this.props;\n\n        const fullName = scope.join(\"///\");\n        return <div className={prefix(\"folder\")}>\n            {name && <div className={prefix(\"tab-input\", \"full\", \"file\",  this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")} style={{\n                marginLeft: scope.length ? \"10px\" : \"\",\n            }}>\n                {this.renderProperties()}\n            </div>\n        </div>\n    }\n    public onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect(nextSelected);\n        } else {\n            onSelect([key]);\n        }\n    }\n    public renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            FileComponent,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = properties[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n\n            nextScope.push(getId!(value, key));\n            const fullName = nextScope.join(\"///\");\n            const children = getChildren!(value, key);\n\n            if (children && isObject(children)) {\n                return <Folder key={fullName}\n                    name={name} scope={nextScope} properties={value}\n                    multiselect={multiselect}\n                    getId={getId} getName={getName}\n                    selected={selected} onSelect={onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullName} className={prefix(\"file\", this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullName={fullName} />\n            </div>;\n        });\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            <h3>{label}</h3>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport \"./Folder.css\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullName: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport \"../Folder/Folder.css\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport Folder from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport \"./FrameTab.css\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public title = \"Frame\";\n    public state: {\n        selected: string[] | null,\n    } = {\n        selected: null,\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = this.moveableData.getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder name=\"\" properties={frame.get()} scope={[]} selected={selected}\n                onSelect={this.onSelect} FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Property name={name} fullName={fullName} scope={scope} value={value} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = this.moveableData.getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        this.editor.setProperty(scope, value, true);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = null;\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix, getId } from \"../../utils/utils\";\nimport \"./AlignTab.css\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n            const infos = moveables.map(m => {\n                const target = m.state.target!;\n                const frame = this.moveableData.getFrame(target);\n\n                if (frame) {\n                    const prev = frame.get();\n                    const subRect = m.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n\n                    return { id: getId(target), prev, next: frame.get() };\n                }\n                return false;\n            }).filter(target => target);\n\n\n            this.historyManager.addAction(\"renders\", {\n                infos,\n            });\n            this.moveableData.renderFrames();\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport Folder from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport { ElementInfo } from \"../../Viewport/Viewport\";\nimport Layer from \"./Layer\";\nimport { getIds } from \"../../utils/utils\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = this.editor.getViewportInfos();\n        const selected = getIds(this.moveableData.getSelectedTargets());\n\n        return <Folder\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            getId={(v: ElementInfo) => v.id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={() => false}\n            selected={selected}\n            onSelect={this.onSelect}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullName={fullName} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"setSelectedTargets\", this.setSelectedTargets);\n    }\n\n    private onSelect = (selected: string[]) => {\n        this.eventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        })\n    }\n    private setSelectedTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport \"./ColorBox.css\";\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </div>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.input.current!.contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.input.current!.focus();\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\n\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = this.moveableData.getSelectedFrames();\n        let backgroundColor = this.memory.get(\"background-color\");\n        let color = this.memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        this.memory.set(\"background-color\", v);\n        this.editor.setProperty([\"background-color\"], v);\n    }\n    public onChangeTextColor = (v: string) => {\n        this.memory.set(\"color\", v);\n        this.editor.setProperty([\"color\"], v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <select ref={this.input as any}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </select>\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport \"./FontTab.css\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = this.moveableData.getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        this.memory.set(name, v);\n        this.editor.setProperty([name], v, true);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Tabs.css\";\nimport TransformTab from \"./TransformTab\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport Editor from \"../Editor\";\n\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public tabs = React.createRef<HTMLDivElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <div className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.blur}>\n            {this.renderTabs()}\n        </div>;\n    }\n    public renderTabs() {\n        const editor = this.props.editor;\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            return <div key={id} className={prefix(\"tab-icon\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon-label\")} onClick={this.onClick}><span>{UserTab.id}</span></div>\n                {isSelected && <UserTab editor={editor} />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public blur = () => {\n        this.tabs.current!.classList.remove(\"scena-over\");\n    }\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.classList.add(\"scena-over\");\n    }\n}\n","import Component from \"@egjs/component\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass EventBus extends Component {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nexport default EventBus;\n","export default class Memory {\n    public map = new Map<any, any>();\n    public get(key: any) {\n        return this.map.get(key);\n    }\n    public set(key: any, value: any) {\n        return this.map.set(key, value);\n    }\n    public clear() {\n        this.map.clear();\n    }\n}\n","import * as React from \"react\";\nimport Moveable from \"react-moveable\";\nimport { getContentElement, connectEditorProps, getId } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/list-differ\";\n\nfunction restoreRender(id: string, state: IObject<any>, prevState: IObject<any>, editor: Editor) {\n    const el = editor.viewport.current!.getElement(id);\n\n    if (!el) {\n        console.error(\"No Element\");\n        return false;\n    }\n    const moveableData = editor.moveableData;\n    const frame = moveableData.getFrame(el);;\n\n    frame.clear();\n    frame.set(state);\n\n    const result = diff(Object.keys(prevState), Object.keys(state));\n    const { removed, prevList } = result;\n\n    removed.forEach(index => {\n        el.style.removeProperty(prevList[index]);\n    });\n    moveableData.render(el);\n    return true;\n}\nfunction undoRender({ id, prev, next }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, prev, next, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRender({ id, prev, next }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, next, prev, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction undoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, prev, next }: IObject<any>) => {\n        restoreRender(id, prev, prev, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, next, prev }: IObject<any>) => {\n        restoreRender(id, next, prev, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\n\n@connectEditorProps\nexport default class MoveableManager extends React.PureComponent<{\n    editor: Editor,\n    selectedTargets: Array<HTMLElement | SVGElement>;\n    selectedMenu: string,\n    verticalGuidelines: number[],\n    horizontalGuidelines: number[],\n}> {\n    public moveable = React.createRef<Moveable>();\n    public getMoveable() {\n        return this.moveable.current!;\n    }\n    public render() {\n        const {\n            editor,\n            verticalGuidelines,\n            horizontalGuidelines,\n            selectedTargets,\n            selectedMenu,\n        } = this.props;\n        // const\n\n        const {\n            moveableData,\n            keyManager,\n            eventBus,\n            selecto,\n            memory,\n        } = editor;\n        const elementGuidelines = [...moveableData.getTargets()].filter(el => {\n            return selectedTargets.indexOf(el) === -1;\n        });\n        const isShift = keyManager.shiftKey;\n        return <Moveable\n            ref={this.moveable}\n            targets={selectedTargets}\n            draggable={true}\n            resizable={true}\n            throttleResize={1}\n            clippable={selectedMenu === \"Crop\"}\n            dragArea={selectedTargets.length > 1 || selectedMenu !== \"Text\"}\n            checkInput={selectedMenu === \"Text\"}\n            throttleDragRotate={isShift ? 45 : 0}\n            keepRatio={isShift}\n            rotatable={true}\n            snappable={true}\n            snapCenter={true}\n            snapGap={false}\n            roundable={true}\n            verticalGuidelines={verticalGuidelines}\n            horizontalGuidelines={horizontalGuidelines}\n            elementGuidelines={elementGuidelines}\n            clipArea={true}\n            onDragStart={moveableData.onDragStart}\n            onDrag={moveableData.onDrag}\n            onDragGroupStart={moveableData.onDragGroupStart}\n            onDragGroup={moveableData.onDragGroup}\n\n            onScaleStart={moveableData.onScaleStart}\n            onScale={moveableData.onScale}\n            onScaleGroupStart={moveableData.onScaleGroupStart}\n            onScaleGroup={moveableData.onScaleGroup}\n\n            onResizeStart={moveableData.onResizeStart}\n            onResize={moveableData.onResize}\n            onResizeGroupStart={moveableData.onResizeGroupStart}\n            onResizeGroup={moveableData.onResizeGroup}\n\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n            onRotateGroupStart={moveableData.onRotateGroupStart}\n            onRotateGroup={moveableData.onRotateGroup}\n\n            defaultClipPath={memory.get(\"crop\") || \"inset\"}\n            onClip={moveableData.onClip}\n\n            onDragOriginStart={moveableData.onDragOriginStart}\n            onDragOrigin={e => {\n                moveableData.onDragOrigin(e);\n            }}\n\n            onRound={moveableData.onRound}\n\n            onClick={e => {\n                const target = e.inputTarget as any;\n                if (e.isDouble && target.isContentEditable) {\n                    editor.selectMenu(\"Text\");\n                    const el = getContentElement(target);\n\n                    if (el) {\n                        el.focus();\n                    }\n                }\n            }}\n            onClickGroup={e => {\n                selecto.current!.clickTarget(e.inputEvent, e.inputTarget);\n            }}\n            onRenderStart={e => {\n                e.datas.prevData = moveableData.getFrame(e.target).get();\n            }}\n            onRender={e => {\n                e.datas.isRender = true;\n                eventBus.requestTrigger(\"render\");\n            }}\n            onRenderEnd={e => {\n                eventBus.requestTrigger(\"render\");\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                this.historyManager.addAction(\"render\", {\n                    id: getId(e.target),\n                    prev: e.datas.prevData,\n                    next: moveableData.getFrame(e.target).get(),\n                });\n            }}\n            onRenderGroupStart={e => {\n                e.datas.prevDatas = e.targets.map(target => moveableData.getFrame(target).get());\n            }}\n            onRenderGroup={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n                e.datas.isRender = true;\n            }}\n            onRenderGroupEnd={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                const prevDatas = e.datas.prevDatas;\n                const infos = e.targets.map((target, i) => {\n                    return {\n                        id: getId(target),\n                        prev: prevDatas[i],\n                        next: moveableData.getFrame(target).get(),\n                    }\n                });\n                this.historyManager.addAction(\"renders\", {\n                    infos,\n                });\n            }}\n        ></Moveable>\n    }\n    public componentDidMount() {\n        this.historyManager.registerType(\"render\", undoRender, redoRender);\n        this.historyManager.registerType(\"renders\", undoRenders, redoRenders);\n        this.keyManager.keydown([\"shift\"], () => {\n            this.forceUpdate();\n        });\n        this.keyManager.keyup([\"shift\"], () => {\n            this.forceUpdate();\n        });\n    }\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n}\nexport default interface MoveableManager extends EditorInterface {}\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame } from \"scenejs\";\nimport { getId } from \"./utils\";\n\nexport default class MoveableData extends MoveableHelper {\n    public selectedTargets: Array<HTMLElement | SVGElement> = [];\n    constructor(private memory: Memory) {\n        super({\n            createAuto: true,\n        })\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>) {\n        this.selectedTargets = targets;\n    }\n    public getSelectedTargets() {\n        return this.selectedTargets;\n    }\n    public getSelectedFrames(): Frame[] {\n        return this.getSelectedTargets().map(target => this.getFrame(target));\n    }\n    public renderFrames() {\n        this.getSelectedTargets().forEach((target: any) => {\n            this.render(target);\n        });\n    }\n    public setProperty(names: string[], value: any) {\n        const targets = this.getSelectedTargets();\n\n        const infos = targets.map(target => {\n            const frame = this.getFrame(target);\n            const prev = frame.get();\n            frame.set(...names, value);\n            const next = frame.get();\n\n            return { id: getId(target), prev, next };\n\n        });\n        this.renderFrames();\n\n        return infos;\n    }\n    public removeProperties(...names: string[]) {\n        return this.getSelectedTargets().map(target => {\n            const frame = this.getFrame(target);\n            const prev = frame.get();\n\n            names.forEach(name => {\n                frame.remove(name);\n                target.style.removeProperty(name);\n            });\n            const next = frame.get();\n\n            return { id: getId(target), prev, next };\n        });\n    }\n    public getProperties(properties: string[][], defaultValues: any[]) {\n        const frames = this.getSelectedFrames();\n        const memory = this.memory;\n\n        if (!frames.length) {\n            return properties.map((property, i) => memory.get(property.join(\"///\")) || defaultValues[i]);\n        }\n\n        return properties.map((property, i) => {\n            const frameValues = frames.map(frame => frame.get(...property));\n\n            return frameValues.filter(color => color)[0] || defaultValues[i];\n        });\n    }\n\n}\n","import { IObject } from \"@daybrush/utils\";\nimport Editor from \"../Editor\";\n\nexport type RestoreCallback = (props: IObject<any>, editor: Editor) => any;\nexport interface HistoryAction {\n    type: string;\n    props: IObject<any>;\n}\nexport default class HistoryManager {\n    private undoStack: HistoryAction[] = [];\n    private redoStack: HistoryAction[] = [];\n    private types: IObject<{ redo: RestoreCallback, undo: RestoreCallback }> = {};\n    constructor(private editor: Editor) {}\n    public registerType(type: string, undo: RestoreCallback, redo: RestoreCallback) {\n        this.types[type] = { undo, redo };\n    }\n    public addAction(type: string, props: IObject<any>) {\n        this.undoStack.push({\n            type,\n            props,\n        });\n        this.redoStack = [];\n    }\n    public undo() {\n        const undoAction = this.undoStack.pop();\n\n        if (!undoAction) {\n            return;\n        }\n        this.editor.console.log(`undo: ${undoAction.type}`, undoAction.props);\n        this.types[undoAction.type].undo(undoAction.props, this.editor);\n        this.redoStack.push(undoAction);\n    }\n    public redo() {\n        const redoAction = this.redoStack.pop();\n\n        if (!redoAction) {\n            return;\n        }\n        this.editor.console.log(`redo: ${redoAction.type}`, redoAction.props);\n        this.types[redoAction.type].redo(redoAction.props, this.editor);\n        this.undoStack.push(redoAction);\n    }\n}\n","export default class Debugger {\n    constructor(private isDebug?: boolean) {}\n    public log(...args: any[]) {\n        if (!this.isDebug) {\n            return;\n        }\n        console.log(\"Scena Debugger:\", ...args);\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport \"./Editor.css\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport, { JSXInfo, ElementInfo } from \"./Viewport/Viewport\";\nimport { getContentElement, prefix, getIds } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport Memory from \"./utils/Memory\";\nimport MoveableManager from \"./Viewport/MoveableMananger\";\nimport MoveableData from \"./utils/MoveableData\";\nimport KeyManager from \"./KeyManager/KeyManager\";\nimport { ScenaEditorState, TagAppendInfo } from \"./types\";\nimport HistoryManager from \"./utils/HistoryManager\";\nimport Debugger from \"./utils/Debugger\";\nimport { isMacintosh } from \"./consts\";\n\nfunction undoCreateElements({ infos }: IObject<any>, editor: Editor) {\n    editor.removeByIds(infos.map((info: ElementInfo) => info.id), true);\n}\nfunction restoreElements({ infos }: IObject<any>, editor: Editor) {\n    editor.appendJSXs(infos.map((info: ElementInfo) => ({\n        id: info.id,\n        jsx: info.jsx,\n        frame: info.frame,\n        name: info.name,\n        index: info.addedIndex,\n    })), true);\n}\nfunction undoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(prevs), true);\n}\nfunction redoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(nexts), true);\n}\nexport default class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n    debug?: boolean,\n}, Partial<ScenaEditorState>> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: ScenaEditorState = {\n        selectedTargets: [],\n        horizontalGuides: [],\n        verticalGuides: [],\n        zoom: 1,\n        selectedMenu: \"MoveTool\",\n    };\n    public historyManager = new HistoryManager(this);\n    public console = new Debugger(this.props.debug);\n    public eventBus = new EventBus();\n    public memory = new Memory();\n    public moveableData = new MoveableData(this.memory);\n    public keyManager = new KeyManager(this.console);\n\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveableManager = React.createRef<MoveableManager>();\n    public viewport = React.createRef<Viewport>();\n    public tabs = React.createRef<Tabs>();\n    public editorElement = React.createRef<HTMLDivElement>();\n    public render() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveableManager,\n            viewport,\n            menu,\n            tabs,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            selectedTargets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = [0, height, height / 2, ...state.horizontalGuides];\n        const verticalSnapGuides = [0, width, width / 2, ...state.verticalGuides];\n        let unit = 50;\n\n        if (zoom < 0.8) {\n            unit = Math.floor(1 / zoom) * 50;\n        }\n        return (\n            <div className={prefix(\"editor\")} ref={this.editorElement}>\n                <Tabs ref={tabs} editor={this}></Tabs>\n                <Menu ref={menu} editor={this} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport} style={{\n                        width: `${width}px`,\n                        height: `${height}px`,\n                    }}>\n                        <MoveableManager\n                            ref={moveableManager}\n                            selectedTargets={selectedTargets}\n                            selectedMenu={selectedMenu}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                            editor={this}\n                        ></MoveableManager>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[\"[data-scena-element]\"]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(\"data-scena-element\")) {\n                                e.stop();\n                                this.setSelectedTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || state.selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setSelectedTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveableManager.current!.getMoveable().dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </div>\n        );\n    }\n    public promiseState(state: Partial<ScenaEditorState>) {\n        return new Promise(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public getSelectedTargets() {\n        return this.state.selectedTargets;\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        return this.promiseState({\n            selectedTargets: targets,\n        }).then(() => {\n            if (!isRestore) {\n                const prevs = getIds(this.moveableData.getSelectedTargets());\n                const nexts = getIds(targets);\n                this.historyManager.addAction(\"selectTargets\", { prevs, nexts });\n            }\n            this.moveableData.setSelectedTargets(targets);\n            this.eventBus.trigger(\"setSelectedTargets\");\n            return targets;\n        });\n    }\n    public appendJSX(jsx: any, name: string, frame: IObject<any> = {}) {\n        return this.appendJSXs([{ jsx, name, frame }]).then(targets => targets[0]);\n    }\n    public appendElement(tag: any, props: IObject<any>, name: string, frame: IObject<any> = {}) {\n        return this.appendElements([{ tag, props, name, frame }]).then(target => target[0]);\n    }\n    public appendJSXs(jsxs: JSXInfo[], isRestore?: boolean): Promise<Array<HTMLElement | SVGElement>> {\n        return this.viewport.current!.appendJSXs(jsxs).then(({\n            added,\n        }) => {\n            !isRestore && this.historyManager.addAction(\"createElements\", { infos: added });\n            const data = this.moveableData;\n            const targets = added.map(info => {\n                data.createFrame(info.el!, info.frame);\n                data.render(info.el!);\n\n                return info.el!;\n            }).filter(el => el);\n            this.setSelectedTargets([added[0].el!], true);\n\n            return targets;\n        });\n    }\n    public appendElements(elements: TagAppendInfo[]): Promise<Array<HTMLElement | SVGElement>> {\n        return this.appendJSXs(elements.map(({ props, name, frame, tag: Tag }) => ({\n            jsx: <Tag {...props}></Tag>,\n            name,\n            frame,\n        })));\n    }\n    public removeByIds(ids: string[], isRestore?: boolean) {\n        return this.removeElements(this.viewport.current!.getElements(ids), isRestore);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public removeElements(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        targets.forEach(target => {\n            this.moveableData.removeFrame(target);\n        });\n        const viewport = this.viewport.current!;\n        const indexes = getIds(targets).map(id => viewport.findIndex(id!)).filter(id => id > -1);\n        const index = indexes.length ? Math.min(...indexes) : -1;\n\n        return viewport.removeTargets(targets).then(({ removed }) => {\n            const infos = viewport.getInfos();\n            const selectedTarget = infos[index] || infos[index - 1];\n\n            this.setSelectedTargets(selectedTarget ? [selectedTarget.el!] : [], true);\n            !isRestore && this.historyManager.addAction(\"removeElements\", {\n                infos: removed,\n            });\n            return targets;\n        });\n    }\n    public setProperty(scope: string[], value: any, isUpdate?: boolean) {\n        const infos = this.moveableData.setProperty(scope, value);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public selectMenu(menu: string) {\n        this.menu.current!.select(menu);\n    }\n    public getViewportInfos() {\n        return this.viewport.current!.state.infos;\n    }\n    public componentDidMount() {\n        const {\n            infiniteViewer,\n            memory,\n            eventBus,\n        } = this;\n        memory.set(\"background-color\", \"#4af\");\n        memory.set(\"color\", \"#333\");\n\n        requestAnimationFrame(() => {\n            infiniteViewer.current!.scrollCenter();\n        });\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"wheel\", this.onWheel, {\n            passive: false,\n        });\n        const viewport = this.viewport.current!\n\n\n        eventBus.on(\"blur\", () => {\n            this.menu.current!.blur();\n            this.tabs.current!.blur();\n        });\n        eventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setSelectedTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        eventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"z\"], () => {\n            this.historyManager.undo();\n        }, \"Undo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"z\"], () => {\n            this.historyManager.redo();\n        }, \"Redo\");\n        this.keyManager.keydown([\"left\"], e => {\n            this.getMoveable().request(\"draggable\", { deltaX: -10}, true);\n            e.inputEvent.preventDefault();\n        }, \"Move Left\");\n        this.keyManager.keydown([\"up\"], e => {\n            this.getMoveable().request(\"draggable\", { deltaY: -10}, true);\n            e.inputEvent.preventDefault();\n        }, \"Move Up\");\n        this.keyManager.keydown([\"right\"], e => {\n            this.getMoveable().request(\"draggable\", { deltaX: 10}, true);\n            e.inputEvent.preventDefault();\n        }, \"Move Right\");\n        this.keyManager.keydown([\"down\"], e => {\n            this.getMoveable().request(\"draggable\", { deltaY: 10}, true);\n            e.inputEvent.preventDefault();\n        }, \"Move Down\");\n        this.keyManager.keyup([\"backspace\"], () => {\n            this.removeElements(this.moveableData.getSelectedTargets());\n        }, \"Delete\");\n\n        this.historyManager.registerType(\"createElements\", undoCreateElements, restoreElements);\n        this.historyManager.registerType(\"removeElements\", restoreElements, undoCreateElements);\n        this.historyManager.registerType(\"selectTargets\", undoSelectTargets, redoSelectTargets);\n        this.console.log(\"keylist\", this.keyManager.keylist);\n    }\n    public componentWillUnmount() {\n        this.eventBus.off();\n        this.memory.clear();\n        this.moveableData.clear();\n        this.keyManager.destroy();\n        window.removeEventListener(\"resize\", this.onResize);\n        window.removeEventListener(\"wheel\", this.onWheel);\n    }\n\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker(this.memory);\n        const scrollTop = -infiniteViewer.getScrollTop() + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n\n        const style = {\n            top: `${top}px`,\n            left: `${left}px`,\n            position: \"absolute\",\n            width: `${width}px`,\n            height: `${height}px`,\n            ...maker.style,\n        } as any;\n        this.appendElement(maker.tag, maker.props, `(${selectIcon.id})`, style).then(selectIcon.makeThen);\n        return true;\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        const selection = document.getSelection()!;\n\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        this.eventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n    private onWheel = (e: any) => {\n        if (this.keyManager.altKey) {\n            e.preventDefault();\n            this.setState({\n                zoom: Math.max(0.1, this.state.zoom + e.deltaY / 300),\n            });\n        }\n    }\n}\n","import * as React from \"react\";\nimport Editor from \"./Editor/Editor\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor\n                ref={this.editor}\n                debug={false}\n                />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        // (window as any).a = this.editor.current!;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <p className=\"badges\">\n                    <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n                    </a>\n                    <br/>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n                    <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n                </p>,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"400px\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n        ], true);\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}