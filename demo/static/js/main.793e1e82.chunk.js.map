{"version":3,"sources":["consts.ts","Editor/utils/utils.ts","Editor/utils/EventBus.ts","Editor/Menu/Icon.tsx","Editor/KeyManager/KeyManager.ts","Editor/Menu/MoveToolIcon.tsx","Editor/utils/Memory.ts","Editor/Menu/TextIcon.tsx","Editor/utils/MoveableData.ts","Editor/Menu/OvalIcon.tsx","Editor/Menu/RectIcon.tsx","Editor/Menu/CircleIcon.tsx","Editor/Menu/PolygonIcon.tsx","Editor/Menu/CropIcon.tsx","Editor/Menu/RoundRectIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/Editor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PREFIX","prefix","classNames","prefixNames","getContentElement","el","contentEditable","parentElement","EventBus","eventMap","name","params","this","cancelAnimationFrame","requestAnimationFrame","trigger","Component","Icon","keys","subContainer","React","onClick","props","selected","focusSub","onSelect","constructor","id","onSubClick","e","stopPropagation","blur","current","style","display","className","renderIcon","renderSubContainer","subIcons","renderSubIcons","length","key","ref","IconClass","isSelect","onSubSelect","camelize","on","callback","KeyController","global","keydown","target","inputEvent","tagName","isContentEditable","check","off","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","Memory","Map","set","TextIcon","tag","color","get","focus","MoveableData","MoveableHelper","create","createAuto","getTargets","getSelectedFrames","map","getFrame","renderFrames","forEach","render","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","cropType","clipPath","splitBracket","renderSubIcon","remove","removeProperty","requestTrigger","forceUpdate","RoundRectIcon","MENUS","Menu","state","select","setState","renderMenus","MenuClass","filter","m","Viewport","ids","infos","children","info","jsx","Math","floor","random","jsxs","jsxInfos","makeId","setInfo","nextInfos","Promise","resolve","targets","i","document","querySelector","createFrame","appendJSXs","then","Tag","appendJSX","elements","Tab","title","renderTab","moveable","Input","input","value","updateValue","setValue","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","type","min","step","pattern","TabInputBox","label","InputType","v","getValue","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","indexes","getAttribute","split","parseFloat","max","round","h","j","push","data-anchor-index","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","getMoveable","request","isInstant","onChangePos","x","y","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","width","height","onRender","left","top","rotation","Folder","fold","multiselect","nextSelected","slice","index","indexOf","shiftKey","splice","onClickFold","scope","fullName","join","isSelected","data-file-key","marginLeft","renderProperties","properties","FileComponent","getId","getName","getChildren","Object","nextScope","isObject","defaultProps","_","LabelBox","File","Property","FrameTab","renderProperty","updateRect","setTargets","Align","direction","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveables","pos","subRect","subPos","delta","translate","t","viewportPos","Layer","LayerTab","renderFile","changeLayers","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","b","a","onChangeComplete","ColorBox","colorInput","textInput","onFocus","onBlur","relatedTarget","contains","onDragStart","preventDefault","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectBox","options","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","defaultValues","property","getProperties","family","align","weight","decoration","names","TABS","CurrentTab","Tabs","tabs","onMouseOver","prevSelected","classList","add","onMouseOut","renderTabs","UserTab","data-target-id","Editor","horizontalGuides","verticalGuides","zoom","selectedMenu","infiniteViewer","selecto","menu","viewport","onMenuChange","onResize","resize","horizontalSnapGuides","verticalSnapGuides","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","pinchThreshold","checkBlur","nodeName","isMoveableElement","some","stop","onDragEnd","isDrag","clickTarget","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","draggable","resizable","throttleResize","clippable","dragArea","checkInput","rotatable","snappable","snapCenter","roundable","verticalGuidelines","horizontalGuidelines","clipArea","onDrag","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","onClickGroup","onRenderGroup","onRenderEnd","onRenderGroupEnd","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","container","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","undefined","contentElement","hasAttribute","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","dragStart","promiseState","appendElement","appendElements","window","addEventListener","keycon","setGlobal","altKey","deltaY","passive","getInfo","clear","destroy","selectIcon","getSelected","position","activeElement","App","editor","href","src","alt","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.793e1e82.chunk.js","sourcesContent":["export const PREFIX = \"scena-\";\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX } from \"../../consts\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\")  {\n        return el;\n    }\n    return null;\n}\n","import Component from \"@egjs/component\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass Bus extends Component {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nconst EventBus = new Bus();\n\nexport default EventBus;\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport EventBus from \"../utils/EventBus\";\nimport { keydown } from \"../KeyManager/KeyManager\";\n\n\nexport interface Maker {\n    tag: string,\n    props: IObject<any>,\n    style: IObject<any>,\n}\nexport default abstract class Icon extends React.PureComponent<{\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: () => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => {};\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n                >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) {}\n    public componentDidMount() {\n        EventBus.on(\"blur\", this.blur);\n\n        const keys = this.keys;\n        if (keys.length) {\n            keydown(keys, () => {\n                this.props.onSelect!((this.constructor as any).id);\n            });\n        }\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"blur\", this.blur);\n    }\n}\n","import KeyController from \"keycon\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n    const tagName = target.tagName;\n\n    if (\n        target.isContentEditable\n        || tagName === \"INPUT\" || tagName === \"TEXTAREA\"\n    ) {\n        return false;\n    }\n    return true;\n}\nexport function keydown(keys: string[], callback: (e: any) => any) {\n    KeyController.global.keydown(keys, e => {\n        if (!check(e)) {\n            return false;\n        }\n        callback(e);\n    });\n}\n// KeyController.global.\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","const Memory = new Map<any, any>();\n\nMemory.set(\"background-color\", \"#4af\");\nMemory.set(\"color\", \"#333\");\nexport default Memory;\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = () => ({\n        tag: \"div\",\n        props: {\n            contentEditable: true,\n        },\n        style: {\n            color: Memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame } from \"scenejs\";\n\nconst MoveableData = MoveableHelper.create({\n    createAuto: true,\n});\nexport default MoveableData;\n\nexport function getTargets(): HTMLElement[] {\n    const targets = Memory.get(\"targets\");\n\n    return targets || [];\n}\nexport function getSelectedFrames(): Frame[] {\n\n    return getTargets().map((target: any) => MoveableData.getFrame(target));\n}\n\nexport function renderFrames() {\n    getTargets().forEach((target: any) => {\n        MoveableData.render(target);\n    });\n}\n\nexport function setProperty(names: string[], value: any) {\n    getSelectedFrames().forEach(frame => {\n        frame.set(...names, value);\n    });\n    renderFrames();\n}\n\nexport function getProperties(properties: string[][], defaultValues: any[]) {\n    const frames = getSelectedFrames();\n\n    if (!frames.length) {\n        return properties.map((property, i) => Memory.get(property.join(\"///\")) || defaultValues[i]);\n    }\n\n    return properties.map((property, i) => {\n        const frameValues = frames.map(frame => frame.get(...property));\n\n        return frameValues.filter(color => color)[0] || defaultValues[i];\n    });\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport { getSelectedFrames, renderFrames, getTargets } from \"../utils/MoveableData\";\nimport Memory from \"../utils/Memory\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport EventBus from \"../utils/EventBus\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = getSelectedFrames()[0];\n        let cropType = Memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const frame = getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    frame.remove(\"clip-path\");\n                    frame.remove(\"clip\");\n                    const target = getTargets()[0];\n                    target.style.removeProperty(\"clip\");\n                    target.style.removeProperty(\"clip-path\");\n                    renderFrames();\n                }\n            }\n        }\n        Memory.set(\"crop\", id);\n\n        EventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveToolIcon from \"./MoveToolIcon\";\nimport \"./Menu.css\";\nimport TextIcon from \"./TextIcon\";\nimport CropIcon from \"./CropIcon\";\nimport RectIcon from \"./RectIcon\";\nimport OvalIcon from \"./OvalIcon\";\nimport RoundRectIcon from \"./RoundRectIcon\";\nimport Icon from \"./Icon\";\n\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"menu\")}>\n                {this.renderMenus()}\n            </div>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n\n        return MENUS.map(MenuClass => {\n            const id = MenuClass.id;\n            return <MenuClass key={id} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport MoveableData from \"../utils/MoveableData\";\nimport EventBus from \"../utils/EventBus\";\nimport Memory from \"../utils/Memory\";\nimport { prefix } from \"../utils/utils\";\n\nexport interface ElementInfo {\n    jsx: any;\n    el: HTMLElement | null;\n    id: string;\n    name: string;\n}\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n}> {\n    public state: {\n        ids: IObject<ElementInfo | null>;\n        infos: ElementInfo[],\n    } = {\n            ids: {},\n            infos: [],\n        };\n    public render() {\n        const style = this.props.style;\n        return <div className={prefix(\"viewport\")} style={style}>\n            {this.props.children}\n            {this.state.infos.map(info => info.jsx)}\n        </div>;\n    }\n    public makeId() {\n        const ids = this.state.ids;\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.state.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.state.ids[id];\n    }\n    public appendJSXs(jsxs: Array<{ jsx: any, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        const infos = this.state.infos;\n        const jsxInfos = jsxs.map(({ jsx, name }) => {\n            const id = this.makeId();\n            const info: ElementInfo = {\n                jsx: React.cloneElement(jsx, {\n                    \"data-moveable\": true,\n                    \"data-moveable-id\": id,\n                    \"key\": id,\n                }),\n                el: null,\n                id,\n                name,\n            };\n            this.setInfo(id, info);\n\n            return info;\n        });\n        const nextInfos = [...infos, ...jsxInfos];\n\n\n        return new Promise(resolve => {\n            this.setState({\n                infos: nextInfos,\n            }, () => {\n\n                const targets = jsxInfos.map((info, i) => {\n                    const id = info.id;\n                    const frame = jsxs[i].frame || {};\n\n                    const target = document.querySelector<HTMLElement>(`[data-moveable-id=\"${id}\"]`)!;\n                    MoveableData.createFrame(target, frame);\n                    MoveableData.render(target);\n                    info.el = target;\n\n                    return target;\n                });\n                Memory.set(\"viewportInfos\", nextInfos);\n                EventBus.requestTrigger(\"changeLayers\", {\n                    infos: nextInfos,\n                });\n                resolve(targets);\n            });\n        });\n    }\n    public appendJSX(jsx: any, name: string, frame: IObject<any> = {}): Promise<HTMLElement | SVGElement> {\n        return this.appendJSXs([{\n            jsx,\n            name,\n            frame,\n        }]).then(targets => targets[0]);\n    }\n    public appendElement(Tag: any, props: IObject<any>, name: string, frame: IObject<any> = {}): Promise<HTMLElement | SVGElement> {\n        return this.appendJSX(<Tag {...props}></Tag>, name, frame);\n    }\n    public appendElements(elements: Array<{ tag: any, props: IObject<any>, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.appendJSXs(elements.map(({ props, name, frame, tag: Tag }) => ({\n            jsx: <Tag {...props}></Tag>,\n            name,\n            frame,\n        })));\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport Moveable from \"react-moveable\";\n\nexport default abstract class Tab extends React.PureComponent<{\n    moveable: React.RefObject<Moveable>,\n}> {\n    public static id: string;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public render() {\n        return (\n            <div className={prefix(\"tab\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public getMoveable() {\n        return this.props.moveable.current!;\n    }\n}\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport \"./Input.css\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<I>();\n    public getValue(): any {\n        return;\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <input ref={this.input as any}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport \"./TabInputBox.css\";\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </div>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Anchor.css\";\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <div className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </div>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport EventBus from \"../utils/EventBus\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"renderGroup\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.onRender as any);\n\n        this.onRender();\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"renderGroup\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.onRender as any);\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.xInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\nimport { IObject, isObject } from \"@daybrush/utils\";\nimport \"./Folder.css\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\n\nexport default class Folder extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<any>,\n    selected: string[] | null,\n    multiselect?: boolean,\n    onSelect: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any) => any,\n}> {\n    public static defaultProps = {\n        getId: (_: any, id: any) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public state = {\n        fold: false,\n    };\n    isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    render() {\n        const {\n            scope,\n            name,\n        } = this.props;\n\n        const fullName = scope.join(\"///\");\n        return <div className={prefix(\"folder\")}>\n            {name && <div className={prefix(\"tab-input\", \"full\", \"file\",  this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")} style={{\n                marginLeft: scope.length ? \"10px\" : \"\",\n            }}>\n                {this.renderProperties()}\n            </div>\n        </div>\n    }\n    public onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect(nextSelected);\n        } else {\n            onSelect([key]);\n        }\n    }\n    public renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            FileComponent,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = properties[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n\n            nextScope.push(getId!(value, key));\n            const fullName = nextScope.join(\"///\");\n            const children = getChildren!(value, key);\n\n            if (children && isObject(children)) {\n                return <Folder key={fullName}\n                    name={name} scope={nextScope} properties={value}\n                    multiselect={multiselect}\n                    getId={getId} getName={getName}\n                    selected={selected} onSelect={onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullName} className={prefix(\"file\", this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullName={fullName} />\n            </div>;\n        });\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            <h3>{label}</h3>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport \"./Folder.css\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullName: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport \"../Folder/Folder.css\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport EventBus from \"../../utils/EventBus\";\nimport { getSelectedFrames, renderFrames } from \"../../utils/MoveableData\";\n\nimport Folder from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport \"./FrameTab.css\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public title = \"Frame\";\n    public state: {\n        selected: string[] | null,\n    } = {\n        selected: null,\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder name=\"\" properties={frame.get()} scope={[]} selected={selected}\n                onSelect={this.onSelect} FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.setTargets as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Property name={name} fullName={fullName} scope={scope} value={value} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        getSelectedFrames().forEach(frame => {\n            frame.set(...scope, value);\n        });\n        renderFrames();\n        this.props.moveable.current!.updateRect();\n        EventBus.requestTrigger(\"render\");\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = null;\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport \"./AlignTab.css\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\nimport MoveableData from \"../../utils/MoveableData\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n\n            const targets = moveables.map(m => {\n                const target = m.state.target!;\n                const frame = MoveableData.getFrame(target);\n\n                if (frame) {\n                    const subRect = m.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n                }\n                return target;\n            });\n\n            targets.forEach(target => {\n                if (!target) {\n                    return;\n                }\n                MoveableData.render(target);\n            });\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport EventBus from \"../../utils/EventBus\";\n\nimport Folder from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport { ElementInfo } from \"../../Viewport/Viewport\";\nimport Layer from \"./Layer\";\nimport Memory from \"../../utils/Memory\";\nimport { getTargets } from \"../../utils/MoveableData\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = Memory.get(\"viewportInfos\") || [];\n        const selected = getTargets().map(target => target.getAttribute(\"data-moveable-id\")!)\n\n        return <Folder\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            getId={(v: ElementInfo) => v.id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={() => false}\n            selected={selected}\n            onSelect={this.onSelect}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullName={fullName} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"setTargets\", this.setTargets as any);\n        EventBus.on(\"changeLayers\", this.changeLayers as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"setTargets\", this.setTargets as any);\n        EventBus.off(\"changeLayers\", this.changeLayers as any);\n    }\n\n    private onSelect = (selected: string[]) => {\n        EventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        })\n    }\n    private changeLayers = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport \"./ColorBox.css\";\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </div>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.input.current!.contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.input.current!.focus();\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport EventBus from \"../../utils/EventBus\";\nimport Memory from \"../../utils/Memory\";\nimport { getSelectedFrames, renderFrames } from \"../../utils/MoveableData\";\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = getSelectedFrames();\n        let backgroundColor = Memory.get(\"background-color\");\n        let color = Memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.onRender as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        Memory.set(\"background-color\", v);\n        getSelectedFrames().forEach(frame => {\n            frame.set(\"background-color\", v);\n        });\n        renderFrames();\n        this.forceUpdate();\n    }\n    public onChangeTextColor = (v: string) => {\n        Memory.set(\"color\", v);\n        getSelectedFrames().forEach(frame => {\n            frame.set(\"color\", v);\n        });\n        renderFrames();\n        this.forceUpdate();\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <select ref={this.input as any}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </select>\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport \"./FontTab.css\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport Memory from \"../../utils/Memory\";\nimport { setProperty, getProperties } from \"../../utils/MoveableData\";\nimport EventBus from \"../../utils/EventBus\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.setTargets as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        Memory.set(name, v);\n        setProperty([name], v);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Tabs.css\";\nimport TransformTab from \"./TransformTab\";\nimport Moveable from \"react-moveable\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport EventBus from \"../utils/EventBus\";\n\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent<{\n    moveable: React.RefObject<Moveable>,\n}> {\n    public tabs = React.createRef<HTMLDivElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <div className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\n            {this.renderTabs()}\n        </div>;\n    }\n    public renderTabs() {\n        const moveable = this.props.moveable;\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            return <div key={id} className={prefix(\"tab-icon\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon-label\")} onClick={this.onClick}><span>{UserTab.id}</span></div>\n                {isSelected && <UserTab moveable={moveable} />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public componentDidMount() {\n        EventBus.on(\"blur\", this.onMouseOut as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"blur\", this.onMouseOut as any);\n    }\n\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.classList.add(\"scena-over\");\n    }\n    private onMouseOut = () => {\n        this.tabs.current!.classList.remove(\"scena-over\");\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport Moveable from \"react-moveable\";\nimport keycon from \"keycon\";\nimport \"./Editor.css\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport from \"./Viewport/Viewport\";\nimport { getContentElement, prefix } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport MoveableData from \"./utils/MoveableData\";\nimport Memory from \"./utils/Memory\";\nimport KeyController from \"keycon\";\n\n\nEventBus.on(\"setTargets\", ({ targets }) => {\n    Memory.set(\"targets\", targets);\n});\n\n\nexport class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n}> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: {\n        targets: Array<SVGElement | HTMLElement>,\n        horizontalGuides: number[],\n        verticalGuides: number[],\n        selectedMenu: string,\n        zoom: number,\n    } = {\n            targets: [],\n            horizontalGuides: [],\n            verticalGuides: [],\n            zoom: 1,\n            selectedMenu: \"MoveTool\",\n        };\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveable = React.createRef<Moveable>();\n    public viewport = React.createRef<Viewport>();\n    public render() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveable,\n            viewport,\n            menu,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            targets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = [0, height, height / 2, ...state.horizontalGuides];\n        const verticalSnapGuides = [0, width, width / 2, ...state.verticalGuides];\n        return (\n            <div className={prefix(\"editor\")}>\n                <Tabs moveable={moveable}></Tabs>\n                <Menu ref={menu} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveable.current!.isMoveableElement(target)\n                            || targets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport} style={{\n                        width: `${width}px`,\n                        height: `${height}px`,\n                    }}>\n                        <Moveable\n                            ref={moveable}\n                            targets={targets}\n                            draggable={true}\n                            resizable={true}\n                            throttleResize={1}\n                            clippable={selectedMenu === \"Crop\"}\n                            dragArea={targets.length > 1 || selectedMenu !== \"Text\"}\n                            checkInput={selectedMenu === \"Text\"}\n                            rotatable={true}\n                            snappable={true}\n                            snapCenter={true}\n                            roundable={true}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                            clipArea={true}\n                            onDragStart={MoveableData.onDragStart}\n                            onDrag={MoveableData.onDrag}\n                            onDragGroupStart={MoveableData.onDragGroupStart}\n                            onDragGroup={MoveableData.onDragGroup}\n\n                            onScaleStart={MoveableData.onScaleStart}\n                            onScale={MoveableData.onScale}\n                            onScaleGroupStart={MoveableData.onScaleGroupStart}\n                            onScaleGroup={MoveableData.onScaleGroup}\n\n                            onResizeStart={MoveableData.onResizeStart}\n                            onResize={MoveableData.onResize}\n                            onResizeGroupStart={MoveableData.onResizeGroupStart}\n                            onResizeGroup={MoveableData.onResizeGroup}\n\n                            onRotateStart={MoveableData.onRotateStart}\n                            onRotate={MoveableData.onRotate}\n                            onRotateGroupStart={MoveableData.onRotateGroupStart}\n                            onRotateGroup={MoveableData.onRotateGroup}\n\n                            defaultClipPath={Memory.get(\"crop\") || \"inset\"}\n                            onClip={MoveableData.onClip}\n\n                            onDragOriginStart={MoveableData.onDragOriginStart}\n                            onDragOrigin={e => {\n                                MoveableData.onDragOrigin(e);\n                            }}\n\n                            onRound={MoveableData.onRound}\n\n                            onClick={e => {\n                                const target = e.inputTarget as any;\n                                if (e.isDouble && target.isContentEditable) {\n                                    menu.current!.select(\"Text\");\n                                    const el = getContentElement(target);\n\n                                    if (el) {\n                                        el.focus();\n                                    }\n                                }\n                            }}\n                            onClickGroup={e => {\n                                this.selecto.current!.clickTarget(e.inputEvent, e.inputTarget);\n                            }}\n                            onRender={e => {\n                                EventBus.requestTrigger(\"render\", e);\n                            }}\n                            onRenderGroup={e => {\n                                EventBus.requestTrigger(\"renderGroup\", e);\n                            }}\n                            onRenderEnd={e => {\n                                EventBus.requestTrigger(\"render\", e);\n                            }}\n                            onRenderGroupEnd={e => {\n                                EventBus.requestTrigger(\"renderGroup\", e);\n                            }}\n                        ></Moveable>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[\"[data-moveable]\"]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(\"data-moveable\")) {\n                                e.stop();\n                                this.setTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveable.current!.isMoveableElement(target)\n                            || state.targets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveable.current!.dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </div>\n        );\n    }\n    public promiseState(state: IObject<any>) {\n        return new Promise(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public setTargets(targets: Array<HTMLElement | SVGElement>) {\n        return this.promiseState({\n            targets,\n        }).then(() => {\n            EventBus.requestTrigger(\"setTargets\", { targets });\n        });\n    }\n    public appendJSX(jsx: any, name: string, frame: IObject<any> = {}) {\n        return this.viewport.current!.appendJSX(jsx, name, frame).then(target => {\n            this.setTargets([target]);\n\n            return target;\n        });\n    }\n    public appendElement(tag: any, props: IObject<any>, name: string, frame: IObject<any> = {}) {\n        return this.viewport.current!.appendElement(tag, props, name, frame).then(target => {\n            this.setTargets([target]);\n\n            return target;\n        });\n    }\n    public appendJSXs(jsxs: Array<{ jsx: any, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.viewport.current!.appendJSXs(jsxs).then(targets => {\n            this.setTargets([targets[0]]);\n\n            return targets;\n        });\n    }\n    public appendElements(elements: Array<{ tag: any, props: IObject<any>, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.viewport.current!.appendElements(elements).then(targets => {\n            this.setTargets([targets[0]]);\n\n            return targets;\n        });\n    }\n    public componentDidMount() {\n        const {\n            infiniteViewer,\n        } = this;\n        requestAnimationFrame(() => {\n            infiniteViewer.current!.scrollCenter();\n        });\n\n        window.addEventListener(\"resize\", this.onResize);\n        keycon.setGlobal();\n        window.addEventListener(\"wheel\", e => {\n            if (keycon.global.altKey) {\n                e.preventDefault();\n                this.setState({\n                    zoom: Math.max(0.1, this.state.zoom + e.deltaY / 300),\n                });\n            }\n        }, {\n            passive: false,\n        });\n        const viewport = this.viewport.current!\n\n\n        EventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        EventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n    }\n    public componentWillUnmount() {\n        EventBus.off();\n        Memory.clear();\n        KeyController.global.destroy();\n    }\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker();\n        const scrollTop = -infiniteViewer.getScrollTop() + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n\n        const style = {\n            top: `${top}px`,\n            left: `${left}px`,\n            position: \"absolute\",\n            width: `${width}px`,\n            height: `${height}px`,\n            ...maker.style,\n        } as any;\n        this.appendElement(maker.tag, maker.props, `(${selectIcon.id})`, style).then(selectIcon.makeThen);\n        return true;\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        if (activeElement && (\n            activeElement.tagName === \"INPUT\"\n            || (activeElement as any).isContentEditable\n        )) {\n            (activeElement as any).blur();\n        }\n        EventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n}\n","import * as React from \"react\";\nimport { Editor } from \"./Editor/Editor\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor ref={this.editor} />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        // (window as any).a = this.editor.current!;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <p className=\"badges\">\n                    <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n                    </a>\n                    <br/>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n                    <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n                </p>,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"400px\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n        ]);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}