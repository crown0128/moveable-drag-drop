{"version":3,"sources":["Editor/Icons/Icon.tsx","Editor/Menu/MoveToolIcon.tsx","Editor/Menu/TextIcon.tsx","Editor/Menu/OvalIcon.tsx","Editor/Menu/RectIcon.tsx","Editor/Menu/CircleIcon.tsx","Editor/Menu/PolygonIcon.tsx","Editor/Menu/CropIcon.tsx","Editor/Menu/RoundRectIcon.tsx","Editor/KeyManager/KeyManager.ts","Editor/Popup/Popup.tsx","Editor/Menu/KeyboardIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Icons/TransformIcon.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Icons/FrameIcon.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Icons/AlignIcon.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Icons/LayerIcon.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Icons/ColorIcon.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Icons/FontIcon.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/utils/EventBus.ts","Editor/utils/Memory.ts","Editor/Viewport/MoveableMananger.tsx","Editor/utils/MoveableData.ts","Editor/utils/HistoryManager.ts","Editor/utils/Debugger.ts","Editor/utils/ClipboardManager.tsx","Editor/Editor.tsx","Editor/consts.ts","Editor/utils/utils.ts","demo/Moveable.tsx","index.tsx","Editor/index.ts"],"names":["Icon","connectEditorProps","keys","subContainer","React","onClick","props","selected","focusSub","onSelect","constructor","id","onSubClick","e","stopPropagation","blur","current","style","display","className","prefix","this","renderIcon","renderSubContainer","subIcons","renderSubIcons","length","key","ref","IconClass","isSelect","onSubSelect","editor","camelize","keyManager","keydown","ctrlKey","metaKey","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","TextIcon","memory","tag","attrs","contenteditable","color","get","target","focus","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","moveableData","getSelectedFrames","cropType","clipPath","splitBracket","renderSubIcon","infos","removeProperties","historyManager","addAction","set","eventBus","requestTrigger","forceUpdate","RoundRectIcon","KeyManager","console","keycon","KeyController","keylist","isEnable","callback","description","addCallback","keyup","destroy","type","push","inputEvent","checkInput","check","log","join","altKey","shiftKey","Popup","overlayElement","popupKeyManager","onClose","children","disable","enable","KeyboardIcon","state","renderPopup","setState","ReactDOM","map","editorElement","getElement","MenuElement","styled","MENUS","Menu","menuRefs","select","renderMenus","MenuClass","i","filter","m","forEach","Viewport","components","jsxs","viewport","jsx","name","ids","viewportRef","onBlur","DATA_SCENA_ELEMENT_ID","renderChildren","getViewportInfos","el","info","nextChildren","renderedChildren","isString","isScenaFunction","scenaElementId","scenaAttrs","scenaText","innerText","scenaHTML","innerHTML","jsxChildren","isArray","Math","floor","random","getInfo","parentChildren","scopeId","index","indexOf","getId","indexes","reduce","getInfoByElement","parentInfo","getIndexes","parentScopeId","makeId","jsxId","isScenaElement","elementInfo","registerChildren","componentId","setInfo","appendIndex","jsxInfos","splice","isNumber","Promise","resolve","added","updateElements","isChild","slice","unregisterChildren","getScenaAttrs","targets","removedChildren","getSortedTargets","getIndex","removed","indexesList","Array","sort","a","b","aLength","bLength","min","getSortedInfos","getSortedIndexesList","getInfoByIndexes","moved","prevInfo","getPrevInfo","isScenaFunctionElement","lastInfo","getLastChildInfo","move","rootInfo","container","nextInfos","moveMatrix","getOffsetOriginMatrix","prevInfos","parnetChildren","movedInfos","sortedInfos","moves","Tab","title","eventList","renderTab","on","moveableManager","getMoveable","off","icon","Input","input","value","updateValue","setValue","TextElement","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","step","pattern","TabInputElement","TabInputBox","label","InputType","v","getValue","AnchorElement","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","getAttribute","split","parseFloat","max","round","h","j","classNames","data-anchor-index","TransformIcon","x","y","width","height","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","request","isInstant","onChangePos","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","onRender","left","top","rotation","addEvent","FolderElement","getCurrentFile","hasAttribute","parentElement","Folder","moveGesto","folderRef","shadowRef","fold","shadows","onClickFold","multiselect","nextSelected","global","onDragStart","hasClass","stop","getBoundingClientRect","datas","offsetX","clientX","folderRect","folderLine","objMap","flatMap","preventDefault","onDrag","folderElement","clientY","clearPointers","isTop","dragFirst","clickedTarget","fileInfos","updateShadowPosition","document","elementFromPoint","flatChildren","siblingIndex","findIndex","fullId","targetInfo","querySelector","nextInfo","targetDepth","depth","nextDepth","depthRange","distX","distDepth","between","contains","isMoveChildren","checkMove","prevScope","scope","parentScope","every","setProperty","classList","add","onDragEnd","isDrag","onMove","selectedInfos","abs","parentId","undefined","cssText","getFullId","isSelected","data-file-key","renderProperties","renderShadows","isMove","Gesto","window","unset","properties","FileComponent","getName","getChildren","Object","nextScope","isObject","fileScope","valueChildren","call","querySelectorAll","remove","defaultProps","_","LabelElement","LabelBox","File","Property","FrameIcon","FrameTab","renderProperty","orders","getOrders","selectedProperty","selectedIndex","prevIndex","setOrders","setTargets","Align","direction","AlignIcon","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveable","moveables","pos","child","getFrame","prev","subRect","subPos","delta","translate","t","next","renderFrames","updateRect","viewportPos","Layer","LayerIcon","LayerTab","renderFile","getViewport","setSelectedTargets","getIds","getSelectedTargets","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","onChangeComplete","ColorBoxElement","ColorBox","colorInput","textInput","onFocus","relatedTarget","tagName","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorIcon","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectElement","SelectBox","options","FontIcon","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","getProperties","family","align","weight","decoration","TabsElement","TABS","CurrentTab","Tabs","tabs","onMouseOver","prevSelected","onMouseOut","renderTabs","UserTab","IconComponent","data-target-id","EventBus","eventMap","params","cancelAnimationFrame","requestAnimationFrame","trigger","Component","Memory","Map","clear","restoreRender","prevState","error","setOrderObject","result","diff","prevList","removeProperty","render","undoRender","prevOrders","redoRender","nextOrders","undoRenders","redoRenders","DimensionViewable","dimensionViewable","Boolean","events","MoveableManager","verticalGuidelines","horizontalGuidelines","selectedTargets","selectedMenu","renderViewportMoveable","selecto","elementGuidelines","getTargets","isShift","ables","draggable","resizable","pinchable","throttleResize","clippable","passDragArea","throttleDragRotate","keepRatio","rotatable","snappable","snapCenter","snapGap","roundable","clipArea","clipVerticalGuidelines","clipHorizontalGuidelines","clipTargetBounds","onBeforeRenderStart","onBeforeRenderGroupStart","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResize","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","isContentEditable","selectMenu","getContentElement","onClickGroup","clickTarget","onRenderStart","prevData","isRender","onRenderEnd","onRenderGroupStart","prevDatas","onRenderGroup","onRenderGroupEnd","registerType","MoveableData","createAuto","useBeforeRender","names","defaultValues","property","getOrderObject","MoveableHelper","HistoryManager","undoStack","redoStack","types","undo","redo","undoAction","pop","redoAction","Debugger","isDebug","args","ClipboardManager","onCut","onCopy","removeElements","clipboardData","SavedScenaData","saveTargets","setData","TYPE_SCENA_LAYERS","JSON","stringify","onPaste","read","addEventListener","removeEventListener","execCommand","all","html2canvas","then","images","imageCanvas","parentRect","canvas","createElement","context","getContext","drawImage","toBlob","blob","navigator","clipboard","write","ClipboardItem","scenaDatas","parse","getData","loadDatas","readDataTransfter","clipboardItems","hasText","item","hasImage","getType","appendBlob","readText","text","appendJSXs","contentEditable","EditorElement","EDITOR_CSS","undoCreateElements","res","removeByIds","getElements","restoreElements","undoSelectTargets","prevs","nexts","redoSelectTargets","undoChangeText","redoChangeText","undoMove","redoMove","Editor","horizontalGuides","verticalGuides","zoom","debug","clipboardManager","infiniteViewer","menu","onMenuChange","resize","parentTarget","getParnetScenaElement","nextText","horizontalSnapGuides","verticalSnapGuides","unit","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","useForceWheel","pinchThreshold","checkBlur","nodeName","isMoveableElement","isDragging","some","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","contentElement","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","dragStart","getAccurateAgent","agent","isMacintosh","os","moveInside","moveOutside","isRestore","parnetTarget","promiseState","indexesListLength","appendComplete","registerFrame","createFrame","frameOrder","nextMatrix","mat4","invert","multiply","create","setMoveMatrix","checkImageLoaded","frameMap","removeFrame","order","childInfo","removeFrames","selectedInfo","getNextInfo","removeTargets","selectedTarget","removeTarget","isUpdate","loadData","getJSX","getComponent","saveTarget","toLowerCase","url","URL","createObjectURL","appendJSX","src","alt","moveComplete","selectIcon","getSelected","position","deltaX","deltaY","activeElement","selection","getSelection","removeAllRanges","restoreFrames","EDITOR_PROPERTIES","PREFIX","prefixNames","component","prototype","defineProperty","val","els","complete","loaded","makeScenaFunctionComponent","scenaComponentId","attributes","isFunction","transformOrders","matrix3d","prevMatrix","splitComma","has","num","stack","getElementInfo","targetOrigin","translation","fromTranslation","createMatrix","offsetMatrix","registerElement","setAttribute","Badge","data-scena-element-id","href","App","suppressContentEditableWarning","getElementById"],"mappings":"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","file":"static/js/main.4f60132d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport Memory from \"../utils/Memory\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\n\n\nexport interface Maker {\n    tag: string,\n    attrs: IObject<any>,\n    style: IObject<any>,\n}\n\n@connectEditorProps\nexport default abstract class Icon extends React.PureComponent<{\n    editor: Editor,\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: (memory: Memory) => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => { };\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n            >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass editor={this.props.editor} selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) { }\n    public componentDidMount() {\n        const keys = this.keys;\n        if (keys.length) {\n            this.keyManager.keydown(keys, e => {\n                if (e.ctrlKey || e.metaKey) {\n                    return false;\n                }\n                this.onClick();\n            }, (this.constructor as any).id);\n        }\n    }\n}\n\nexport default interface Icon extends EditorInterface {}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {\n            contenteditable: true,\n        },\n        style: {\n            color: memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = this.moveableData.getSelectedFrames()[0];\n        let cropType = this.memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const moveableData = this.moveableData;\n        const frame = moveableData.getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    const infos = moveableData.removeProperties(\"clip-path\", \"clip\");\n\n                    this.historyManager.addAction(\"renders\", { infos });\n                }\n            }\n        }\n\n        this.memory.set(\"crop\", id);\n        this.eventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"../Icons/Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = (memory: Memory) => ({\n        tag: \"div\",\n        attrs: {},\n        style: {\n            \"background-color\": memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import KeyController from \"keycon\";\nimport Debugger from \"../utils/Debugger\";\nimport { checkInput } from \"../utils/utils\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n\n    if (checkInput(target)) {\n        return false;\n    }\n    return true;\n}\nexport default class KeyManager {\n    constructor(private console: Debugger) { }\n    public keycon = new KeyController();\n    public keylist: Array<[string[], string]> = [];\n    public isEnable = true;\n\n    public enable() {\n        this.isEnable = true;\n    }\n    public disable() {\n        this.isEnable = false;\n    }\n    public keydown(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keydown(keys, this.addCallback(\"keydown\", keys, callback, description));\n    }\n    public keyup(keys: string[], callback: (e: any) => any, description?: any) {\n        this.keycon.keyup(keys, this.addCallback(\"keyup\", keys, callback, description));\n    }\n    get altKey() {\n        return this.keycon.altKey;\n    }\n    get shiftKey() {\n        return this.keycon.shiftKey;\n    }\n    get metaKey() {\n        return this.keycon.metaKey;\n    }\n    get ctrlKey() {\n        return this.keycon.ctrlKey;\n    }\n    public destroy() {\n        this.keycon.destroy();\n    }\n    private addCallback(type: string, keys: string[], callback: (e: any) => any, description?: string) {\n        if (description) {\n            this.keylist.push([\n                keys,\n                description,\n            ]);\n        }\n        return (e: any) => {\n            if (!this.isEnable || !check(e)) {\n                return false;\n            }\n            const result = callback(e);\n\n            if (result !== false && description) {\n                this.console.log(`${type}: ${keys.join(\" + \")}`, description);\n            }\n        };\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport KeyManager from \"../KeyManager/KeyManager\";\n\n@connectEditorProps\nexport default class Popup extends React.PureComponent<{\n    editor: Editor,\n    onClose: () => any,\n}> {\n    public overlayElement = React.createRef<HTMLDivElement>();\n    public popupKeyManager = new KeyManager(this.console);\n    public render() {\n        return <div ref={this.overlayElement} className={prefix(\"overlay\")} onClick={this.onClick}>\n            <div className={prefix(\"popup\")}>\n                <div className={prefix(\"close\")} onClick={this.props.onClose}></div>\n                {this.props.children}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.keyManager.disable();\n        this.popupKeyManager.keyup([\"esc\"], () => {\n            this.props.onClose();\n        });\n    }\n    public componentWillUnmount() {\n        this.keyManager.enable();\n        this.popupKeyManager.destroy();\n    }\n    public onClick = (e: any) => {\n        e.stopPropagation();\n        if (e.target === this.overlayElement.current) {\n            this.props.onClose();\n        }\n    }\n}\n\n\nexport default interface Popup extends EditorInterface {}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Icon from \"../Icons/Icon\";\nimport { prefix } from \"../utils/utils\";\nimport Popup from \"../Popup/Popup\";\n\nexport default class KeyboardIcon extends Icon {\n    public static id = \"Shortcuts\";\n    public keys = [\"s\"];\n    public state = {\n        renderPopup: false,\n    }\n    public renderIcon() {\n        return (\n            <div className={prefix(\"i\")}>\n                <div className={prefix(\"keyboard\")}>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"key\")}></div>\n                    <div className={prefix(\"space\")}></div>\n                </div>\n                {this.state.renderPopup && this.renderPopup()}\n            </div>\n        );\n    }\n    public renderPopup() {\n        return ReactDOM.createPortal(<Popup editor={this.editor} onClose={this.onClose}>\n            <h2>Shortcuts</h2>\n            <ul className={prefix(\"key-list\")}>\n                {this.keyManager.keylist.map(([keys, description]) => {\n                    return <li key={keys.join(\"+\")}>\n                        <p className={prefix(\"key-description\")}>{description} <strong>{keys.map(key => <span key={key}>{key}</span>)}</strong></p>\n                    </li>\n                })}\n            </ul>\n        </Popup>, this.editor.editorElement.current!.getElement());\n    }\n    public onClick = () => {\n        this.setState({\n            renderPopup: true,\n        })\n    }\n    public onClose = () => {\n        this.setState({\n            renderPopup: false,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveToolIcon from \"./MoveToolIcon\";\nimport TextIcon from \"./TextIcon\";\nimport CropIcon from \"./CropIcon\";\nimport RectIcon from \"./RectIcon\";\nimport OvalIcon from \"./OvalIcon\";\nimport RoundRectIcon from \"./RoundRectIcon\";\nimport Icon from \"../Icons/Icon\";\nimport Editor from \"../Editor\";\nimport KeyboardIcon from \"./KeyboardIcon\";\nimport styled from \"react-css-styled\";\n\nconst MenuElement = styled(\"div\", `\n{\n    position: absolute;\n    top: 0;\n    width: var(--menu);\n    height: 100%;\n    background: var(--back2);\n    box-sizing: border-box;\n    padding: 15px 7px 0px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n}\n\n.scena-menu-bottom {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 15px 7px 0px;\n    width: 100%;\n    box-sizing: border-box;\n}\n\nsvg, .scena-i {\n    pointer-events: none;\n}\n\n.scena-icon {\n    position: relative;\n    display: block;\n    font-size: 0;\n    padding: 3px;\n    box-sizing: border-box;\n    cursor: pointer;\n    border: 1px solid transparent;\n    margin-bottom: 5px;\n    border-radius: 3px;\n    transition: all ease 0.2s;\n}\n\n.scena-selected {\n    background: var(--mainColor);\n    border-color: var(--back1);\n}\n\n.scena-icon.scena-selected>svg path,\n.scena-icon.scena-selected>svg ellipse,\n.scena-sub-icon.scena-selected path,\n.scena-sub-icon.scena-selected ellipse {\n    fill: #fff;\n    stroke: #fff;\n}\n\n.scena-icon .scena-extends-icon {\n    position: absolute;\n    right: 2px;\n    bottom: 2px;\n    border-bottom: 5px solid #eee;\n    border-right: 0;\n    border-left: 5px solid transparent;\n}\n\n.scena-extends-container {\n    position: absolute;\n    left: 110%;\n    top: -30px;\n    background: var(--back2);\n    /* width: 200px;\n    height: 200px; */\n    border-radius: 5px;\n    z-index: 1;\n    transform: translate(10px) translateZ(2px);\n    box-shadow: 1px 1px 2px var(--back1);\n    display: none;\n}\n\n.scena-sub-icon {\n    white-space: nowrap;\n    padding: 0px 7px;\n    margin: 7px 10px;\n}\n\n.scena-sub-icon .scena-icon {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    width: 25px;\n    height: 25px;\n    margin: 0;\n}\n\n.scena-sub-icon-label {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    padding: 0;\n    margin: 0;\n    margin-left: 5px;\n}\n\n\n.scena-keyboard {\n    background: #fff;\n    border-radius: 3px;\n    width: 90%;\n    height: 15px;\n    margin: 3px 0px 7px;\n    text-align: center;\n    box-sizing: border-box;\n    padding: 2px;\n}\n\n.scena-key {\n    display: inline-block;\n    width: 2px;\n    height: 2px;\n    background: var(--back2);\n    margin: 1px;\n}\n.scena-space {\n    display: inline-block;\n    width: 12px;\n    height: 2px;\n    background: var(--back2);\n    margin: 1px;\n    border-radius: 1px;\n}\n`);\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    editor: Editor,\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public menuRefs: Array<React.RefObject<Icon>> = [];\n    public render() {\n        return (\n            <MenuElement className={prefix(\"menu\")}>\n                {this.renderMenus()}\n                <div className={prefix(\"menu-bottom\")}>\n                    <KeyboardIcon editor={this.props.editor} />\n                </div>\n            </MenuElement>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n        const menuRefs = this.menuRefs;\n        const editor = this.props.editor;\n\n        return MENUS.map((MenuClass, i) => {\n            const id = MenuClass.id;\n            if (!menuRefs[i]) {\n                menuRefs[i] = React.createRef();\n            }\n            return <MenuClass ref={menuRefs[i]} key={id} editor={editor} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n    public blur() {\n        this.menuRefs.forEach(ref => {\n            if (!ref.current) {\n                return;\n            }\n            ref.current.blur();\n        });\n    }\n}\n","import * as React from \"react\";\nimport { IObject, isString, isArray, isNumber } from \"@daybrush/utils\";\nimport { prefix, getId, getScenaAttrs, isScenaFunction, isScenaElement, isScenaFunctionElement, getOffsetOriginMatrix, updateElements } from \"../utils/utils\";\nimport { DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { ScenaJSXElement, ScenaComponent, ElementInfo, AddedInfo, RemovedInfo, MovedResult } from \"../types\";\n\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n    onBlur: (e: any) => any,\n}> {\n    public components: IObject<ScenaComponent> = {};\n    public jsxs: IObject<ScenaJSXElement> = {};\n    public viewport: ElementInfo = {\n        jsx: <div></div>,\n        name: \"Viewport\",\n        id: \"viewport\",\n        children: [],\n    };\n    public ids: IObject<ElementInfo> = {\n        viewport: this.viewport,\n    };\n    public state = {};\n    public viewportRef = React.createRef<HTMLDivElement>();\n    public render() {\n        const style = this.props.style;\n\n        return <div className={prefix(\"viewport-container\")} onBlur={this.props.onBlur} style={style}>\n            {this.props.children}\n            <div className={prefix(\"viewport\")} {...{ [DATA_SCENA_ELEMENT_ID]: \"viewport\" }} ref={this.viewportRef}>\n                {this.renderChildren(this.getViewportInfos())}\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.ids.viewport.el = this.viewportRef.current!;\n    }\n    public renderChildren(children: ElementInfo[]): ScenaJSXElement[] {\n        return children.map(info => {\n            const jsx = info.jsx;\n            const nextChildren = info.children!;\n            const renderedChildren = this.renderChildren(nextChildren);\n            const id = info.id!;\n            const props: IObject<any> = {\n                key: id,\n            };\n            if (isString(jsx)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n                return React.createElement(jsx, props, ...renderedChildren) as ScenaJSXElement;\n            } else if (isScenaFunction(jsx)) {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n\n                return React.createElement(jsx, props) as ScenaJSXElement;\n            } else if (isString(jsx.type)) {\n                props[DATA_SCENA_ELEMENT_ID] = id;\n            } else {\n                props.scenaElementId = id;\n                props.scenaAttrs = info.attrs || {};\n                props.scenaText = info.innerText;\n                props.scenaHTML = info.innerHTML;\n            }\n            const jsxChildren = jsx.props.children;\n            return React.cloneElement(jsx, { ...jsx.props, ...props },\n                ...(isArray(jsxChildren) ? jsxChildren : [jsxChildren]),\n                ...this.renderChildren(nextChildren),\n            ) as ScenaJSXElement;\n        });\n    }\n    public getJSX(id: string) {\n        return this.jsxs[id];\n    }\n    public getComponent(id: string) {\n        return this.components[id];\n    }\n\n    public makeId(ids: IObject<any> = this.ids) {\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.ids[id];\n    }\n\n    public getLastChildInfo(id: string) {\n        const info = this.getInfo(id);\n        const children = info.children!;\n\n        return children[children.length - 1];\n    }\n    public getNextInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index + 1];\n    }\n    public getPrevInfo(id: string) {\n        const info = this.getInfo(id);\n        const parentInfo = this.getInfo(info.scopeId!)!;\n        const parentChildren = parentInfo.children!;\n        const index = parentChildren.indexOf(info);\n\n        return parentChildren[index - 1];\n    }\n    public getInfoByElement(el: HTMLElement | SVGElement) {\n        return this.ids[getId(el)];\n    }\n    public getInfoByIndexes(indexes: number[]) {\n        return indexes.reduce((info: ElementInfo, index: number) => {\n            return info.children![index];\n        }, this.viewport);\n    }\n    public getElement(id: string) {\n        const info = this.getInfo(id);\n\n        return info ? info.el : null;\n    }\n    public getViewportInfos() {\n        return this.viewport.children!;\n    }\n    public getIndexes(target: HTMLElement | SVGElement | string): number[] {\n        const info = (isString(target) ? this.getInfo(target) : this.getInfoByElement(target))!;\n\n        if (!info.scopeId) {\n            return [];\n        }\n        const parentInfo = this.getInfo(info.scopeId)!;\n\n        return [...this.getIndexes(info.scopeId), parentInfo.children!.indexOf(info)];\n    }\n    public registerChildren(jsxs: ElementInfo[], parentScopeId?: string) {\n        return jsxs.map(info => {\n            const id = info.id || this.makeId();\n            const jsx = info.jsx;\n            const children = info.children || [];\n            const scopeId = parentScopeId || info.scopeId || \"viewport\";\n            let componentId = \"\";\n            let jsxId = \"\";\n\n\n            if (isScenaElement(jsx)) {\n                jsxId = this.makeId(this.jsxs);\n\n                this.jsxs[jsxId] = jsx;\n                // const component = jsx.type;\n                // componentId = component.scenaComponentId;\n                // this.components[componentId] = component;\n            }\n            const elementInfo: ElementInfo = {\n                ...info,\n                jsx,\n                children: this.registerChildren(children, id),\n                scopeId,\n                componentId,\n                jsxId,\n                frame: info.frame || {},\n                el: null,\n                id,\n            };\n            this.setInfo(id, elementInfo);\n            return elementInfo;\n        });\n    }\n    public appendJSXs(jsxs: ElementInfo[], appendIndex: number, scopeId?: string): Promise<AddedInfo> {\n        const jsxInfos = this.registerChildren(jsxs, scopeId);\n\n        jsxInfos.forEach((info, i) => {\n            const scopeInfo = this.getInfo(scopeId || info.scopeId!);\n            const children = scopeInfo.children!;\n\n            if (appendIndex > -1) {\n                children.splice(appendIndex + i, 0, info);\n                info.index = appendIndex + i;\n            } else if (isNumber(info.index)) {\n                children.splice(info.index, 0, info);\n            } else {\n                info.index = children.length;\n                children.push(info);\n            }\n        });\n\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                resolve({\n                    added: updateElements(jsxInfos),\n                });\n            });\n        });\n    }\n    public getIndex(id: string | HTMLElement) {\n        const indexes = this.getIndexes(id);\n        const length = indexes.length;\n        return length ? indexes[length - 1] : -1;\n    }\n    public getElements(ids: string[]) {\n        return ids.map(id => this.getElement(id)).filter(el => el) as Array<HTMLElement | SVGElement>;\n    }\n    public unregisterChildren(children: ElementInfo[], isChild?: boolean): ElementInfo[] {\n        const ids = this.ids;\n\n        return children.slice(0).map(info => {\n            const target = info.el!;\n            let innerText = \"\";\n            let innerHTML = \"\";\n\n            if (info.attrs!.contenteditable) {\n                innerText = (target as HTMLElement).innerText;\n            } else {\n                innerHTML = target.innerHTML;\n            }\n\n            if (!isChild) {\n                const parentInfo = this.getInfo(info.scopeId!);\n                const parentChildren = parentInfo.children!;\n                const index = parentChildren.indexOf(info);\n                parentInfo.children!.splice(index, 1);\n            }\n            const nextChildren = this.unregisterChildren(info.children!, true);\n\n            delete ids[info.id!];\n            delete info.el;\n\n            return {\n                ...info,\n                innerText,\n                innerHTML,\n                attrs: getScenaAttrs(target),\n                children: nextChildren,\n            };\n        });\n    }\n    public removeTargets(targets: Array<HTMLElement | SVGElement>): Promise<RemovedInfo> {\n        const removedChildren = this.getSortedTargets(targets).map(target => {\n            return this.getInfoByElement(target);\n        }).filter(info => info) as ElementInfo[];\n        const indexes = removedChildren.map(info => this.getIndex(info.id!));\n        const removed = this.unregisterChildren(removedChildren);\n\n        removed.forEach((info, i) => {\n            info.index = indexes[i];\n        })\n        return new Promise(resolve => {\n            this.forceUpdate(() => {\n                resolve({\n                    removed,\n                });\n            })\n        });\n    }\n    public getSortedIndexesList(targets: Array<string | HTMLElement | SVGElement | number[]>) {\n        const indexesList = targets.map(target => {\n            if (Array.isArray(target)) {\n                return target;\n            }\n            return this.getIndexes(target!)\n        });\n\n        indexesList.sort((a, b) => {\n            const aLength = a.length;\n            const bLength = b.length;\n            const length = Math.min(aLength, bLength);\n\n            for (let i = 0; i < length; ++i) {\n                if (a[i] === b[i]) {\n                    continue;\n                }\n                return a[i] - b[i];\n            }\n            return aLength - bLength;\n        });\n\n        return indexesList;\n    }\n    public getSortedTargets(targets: Array<string | HTMLElement | SVGElement>) {\n        return this.getSortedInfos(targets).map(info => info.el!);\n    }\n    public getSortedInfos(targets: Array<string | HTMLElement | SVGElement>) {\n        const indexesList = this.getSortedIndexesList(targets);\n\n        return indexesList.map(indexes => this.getInfoByIndexes(indexes));\n    }\n    public moveInside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n\n        const prevInfo = this.getPrevInfo(info.id!);\n\n        let moved: ElementInfo[];\n\n        if (!prevInfo || isScenaFunction(prevInfo.jsx) || isScenaFunctionElement(prevInfo.jsx)) {\n            moved = [];\n        } else {\n            moved = [info];\n        }\n        const lastInfo = prevInfo && this.getLastChildInfo(prevInfo.id!);\n        return this.move(moved, prevInfo, lastInfo);\n    }\n    public moveOutside(target: HTMLElement | SVGElement | string): Promise<MovedResult> {\n        const info = isString(target) ? this.getInfo(target)! : this.getInfoByElement(target)!;\n        const parentInfo = this.getInfo(info.scopeId!);\n        const rootInfo = this.getInfo(parentInfo.scopeId!);\n\n        const moved = rootInfo ? [info] : [];\n\n        return this.move(moved, rootInfo, parentInfo);\n    }\n    public moves(infos: Array<{ info: ElementInfo, parentInfo: ElementInfo, prevInfo?: ElementInfo }>): Promise<MovedResult> {\n        const container = this.viewportRef.current!;\n        const nextInfos = infos.map(info => {\n\n            return {\n                ...info,\n                moveMatrix: getOffsetOriginMatrix(info.info.el!, container),\n            };\n        })\n        const prevInfos = nextInfos.map(({ info, moveMatrix }) => {\n            return {\n                info,\n                parentInfo: this.getInfo(info.scopeId!),\n                prevInfo: this.getPrevInfo(info.id!),\n                // moveMatrix: mat4.invert(mat4.create(), moveMatrix!),\n            };\n        });\n        nextInfos.forEach(({ info, parentInfo, prevInfo }) => {\n            const children = this.getInfo(info.scopeId!).children!;\n\n            children.splice(children.indexOf(info), 1);\n\n\n            const parnetChildren = parentInfo.children!;\n            parnetChildren.splice(prevInfo ? parnetChildren.indexOf(prevInfo) + 1 : 0, 0, info);\n\n            info.scopeId = parentInfo.id;\n        });\n\n        return new Promise(resolve => {\n            const movedInfos = nextInfos.map(({ info }) => info);\n\n            this.forceUpdate(() => {\n                updateElements(movedInfos);\n                resolve({\n                    prevInfos,\n                    nextInfos,\n                });\n            })\n        });\n    }\n    public move(infos: ElementInfo[], parentInfo: ElementInfo, prevInfo?: ElementInfo): Promise<MovedResult> {\n        const sortedInfos = this.getSortedInfos(infos.map(info => info.el!));\n\n        return this.moves(sortedInfos.map((info, i) => {\n            return {\n                info,\n                parentInfo,\n                prevInfo: i === 0 ? prevInfo : sortedInfos[i - 1],\n            };\n        }));\n    }\n}\n","import * as React from \"react\";\nimport { prefix, connectEditorProps } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport Icon from \"../Icons/Icon\";\n\n@connectEditorProps\nexport default abstract class Tab extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public static id: string;\n    public static icon: typeof Icon;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public eventList: Array<[string, any]> = [];\n    public render() {\n        return (\n            <div className={prefix(\"tab-popup\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public addEvent(name: string, callback: any) {\n        this.eventList.push([name, callback]);\n        this.eventBus.on(name, callback);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public componentWillUnmount() {\n        const eventBus = this.eventBus;\n        this.eventList.forEach(([name, callback]) => {\n            eventBus.off(name, callback);\n        });\n    }\n}\nexport default interface Tab extends React.PureComponent<{ editor: Editor }>, EditorInterface {};\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport { StyledElement } from \"react-css-styled\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<StyledElement<I>>();\n    public getValue(): any {\n        return;\n    }\n    public getElement() {\n        return this.input.current!.getElement();\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst TextElement = styled(\"input\", `\n{\n    position: relative;\n    text-align: left;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    display: block;\n    width: 100%;\n    height: 30px;\n    background: transparent;\n    color: var(--mainColor);\n    font-weight: bold;\n    background: none;\n    border: 0;\n    padding: 5px;\n    box-sizing: border-box;\n    background: var(--back1);\n    font-size: 12px;\n}\n`);\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <TextElement ref={this.input}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.getElement().value;\n    }\n    public setValue(value: any) {\n        this.getElement().value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.getElement().value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\n\nconst TabInputElement = styled(\"div\", `\n{\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n}\nh3, h4 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\nh4 {\n    font-size: 11px;\n}\n:host.scena-full {\n    width: 100%;\n}\n:host.scena-half {\n    width: 50%;\n}\n:host.scena-third {\n    width: 33%;\n}\n:host.scena-twothird {\n    width: 66%;\n}\n:host.scena-half:nth-child(2n + 1) {\n    padding-right: 5px;\n}\n:host.scena-half:nth-child(2n + 2) {\n    padding-left: 5px;\n}\n`);\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <TabInputElement className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </TabInputElement>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst AnchorElement = styled(\"div\", `\n{\n    position: relative;\n    width: 30px;\n    height: 35px;\n    margin: auto;\n    box-sizing: border-box;\n}\n.scena-anchor-input-background {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    background: var(--back1);\n}\n.scena-anchor-control {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    transform: translate(-50%, -50%);\n    left: 50%;\n    top: 50%;\n    padding: 1px;\n    box-sizing: border-box;\n}\n.scena-anchor-control:before {\n    content: \"\";\n    position: relative;\n    display: block;\n    background: var(--back5);\n    width: 100%;\n    height: 100%;\n}\n.scena-anchor-control.scena-anchor-selected {\n    padding: 0px;\n}\n.scena-anchor-control.scena-anchor-selected:before {\n    background: white;\n}\n\n.scena-anchor-control.scena-anchor-n {\n    top: 0;\n}\n.scena-anchor-control.scena-anchor-s {\n    top: 100%;\n}\n.scena-anchor-control.scena-anchor-w {\n    left: 0;\n}\n.scena-anchor-control.scena-anchor-e {\n    left: 100%;\n}\n\n`);\n\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <AnchorElement className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </AnchorElement>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class TransformIcon extends Icon {\n    public static id = \"Transform\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <rect x=\"20\" y=\"20\" width=\"40\" height=\"40\" stroke=\"#fff\" strokeWidth=\"3\" fill=\"rgba(255, 255, 255, 0.5)\"></rect>\n                <rect x=\"15\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"35\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"15\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n\n                <rect x=\"15\" y=\"35\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"35\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n\n\n                <rect x=\"15\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"35\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n                <rect x=\"55\" y=\"55\" width=\"10\" height=\"10\" fill=\"#fff\"></rect>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\nimport TransformIcon from \"../Icons/TransformIcon\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public static icon = TransformIcon;\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender);\n        this.addEvent(\"renderGroup\", this.onRender);\n        this.addEvent(\"setSelectedTargets\", this.onRender);\n\n        this.onRender();\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.yInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix, between } from \"../../utils/utils\";\nimport { IObject, isObject, isArray, findIndex, hasClass } from \"@daybrush/utils\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\nimport Gesto, { OnDrag, OnDragStart, OnDragEnd } from \"gesto\";\nimport styled, { StyledElement } from \"react-css-styled\";\n\nconst FolderElement = styled(\"div\", `\n.scena-fold-icon {\n    position: relative;\n    display: inline-block;\n    vertical-align: middle;\n    width: 10px;\n    height: 20px;\n}\n.scena-fold-icon:before {\n    content: \"\";\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    border-top: 4px solid #fff;\n    border-left: 3px solid transparent;\n    border-right: 3px solid transparent;\n}\n.scena-fold-icon.scena-fold:before {\n    border-right: 0;\n    border-left: 4px solid #fff;\n    border-top: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n}\n{\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    --file-padding: 10px;\n}\n.scena-folder .scena-properties {\n    margin-left: var(--file-padding);\n}\n.scena-file {\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n    border-bottom: 1px solid var(--back1);\n    width: 100%;\n}\n.scena-file h3 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\n.scena-shadows {\n    position: absolute;\n    pointer-events: none;\n    transition: translateY(-50%);\n    opacity: 0.5;\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: 10;\n    display: none;\n}\n.scena-file.scena-selected {\n    background: var(--mainColor);\n}\n.scena-file:before {\n    position: absolute;\n    left: calc(var(--file-padding) * var(--pointer-depth));\n    width: 100%;\n    height: 2px;\n    background: #48f;\n    transform: translateY(-50%);\n}\n.scena-file.scena-bottom-pointer:before {\n    content: \"\";\n    top: 100%;\n}\n.scena-file.scena-top-pointer:before {\n    content: \"\";\n    top: 0%;\n}\n`);\nexport interface FileInfo<T> {\n    id: string;\n    scope: string[],\n    fullId: string;\n    parentId: string;\n    depth: number;\n    value: T;\n}\n\nfunction getCurrentFile(target: HTMLElement) {\n    while (target) {\n        if (target.hasAttribute(\"data-file-key\")) {\n            break;\n        }\n        target = target.parentElement as HTMLElement;\n    }\n    return target;\n}\nexport default class Folder<T = any> extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<T> | T[],\n    selected: string[] | null,\n    multiselect?: boolean,\n    isMove?: boolean,\n    isMoveChildren?: boolean,\n    checkMove?: (prevInfo: FileInfo<T>) => boolean,\n    onMove?: (selectedInfos: Array<FileInfo<T>>, parentInfo?: FileInfo<T>, prevInfo?: FileInfo<T>) => any,\n    onSelect?: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getFullId?: (id: string, scope: string[]) => string,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any, scope: any[]) => any,\n}> {\n    public static defaultProps = {\n        selected: [],\n        onMove: () => { },\n        checkMove: () => true,\n        onSelect: () => { },\n        getFullId: (id: string, scope: string[]) => [...scope, id].join(\"///\"),\n        getId: (_: any, id: any, scope: string[]) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public moveGesto!: Gesto;\n    public folderRef = React.createRef<StyledElement<HTMLDivElement>>();\n    public shadowRef = React.createRef<HTMLDivElement>();\n    public state: {\n        fold: boolean,\n        shadows: Array<FileInfo<T>>,\n    } = {\n            fold: false,\n            shadows: [],\n        };\n    public isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    public render() {\n        const {\n            scope,\n            name,\n            getFullId,\n        } = this.props;\n\n        const fullId = scope.length ? getFullId!(scope[scope.length - 1], scope.slice(0, -1)) : \"\";\n        return <FolderElement className={prefix(\"folder\")} ref={this.folderRef}>\n            {name && <div className={prefix(\"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")}>\n                {this.renderProperties()}\n            </div>\n            {this.renderShadows()}\n        </FolderElement>\n    }\n    public componentDidMount() {\n        if (this.props.isMove) {\n            const folderElement = this.folderRef.current!.getElement();\n            this.moveGesto = new Gesto(folderElement, {\n                container: window,\n                checkInput: true,\n            }).on(\"dragStart\", this.onDragStart)\n                .on(\"drag\", this.onDrag)\n                .on(\"dragEnd\", this.onDragEnd);\n        }\n    }\n    public componentWillUnmount() {\n        if (this.moveGesto) {\n            this.moveGesto.unset();\n        }\n    }\n    private renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            getFullId,\n            FileComponent,\n            isMove,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = (properties as any)[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const children = getChildren!(value, key, scope);\n\n            if (children && (isArray(children) ? children.length : isObject(children))) {\n                return <Folder<T> key={fullId}\n                    name={name} scope={nextScope} properties={children}\n                    multiselect={multiselect}\n                    getId={getId}\n                    getName={getName}\n                    getFullId={getFullId}\n                    getChildren={getChildren}\n                    selected={selected} onSelect={isMove ? undefined : onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullId} className={prefix(\"file\", this.isSelected(fullId) ? \"selected\" : \"\")}\n                data-file-key={fullId} onClick={isMove ? undefined : this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullId={fullId} />\n            </div>;\n        });\n    }\n    private renderShadows() {\n        const {\n            FileComponent,\n            getName,\n            scope,\n        } = this.props;\n        if (scope.length) {\n            return;\n        }\n        return <div className={prefix(\"shadows\")} ref={this.shadowRef}>\n            {this.state.shadows.map(info => {\n                const {\n                    scope: fileScope,\n                    value,\n                    fullId,\n                    id,\n                } = info;\n                const name = getName!(value, id);\n                return <div key={fullId} className={prefix(\"file\", \"selected\", \"shadow\")}>\n                    <FileComponent scope={fileScope} name={name} value={value} fullId={fullId} />\n                </div>;\n            })}\n        </div>;\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        });\n    }\n    private onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect!(nextSelected);\n        } else {\n            onSelect!([key]);\n        }\n    }\n    private onDragStart = (e: OnDragStart) => {\n        if (hasClass(e.inputEvent.target, prefix(\"fold-icon\"))) {\n            e.stop();\n            return false;\n        }\n        const folderElement = this.folderRef.current!.getElement();\n        const rect = folderElement.getBoundingClientRect();\n        const datas = e.datas;\n        const offsetX = e.clientX - rect.left;\n        // const offsetY = e.clientY - rect.top;\n\n        datas.offsetX = offsetX;\n        datas.folderRect = rect;\n        datas.folderLine = rect.left + rect.width - 10;\n        datas.objMap = this.flatMap();\n\n        e.inputEvent.preventDefault();\n        e.inputEvent.stopPropagation();\n    }\n\n    private onDrag = (e: OnDrag) => {\n        const folderElement = this.folderRef.current!.getElement();\n        const { clientX, clientY, datas } = e;\n\n        this.clearPointers();\n        datas.prevInfo = null;\n        datas.isTop = false;\n        const selected = this.props.selected!;\n        const objMap = datas.objMap;\n\n\n        if (!datas.dragFirst) {\n            datas.dragFirst = true;\n            const clickedTarget: HTMLElement = getCurrentFile(e.inputEvent.target);\n\n            if (clickedTarget && selected.indexOf(clickedTarget.getAttribute(\"data-file-key\")!) === -1) {\n                this.onClick({ currentTarget: clickedTarget });\n                return;\n            }\n        }\n        if (!selected || !selected.length) {\n            return;\n        }\n        const fileInfos: Array<FileInfo<T>> = selected.map(id => objMap[id]);\n\n        if (!this.state.shadows.length) {\n            this.setState({\n                shadows: fileInfos,\n            }, () => {\n                // datas.offsetY = 0;\n                this.updateShadowPosition(datas.folderRect, e);\n            });\n            return;\n        } else {\n            this.updateShadowPosition(datas.folderRect, e);\n        }\n        let target = getCurrentFile(document.elementFromPoint(datas.folderLine, e.clientY) as HTMLElement);\n\n        if (!target) {\n            return;\n        }\n        const infos = this.flatChildren();\n        let rect = target.getBoundingClientRect();\n        let isTop = rect.top + rect.height / 2 > clientY;\n\n        let key = target.getAttribute(\"data-file-key\")!;\n        let siblingIndex = findIndex(infos, info => info.fullId === key);\n        let targetInfo = infos[siblingIndex];\n        let prevInfo = infos[siblingIndex - 1];\n\n        if (prevInfo && isTop) {\n            --siblingIndex;\n            targetInfo = infos[siblingIndex];\n            prevInfo = infos[siblingIndex - 1];\n            key = targetInfo.fullId!;\n            target = folderElement.querySelector<HTMLElement>(`[data-file-key=\"${key}\"]`)!;\n\n            if (!target) {\n                return;\n            }\n            rect = target.getBoundingClientRect();\n            isTop = false;\n        }\n        const nextInfo = infos[siblingIndex + 1];\n        const targetDepth = targetInfo.depth;\n        const nextDepth = nextInfo ? nextInfo.depth : 0;\n        const depthRange = [\n            Math.min(nextDepth, targetDepth) - targetDepth,\n            Math.max(targetDepth + 1, nextDepth) - targetDepth,\n        ];\n        let distX = clientX - rect.left;\n        let distDepth = isTop ? 0\n            : between(Math.round((distX > 0 ? distX * 0.2 : distX) / 10), depthRange[0], depthRange[1]);\n\n        if (nextInfo && !isTop && selected.indexOf(nextInfo.fullId) > -1 && targetDepth + distDepth === nextDepth) {\n            return;\n        }\n        if (this.contains(selected, key)) {\n            return;\n        }\n        if (selected.indexOf(key) > -1 && distDepth >= 0) {\n            return;\n        }\n        const {\n            isMoveChildren,\n            checkMove,\n        } = this.props;\n\n        if (isMoveChildren) {\n            const prevScope = targetInfo.scope;\n            const parentScope = [...targetInfo.scope, targetInfo.id];\n\n            if (fileInfos.every(info => info.scope.every((v, i) => v === prevScope[i]))) {\n                distDepth = 0;\n            } else if (fileInfos.every(info => info.scope.every((v, i) => v === parentScope[i]))) {\n                distDepth = 1;\n            } else {\n                return;\n            }\n        } else if (distDepth > 0 && !checkMove!(targetInfo)) {\n            distDepth = 0;\n        }\n        target.style.setProperty(\"--pointer-depth\", `${distDepth}`);\n        target.classList.add(prefix(isTop ? \"top-pointer\" : \"bottom-pointer\"));\n\n\n        datas.depth = distDepth;\n        datas.isTop = isTop;\n        datas.prevInfo = targetInfo;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        this.clearPointers();\n\n        if (!e.isDrag) {\n            const currentTarget = getCurrentFile(e.inputEvent.target);\n\n            if (currentTarget) {\n                this.onClick({ currentTarget });\n            }\n            return;\n        }\n        const datas = e.datas;\n        const depth = datas.depth;\n        let prevInfo: FileInfo<T> | undefined = datas.prevInfo;\n        const isTop = datas.isTop;\n        const onMove = this.props.onMove!;\n        const objMap = datas.objMap;\n        const selectedInfos: Array<FileInfo<T>> = (this.props.selected || []).map(id => objMap[id]);\n\n        let parentInfo: FileInfo<T> | undefined;\n\n        if (prevInfo) {\n            if (depth <= 0) {\n                const length = Math.abs(depth);\n\n                for (let i = 0; i < length; ++i) {\n                    prevInfo = objMap[prevInfo!.parentId];\n                }\n                parentInfo = objMap[prevInfo!.parentId];\n            } else {\n                parentInfo = prevInfo;\n                prevInfo = undefined;\n            }\n        }\n\n        if (!parentInfo && isTop) {\n            onMove(selectedInfos);\n        } else if (parentInfo || prevInfo) {\n            onMove!(selectedInfos, parentInfo, prevInfo);\n        }\n        this.setState({\n            shadows: [],\n        }, () => {\n            this.shadowRef.current!.style.cssText = \"display: none\";\n        })\n    }\n    private updateShadowPosition(rect: ClientRect, e: OnDragStart | OnDrag) {\n        const el = this.shadowRef.current;\n\n        if (!el || !this.state.shadows.length) {\n            return;\n        }\n        const datas = e.datas;\n        el.style.cssText\n            = `display: block; transform: translate(${e.clientX - rect.left - datas.offsetX}px, ${e.clientY - rect.top}px) translateY(-50%)`;\n    }\n    private contains(ids: string[], key: string, objMap = this.flatMap()): boolean {\n        const info = objMap[key];\n        const parentId = info.parentId;\n\n        if (!parentId) {\n            return false;\n        }\n        if (ids.indexOf(parentId) > -1) {\n            return true;\n        }\n        return this.contains(ids, parentId, objMap);\n    }\n    private flatMap() {\n        const children = this.flatChildren();\n        const objMap: IObject<FileInfo<T>> = {};\n        children.forEach(info => {\n            objMap[info.fullId] = info;\n        });\n\n        return objMap;\n    }\n    private flatChildren(\n        properties = this.props.properties!,\n        parentId: string = \"\",\n        scope: string[] = [],\n        children: FileInfo<T>[] = []\n    ) {\n        const keys = Object.keys(properties);\n        const {\n            getFullId,\n            getId,\n            getChildren,\n        } = this.props;\n        const depth = scope.length;\n        keys.forEach(key => {\n            const value = (properties as any)[key];\n            const nextScope = scope.slice();\n            const id = getId!(value, key);\n            const fullId = getFullId!(id, nextScope);\n            nextScope.push(id);\n\n            const valueChildren = getChildren!(value, key, scope);\n\n            children.push({\n                id,\n                fullId,\n                parentId,\n                depth,\n                scope,\n                value,\n            });\n            if (valueChildren && (isArray(valueChildren) ? valueChildren.length : isObject(valueChildren))) {\n                this.flatChildren(valueChildren, fullId, nextScope, children);\n            }\n        });\n\n        return children;\n    }\n    private clearPointers() {\n        [].slice.call(document.querySelectorAll<HTMLElement>(\".scena-top-pointer, .scena-bottom-pointer\")).forEach((el: HTMLElement) => {\n            const classList = el.classList;\n\n            classList.remove(prefix(\"top-pointer\"));\n            classList.remove(prefix(\"bottom-pointer\"));\n        });\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst LabelElement = styled(\"div\", `\n{\n    position: relative;\n    box-sizing: border-box;\n    padding: 2px;\n    display: inline-block;\n    vertical-align: top;\n}\nh3 {\n    color: white;\n    margin: 0;\n    padding: 7px 5px;\n    font-size: 12px;\n    font-weight: bold;\n    display: inline-block;\n}\n:host.scena-full {\n    width: 100%;\n}\n:host.scena-half {\n    width: 50%;\n}\n:host.scena-third {\n    width: 33%;\n}\n:host.scena-twothird {\n    width: 66%;\n}\n:host.scena-half:nth-child(2n + 1) {\n    padding-right: 5px;\n}\n:host.scena-half:nth-child(2n + 2) {\n    padding-left: 5px;\n}\n`);\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\" | \"\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <LabelElement className={prefix(\"label\", type)}>\n            <h3>{label}</h3>\n        </LabelElement>;\n    }\n}\n","import * as React from \"react\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullId: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class FrameIcon extends Icon {\n    public static id = \"Frame\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(1.18519,0,0,2.42309,-7.4076,-21.5629)\">\n                    <rect x=\"13\" y=\"17\" width=\"54\" height=\"2\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.18519,0,0,2.42309,-7.40741,14.3317)\">\n                    <rect x=\"13\" y=\"17\" width=\"54\" height=\"2\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.03519,0,0,1.31422,37.8389,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(1.03519,0,0,1.31422,11.7648,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n                <g transform=\"matrix(0.592593,0,0,1.31422,0.296296,-2.71207)\">\n                    <rect x=\"13\" y=\"25\" width=\"20\" height=\"15\" fill=\"white\" />\n                </g>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport Folder, { FileInfo } from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport { NameType } from \"scenejs\";\nimport FrameIcon from \"../../Icons/FrameIcon\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public static icon = FrameIcon;\n    public title = \"Frame\";\n    public state: {\n        selected: string[],\n    } = {\n        selected: [],\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = this.moveableData.getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder<NameType> name=\"\"\n                properties={frame.getOrders([]) || []}\n                getId={v => v}\n                getName={v => v}\n                getChildren={(value, _, scope) => {\n                    return frame.getOrders([...scope, value]) || [];\n                }}\n                scope={[]}\n                selected={selected}\n                isMove={true}\n                isMoveChildren={true}\n                checkMove={() => false}\n                onMove={this.onMove}\n                onSelect={this.onSelect}\n                FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullId, scope }: File[\"props\"]) => {\n        const frame = this.moveableData.getSelectedFrames()[0];\n\n        return <Property name={name} fullId={fullId} scope={scope} value={frame.get(...fullId.split(\"///\"))} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onMove = (selectedInfos: Array<FileInfo<any>>, parentInfo?: FileInfo<any>, prevInfo?: FileInfo<any>) => {\n        const parentScope = parentInfo ? [...parentInfo.scope, parentInfo.id] : [];\n        const frames = this.moveableData.getSelectedFrames();\n        const frame = frames[0];\n        const orders = (frame.getOrders(parentScope) || []).slice();\n\n        const selectedProperty = selectedInfos[0].id;\n        const selectedIndex = orders.indexOf(selectedProperty);\n\n        if (selectedIndex !== -1) {\n            orders.splice(selectedIndex, 1);\n        }\n        if (prevInfo) {\n            const prevIndex = orders.indexOf(prevInfo.id);\n\n            if (prevIndex === -1) {\n                orders.push(selectedProperty);\n            } else {\n                orders.splice(prevIndex + 1, 0, selectedProperty);\n            }\n        } else {\n            orders.splice(0, 0, selectedProperty);\n        }\n        this.editor.setOrders(parentScope, orders, true);\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = this.moveableData.getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        this.editor.setProperty(scope, value, true);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = [];\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class AlignIcon extends Icon {\n    public static id = \"Align\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <rect x=\"15\" y=\"16\" width=\"36\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n                <rect x=\"15\" y=\"35\" width=\"26\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n                <rect x=\"15\" y=\"54\" width=\"46\" height=\"6\" rx=\"3\" fill=\"#fff\"></rect>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix, getId } from \"../../utils/utils\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\nimport AlignIcon from \"../../Icons/AlignIcon\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public static icon = AlignIcon;\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n            const infos = moveables.map(child => {\n                const target = child.state.target!;\n                const frame = this.moveableData.getFrame(target);\n\n                if (frame) {\n                    const prev = frame.get();\n                    const subRect = child.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n\n                    return { id: getId(target), prev, next: frame.get() };\n                }\n                return false;\n            }).filter(target => target);\n\n\n            this.historyManager.addAction(\"renders\", {\n                infos,\n            });\n            this.moveableData.renderFrames();\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class LayerIcon extends Icon {\n    public static id = \"Layer\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    fill: \"rgba(255, 255, 255, 0.5)\",\n                }}></path>\n                     <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    fill: \"rgba(255, 255, 255, 0.5)\",\n                    transform: \"translateY(10px)\",\n                }}></path>\n                <path d=\"M36.5,20 L56.5,30 L36.5,40 L16.5,30 L36.5,20Z\" fill=\"#fff\" stroke=\"#fff\" strokeWidth=\"3\" style={{\n                    transform: \"translateY(20px)\",\n                }}></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport Folder, { FileInfo } from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport Layer from \"./Layer\";\nimport { getIds, isScenaFunction } from \"../../utils/utils\";\nimport { isString } from \"@daybrush/utils\";\nimport { ElementInfo } from \"../../types\";\nimport LayerIcon from \"../../Icons/LayerIcon\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public static icon = LayerIcon;\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = this.editor.getViewportInfos();\n        const selected = getIds(this.moveableData.getSelectedTargets());\n\n        return <Folder<ElementInfo>\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            isMove={true}\n            getId={(v: ElementInfo) => v.id}\n            getFullId={id => id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={(v: ElementInfo) => v.children || []}\n            selected={selected}\n            onSelect={this.onSelect}\n            checkMove={this.checkMove}\n            onMove={this.onMove}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullId, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullId={fullId} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"setSelectedTargets\", this.setSelectedTargets);\n    }\n\n    private onSelect = (selected: string[]) => {\n        this.eventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        });\n    }\n    private onMove = (selectedInfos: Array<FileInfo<ElementInfo>>, parentInfo?: FileInfo<ElementInfo>, prevInfo?: FileInfo<ElementInfo>) => {\n        const editor = this.editor;\n        const viewport = editor.getViewport();\n\n        this.editor.moves(selectedInfos.map((info, i) => ({\n            info: info.value,\n            parentInfo: viewport.getInfo(parentInfo ? parentInfo.fullId : \"viewport\"),\n            prevInfo: i === 0\n                ? viewport.getInfo(prevInfo ? prevInfo.fullId : \"\")\n                : selectedInfos[i - 1].value,\n        })));\n    }\n    private checkMove = (prevInfo: FileInfo<ElementInfo>) => {\n        const jsx = prevInfo.value.jsx;\n\n        console.log(jsx);\n        if (isScenaFunction(jsx)) {\n            return false;\n        }\n\n        return isString(jsx) || isString(jsx.type);\n    }\n    private setSelectedTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport styled from \"react-css-styled\";\n\nconst ColorBoxElement = styled(\"div\", `\n.scena-color-input {\n    position: relative;\n}\n.scena-color-picker {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    transform: translateY(10px) translateZ(1px);\n    z-index: 10;\n}\n\n.scena-color-background {\n    position: relative;\n    width: 30px;\n    height: 30px;\n    background: #4af;\n    border-radius: 5px;\n    display: inline-block;\n    vertical-align: top;\n    margin-right: 5px;\n}\n.scena-color-background+.scena-input {\n    display: inline-block;\n    vertical-align: top;\n    width: calc(100% - 40px);\n}\n\n`);\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <ColorBoxElement className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </ColorBoxElement>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.getElement().contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.getElement().focus();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class ColorIcon extends Icon {\n    public static id = \"Colors\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#e77\" cx=\"36.5\" cy=\"26\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n                <ellipse fill=\"#7e7\" cx=\"23\" cy=\"50\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n                <ellipse fill=\"#77e\" cx=\"50\" cy=\"50\" rx=\"17\" ry=\"17\"\n                    strokeLinejoin=\"round\"></ellipse>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport ColorIcon from \"../../Icons/ColorIcon\";\n\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public static icon = ColorIcon;\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = this.moveableData.getSelectedFrames();\n        let backgroundColor = this.memory.get(\"background-color\");\n        let color = this.memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        this.memory.set(\"background-color\", v);\n        this.editor.setProperty([\"background-color\"], v);\n    }\n    public onChangeTextColor = (v: string) => {\n        this.memory.set(\"color\", v);\n        this.editor.setProperty([\"color\"], v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport styled from \"react-css-styled\";\n\nconst SelectElement = styled(\"select\", `\n{\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n    display: block;\n    width: 100%;\n    height: 30px;\n    padding: 5px;\n    background: transparent;\n    color: var(--mainColor);\n    font-weight: bold;\n    background: var(--back1);\n    border: 0;\n    box-sizing: border-box;\n    text-align: center;\n}\n\n`);\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <SelectElement ref={this.input}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </SelectElement>\n        );\n    }\n    public getValue(): any {\n        return this.getElement().value;\n    }\n    public setValue(value: any) {\n        this.getElement().value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.getValue());\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class FontIcon extends Icon {\n    public static id = \"Font\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                    style={{ fill: \"white\" }} />\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport FontIcon from \"../../Icons/FontIcon\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public static icon = FontIcon;\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = this.moveableData.getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        this.addEvent(\"render\", this.onRender as any);\n        this.addEvent(\"setSelectedTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        this.memory.set(name, v);\n        this.editor.setProperty([name], v, true);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport TransformTab from \"./TransformTab\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport Editor from \"../Editor\";\nimport styled, { StyledElement } from \"react-css-styled\";\n\nconst TabsElement = styled(\"div\", `\n{\n    position: absolute;\n    right: 0;\n    width: 40px;\n    height: 100%;\n    background: var(--back2);\n    z-index: 10;\n    transform: translateZ(10px);\n    box-sizing: border-box;\n    padding-top: 30px;\n    transition: width ease 0.2s;\n    text-align: left;\n}\n.scena-tab {\n    position: relative;\n    margin: 5px;\n}\n.scena-tab-icon {\n    position: relative;\n    position: relative;\n    color: #fff;\n    font-size: 11px;\n    font-weight: bold;\n    word-break: break-all;\n    padding: 5px;\n    width: 30px;\n    line-height: 20px;\n    height: 30px;\n    box-sizing: border-box;\n    border-radius: 3px;\n    text-align: left;\n    overflow: hidden;\n\n}\n.scena-tab-icon * {\n    pointer-events: none;\n}\n\n.scena-tab.scena-selected .scena-tab-icon {\n    background: var(--mainColor);\n}\n\n.scena-tab-popup {\n    position: absolute;\n    right: 100%;\n    top: 0;\n    transform: translate(-5px);\n    width: var(--tab);\n    padding: 0px 10px 10px;\n    background: var(--back2);\n    border-bottom: 1px solid var(--back1);\n    text-align: left;\n}\n\n.scena-tab-popup h2 {\n    margin: 0;\n    color: white;\n    font-weight: bold;\n    font-size: 14px;\n    padding: 8px 0px;\n}\n\n.scena-tab-line {\n    position: relative;\n    display: block;\n}\n\n`);\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent<{\n    editor: Editor,\n}> {\n    public tabs = React.createRef<StyledElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <TabsElement className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.blur}>\n            {this.renderTabs()}\n        </TabsElement>;\n    }\n    public renderTabs() {\n        const editor = this.props.editor;\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            const IconComponent = UserTab.icon;\n            return <div key={id} className={prefix(\"tab\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon\")} onClick={this.onClick}>\n                    {IconComponent ? <IconComponent editor={editor} /> : <span>{id}</span>}\n                </div>\n                {isSelected && <UserTab editor={editor} />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public blur = () => {\n        this.tabs.current!.getElement().classList.remove(\"scena-over\");\n    }\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.getElement().classList.add(\"scena-over\");\n    }\n}\n","import Component from \"@egjs/component\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass EventBus extends Component {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nexport default EventBus;\n","export default class Memory {\n    public map = new Map<any, any>();\n    public get(key: any) {\n        return this.map.get(key);\n    }\n    public set(key: any, value: any) {\n        return this.map.set(key, value);\n    }\n    public clear() {\n        this.map.clear();\n    }\n}\n","import * as React from \"react\";\nimport Moveable, { MoveableManagerInterface } from \"react-moveable\";\nimport { getContentElement, connectEditorProps, getId } from \"../utils/utils\";\nimport Editor from \"../Editor\";\nimport { EditorInterface } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { diff } from \"@egjs/list-differ\";\n\nfunction restoreRender(id: string, state: IObject<any>, prevState: IObject<any>, orders: any, editor: Editor) {\n    const el = editor.viewport.current!.getElement(id);\n\n    if (!el) {\n        console.error(\"No Element\");\n        return false;\n    }\n    const moveableData = editor.moveableData;\n    const frame = moveableData.getFrame(el);;\n\n    frame.clear();\n    frame.set(state);\n    frame.setOrderObject(orders);\n\n    const result = diff(Object.keys(prevState), Object.keys(state));\n    const { removed, prevList } = result;\n\n    removed.forEach(index => {\n        el.style.removeProperty(prevList[index]);\n    });\n    moveableData.render(el);\n    return true;\n}\nfunction undoRender({ id, prev, next, prevOrders }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, prev, next, prevOrders, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRender({ id, prev, next, nextOrders }: IObject<any>, editor: Editor) {\n    if (!restoreRender(id, next, prev, nextOrders, editor)) {\n        return;\n    }\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction undoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, prev, next, prevOrders }: IObject<any>) => {\n        restoreRender(id, prev, next, prevOrders, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\nfunction redoRenders({ infos }: IObject<any>, editor: Editor) {\n    infos.forEach(({ id, next, prev, nextOrders }: IObject<any>) => {\n        restoreRender(id, next, prev, nextOrders, editor);\n    });\n    editor.moveableManager.current!.updateRect();\n    editor.eventBus.trigger(\"render\");\n}\n\nexport interface DimensionViewableProps {\n    dimensionViewable?: boolean;\n}\nconst DimensionViewable = {\n    name: \"dimensionViewable\",\n    props: {\n        dimensionViewable: Boolean,\n    },\n    events: {},\n    render(moveable: MoveableManagerInterface) {\n        const { left, top } = moveable.state;\n\n        const rect = moveable.getRect();\n\n        return <div key={\"dimension-viewer\"} className={\"moveable-dimension\"} style={{\n            left: `${rect.left + rect.width / 2 - left}px`,\n            top: `${rect.top + rect.height + 20 - top}px`,\n        }}>\n            {Math.round(rect.offsetWidth)} x {Math.round(rect.offsetHeight)}\n        </div>\n    }\n}\n@connectEditorProps\nexport default class MoveableManager extends React.PureComponent<{\n    editor: Editor,\n    selectedTargets: Array<HTMLElement | SVGElement>;\n    selectedMenu: string,\n    verticalGuidelines: number[],\n    horizontalGuidelines: number[],\n}> {\n    public moveable = React.createRef<Moveable>();\n    public getMoveable() {\n        return this.moveable.current!;\n    }\n    public render() {\n        const {\n            editor,\n            verticalGuidelines,\n            horizontalGuidelines,\n            selectedTargets,\n            selectedMenu,\n        } = this.props;\n        // const\n\n        if (!selectedTargets.length) {\n            return this.renderViewportMoveable();\n        }\n        const {\n            moveableData,\n            keyManager,\n            eventBus,\n            selecto,\n            memory,\n        } = editor;\n        const elementGuidelines = [...moveableData.getTargets()].filter(el => {\n            return selectedTargets.indexOf(el) === -1;\n        });\n        const isShift = keyManager.shiftKey;\n\n        return <Moveable<DimensionViewableProps>\n            ables={[DimensionViewable]}\n            ref={this.moveable}\n            targets={selectedTargets}\n            dimensionViewable={true}\n            draggable={true}\n            resizable={true}\n            pinchable={[\"rotatable\"]}\n            throttleResize={1}\n            clippable={selectedMenu === \"Crop\"}\n            passDragArea={selectedMenu === \"Text\"}\n            checkInput={selectedMenu === \"Text\"}\n            throttleDragRotate={isShift ? 45 : 0}\n            keepRatio={selectedTargets.length > 1 ? true : isShift}\n            rotatable={true}\n            snappable={true}\n            snapCenter={true}\n            snapGap={false}\n            roundable={true}\n            verticalGuidelines={verticalGuidelines}\n            horizontalGuidelines={horizontalGuidelines}\n            elementGuidelines={elementGuidelines}\n            clipArea={true}\n            clipVerticalGuidelines={[0, \"50%\", \"100%\"]}\n            clipHorizontalGuidelines={[0, \"50%\", \"100%\"]}\n            clipTargetBounds={true}\n\n            onBeforeRenderStart={moveableData.onBeforeRenderStart}\n            onBeforeRenderGroupStart={moveableData.onBeforeRenderGroupStart}\n            onDragStart={moveableData.onDragStart}\n            onDrag={moveableData.onDrag}\n            onDragGroupStart={moveableData.onDragGroupStart}\n            onDragGroup={moveableData.onDragGroup}\n\n            onScaleStart={moveableData.onScaleStart}\n            onScale={moveableData.onScale}\n            onScaleGroupStart={moveableData.onScaleGroupStart}\n            onScaleGroup={moveableData.onScaleGroup}\n\n            onResizeStart={moveableData.onResizeStart}\n            onResize={moveableData.onResize}\n            onResizeGroupStart={moveableData.onResizeGroupStart}\n            onResizeGroup={moveableData.onResizeGroup}\n\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n            onRotateGroupStart={moveableData.onRotateGroupStart}\n            onRotateGroup={moveableData.onRotateGroup}\n\n            defaultClipPath={memory.get(\"crop\") || \"inset\"}\n            onClip={moveableData.onClip}\n\n            onDragOriginStart={moveableData.onDragOriginStart}\n            onDragOrigin={e => {\n                moveableData.onDragOrigin(e);\n            }}\n\n            onRound={moveableData.onRound}\n\n            onClick={e => {\n                const target = e.inputTarget as any;\n                if (e.isDouble && target.isContentEditable) {\n                    editor.selectMenu(\"Text\");\n                    const el = getContentElement(target);\n\n                    if (el) {\n                        el.focus();\n                    }\n                }\n            }}\n            onClickGroup={e => {\n                selecto.current!.clickTarget(e.inputEvent, e.inputTarget);\n            }}\n            onRenderStart={e => {\n                e.datas.prevData = moveableData.getFrame(e.target).get();\n            }}\n            onRender={e => {\n                e.datas.isRender = true;\n                eventBus.requestTrigger(\"render\");\n            }}\n            onRenderEnd={e => {\n                eventBus.requestTrigger(\"render\");\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                this.historyManager.addAction(\"render\", {\n                    id: getId(e.target),\n                    prev: e.datas.prevData,\n                    next: moveableData.getFrame(e.target).get(),\n                });\n            }}\n            onRenderGroupStart={e => {\n                e.datas.prevDatas = e.targets.map(target => moveableData.getFrame(target).get());\n            }}\n            onRenderGroup={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n                e.datas.isRender = true;\n            }}\n            onRenderGroupEnd={e => {\n                eventBus.requestTrigger(\"renderGroup\", e);\n\n                if (!e.datas.isRender) {\n                    return;\n                }\n                const prevDatas = e.datas.prevDatas;\n                const infos = e.targets.map((target, i) => {\n                    return {\n                        id: getId(target),\n                        prev: prevDatas[i],\n                        next: moveableData.getFrame(target).get(),\n                    }\n                });\n                this.historyManager.addAction(\"renders\", {\n                    infos,\n                });\n            }}\n        ></Moveable>\n    }\n    public renderViewportMoveable() {\n        const moveableData = this.moveableData;\n        const viewport = this.editor.getViewport();\n        const target = viewport ? viewport.viewportRef.current! : null;\n\n        return <Moveable\n            ref={this.moveable}\n            // rotatable={true}\n            target={target}\n            origin={false}\n            onRotateStart={moveableData.onRotateStart}\n            onRotate={moveableData.onRotate}\n        ></Moveable>\n    }\n    public componentDidMount() {\n        this.historyManager.registerType(\"render\", undoRender, redoRender);\n        this.historyManager.registerType(\"renders\", undoRenders, redoRenders);\n        this.keyManager.keydown([\"shift\"], () => {\n            this.forceUpdate();\n        });\n        this.keyManager.keyup([\"shift\"], () => {\n            this.forceUpdate();\n        });\n    }\n    public updateRect() {\n        this.getMoveable().updateRect();\n    }\n}\nexport default interface MoveableManager extends EditorInterface { }\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame, NameType } from \"scenejs\";\nimport { getId } from \"./utils\";\n\nexport default class MoveableData extends MoveableHelper {\n    public selectedTargets: Array<HTMLElement | SVGElement> = [];\n    constructor(private memory: Memory) {\n        super({\n            createAuto: true,\n            useBeforeRender: true,\n        });\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>) {\n        this.selectedTargets = targets;\n    }\n    public getSelectedTargets() {\n        return this.selectedTargets;\n    }\n    public getSelectedFrames(): Frame[] {\n        return this.getSelectedTargets().map(target => this.getFrame(target));\n    }\n    public renderFrames() {\n        this.getSelectedTargets().forEach((target: any) => {\n            this.render(target);\n        });\n    }\n    public setOrders(scope: string[], orders: NameType[]) {\n        return this.setValue(frame => {\n            frame.setOrders(scope, orders);\n        });\n    }\n    public setProperty(names: string[], value: any) {\n        return this.setValue(frame => {\n            frame.set(...names, value);\n        });\n    }\n    public removeProperties(...names: string[]) {\n        return this.setValue((frame, target) => {\n            names.forEach(name => {\n                frame.remove(name);\n                target.style.removeProperty(name);\n            });\n        });\n    }\n    public getProperties(properties: string[][], defaultValues: any[]) {\n        const frames = this.getSelectedFrames();\n        const memory = this.memory;\n\n        if (!frames.length) {\n            return properties.map((property, i) => memory.get(property.join(\"///\")) || defaultValues[i]);\n        }\n\n        return properties.map((property, i) => {\n            const frameValues = frames.map(frame => frame.get(...property));\n\n            return frameValues.filter(color => color)[0] || defaultValues[i];\n        });\n    }\n    private setValue(callback: (frame: Frame, target: HTMLElement | SVGElement) => void) {\n        const targets = this.getSelectedTargets();\n\n        const infos = targets.map(target => {\n            const frame = this.getFrame(target);\n            const prevOrders = frame.getOrderObject();\n            const prev = frame.get();\n\n            callback(frame, target);\n            const next = frame.get();\n            const nextOrders = frame.getOrderObject();\n\n            return { id: getId(target), prev, prevOrders, next, nextOrders };\n\n        });\n        this.renderFrames();\n\n        return infos;\n    }\n\n}\n","import { IObject } from \"@daybrush/utils\";\nimport Editor from \"../Editor\";\n\nexport type RestoreCallback = (props: any, editor: Editor) => any;\nexport interface HistoryAction {\n    type: string;\n    props: IObject<any>;\n}\nexport default class HistoryManager {\n    private undoStack: HistoryAction[] = [];\n    private redoStack: HistoryAction[] = [];\n    private types: IObject<{ redo: RestoreCallback, undo: RestoreCallback }> = {};\n    constructor(private editor: Editor) { }\n    public registerType(type: string, undo: RestoreCallback, redo: RestoreCallback) {\n        this.types[type] = { undo, redo };\n    }\n    public addAction(type: string, props: IObject<any>) {\n        this.editor.console.log(`Add History:`, type, props);\n        this.undoStack.push({\n            type,\n            props,\n        });\n        this.redoStack = [];\n    }\n    public undo() {\n        const undoAction = this.undoStack.pop();\n\n        if (!undoAction) {\n            return;\n        }\n        this.editor.console.log(`Undo History: ${undoAction.type}`, undoAction.props);\n        this.types[undoAction.type].undo(undoAction.props, this.editor);\n        this.redoStack.push(undoAction);\n    }\n    public redo() {\n        const redoAction = this.redoStack.pop();\n\n        if (!redoAction) {\n            return;\n        }\n        this.editor.console.log(`Redo History: ${redoAction.type}`, redoAction.props);\n        this.types[redoAction.type].redo(redoAction.props, this.editor);\n        this.undoStack.push(redoAction);\n    }\n}\n","export default class Debugger {\n    constructor(private isDebug?: boolean) {}\n    public log(...args: any[]) {\n        if (!this.isDebug) {\n            return;\n        }\n        console.log(\"%c Scena Debugger:\", \"padding: 1px; background: #4af; color: #fff;\", ...args);\n    }\n}\n","import * as React from \"react\";\nimport { ClipboardItem, SavedScenaData } from \"../types\";\nimport Editor from \"../Editor\";\nimport { checkInput } from \"./utils\";\nimport html2canvas from \"html2canvas\";\nimport { TYPE_SCENA_LAYERS } from \"../consts\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\n\n\nexport default class ClipboardManager {\n    constructor(private editor: Editor) {\n        document.addEventListener(\"cut\", this.onCut);\n        document.addEventListener(\"copy\", this.onCopy);\n        document.addEventListener(\"paste\", this.onPaste);\n    }\n    public destroy() {\n        document.removeEventListener(\"cut\", this.onCut);\n        document.removeEventListener(\"copy\", this.onCopy);\n        document.removeEventListener(\"paste\", this.onPaste);\n    }\n    public copy() {\n        document.execCommand(\"copy\");\n    }\n    public cut() {\n        document.execCommand(\"cut\");\n    }\n    public paste() {\n        document.execCommand(\"paste\");\n    }\n    public copyImage() {\n        const moveableData = this.editor.moveableData;\n        const targets = moveableData.getSelectedTargets();\n        const moveable = this.editor.getMoveable();\n        const length = targets.length;\n        const moveables = length > 1 ? (moveable.moveable as MoveableGroup).moveables : [];\n\n        return new Promise(resolve => {\n            Promise.all(targets.map(target => html2canvas(target as HTMLElement))).then(images => {\n                let imageCanvas: HTMLCanvasElement;\n                if (length > 1) {\n                    const parentRect = moveable.getRect();\n                    const canvas = document.createElement(\"canvas\");\n                    canvas.width = parentRect.width;\n                    canvas.height = parentRect.height;\n                    const context = canvas.getContext(\"2d\")!;\n                    const rects = moveables.map(m => m.getRect());\n\n                    rects.forEach((rect, i) => {\n                        context.drawImage(images[i], rect.left - parentRect.left, rect.top - parentRect.top);\n                    });\n\n                    imageCanvas = canvas;\n                } else {\n                    imageCanvas = images[0];\n                }\n                imageCanvas.toBlob(blob => {\n                    (navigator.clipboard as any).write([\n                        new (window as any).ClipboardItem({\n                            \"image/png\": blob,\n                        }),\n                    ]);\n                    resolve();\n                });\n            });\n        });\n    }\n    private onCut = (e: any) => {\n        const copied = this.onCopy(e);\n\n        if (!copied) {\n            return;\n        }\n        this.editor.console.log(\"cut scena data\");\n        this.editor.removeElements(this.editor.getSelectedTargets());\n    }\n\n    private onCopy = async (e: any) => {\n        if (checkInput(e.target)) {\n            return false;\n        }\n        e.preventDefault();\n\n        const clipboardData = (e as any).clipboardData as DataTransfer;\n        const moveableData = this.editor.moveableData;\n        const targets = moveableData.getSelectedTargets();\n        const SavedScenaData = this.editor.saveTargets(targets);\n\n        this.editor.console.log(\"copy scena data\", SavedScenaData);\n        clipboardData.setData(TYPE_SCENA_LAYERS, JSON.stringify(SavedScenaData));\n\n        return true;\n    }\n    private onPaste = (e: any) => {\n        if (checkInput(e.target)) {\n            return;\n        }\n\n        this.read((e as any).clipboardData);\n        e.preventDefault();\n    }\n    private readDataTransfter(data: DataTransfer) {\n        const types = data.types;\n        const hasScena = types.indexOf(TYPE_SCENA_LAYERS) > -1;\n\n        if (hasScena) {\n            const scenaDatas = JSON.parse(data.getData(TYPE_SCENA_LAYERS)) as SavedScenaData[];\n\n            this.editor.console.log(\"paste scena data\", scenaDatas);\n\n            this.editor.loadDatas(scenaDatas);\n            return true;\n        }\n        return false;\n    }\n    private async read(data: DataTransfer) {\n        if (this.readDataTransfter(data)) {\n            return true;\n        }\n        const clipboardItems: ClipboardItem[] = await (navigator.clipboard as any).read();\n\n        let hasText = false;\n        const isPaste = clipboardItems.filter(item => {\n            const types = item.types;\n\n            const hasImage = types.indexOf(\"image/png\") > -1;\n            hasText = hasText || types.indexOf(\"text/plain\") > -1;\n\n            if (hasImage) {\n                item.getType(\"image/png\").then(blob => {\n                    this.editor.appendBlob(blob);\n                });\n                return true;\n            }\n            return false;\n        }).length > 0;\n\n        if (!isPaste && hasText) {\n            const text = await navigator.clipboard.readText();\n\n            this.editor.appendJSXs([{\n                jsx: <div contentEditable=\"true\"></div>,\n                name: \"(Text)\",\n                innerText: text,\n            }]);\n        }\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport styled, { StyledElement } from \"react-css-styled\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport from \"./Viewport/Viewport\";\nimport { getContentElement, prefix, getIds, checkImageLoaded, checkInput, getParnetScenaElement, getScenaAttrs, setMoveMatrix, getOffsetOriginMatrix } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport Memory from \"./utils/Memory\";\nimport MoveableManager from \"./Viewport/MoveableMananger\";\nimport MoveableData from \"./utils/MoveableData\";\nimport KeyManager from \"./KeyManager/KeyManager\";\nimport { ScenaEditorState, SavedScenaData, ScenaJSXElement, ElementInfo, MovedResult, MovedInfo, FrameInfo } from \"./types\";\nimport HistoryManager from \"./utils/HistoryManager\";\nimport Debugger from \"./utils/Debugger\";\nimport { DATA_SCENA_ELEMENT_ID, EDITOR_CSS } from \"./consts\";\nimport ClipboardManager from \"./utils/ClipboardManager\";\nimport { NameType } from \"scenejs\";\nimport { mat4 } from \"gl-matrix\";\nimport { getAccurateAgent } from \"@egjs/agent\";\n\n\nconst EditorElement = styled(\"div\", EDITOR_CSS);\n\nfunction undoCreateElements({ infos, prevSelected }: IObject<any>, editor: Editor) {\n    const res = editor.removeByIds(infos.map((info: ElementInfo) => info.id), true);\n\n    if (prevSelected) {\n        res.then(() => {\n            editor.setSelectedTargets(editor.getViewport().getElements(prevSelected), true);\n        })\n    }\n}\nfunction restoreElements({ infos }: IObject<any>, editor: Editor) {\n    editor.appendJSXs(infos.map((info: ElementInfo) => ({\n        ...info,\n    })), true);\n}\nfunction undoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(prevs), true);\n}\nfunction redoSelectTargets({ prevs, nexts }: IObject<any>, editor: Editor) {\n    editor.setSelectedTargets(editor.viewport.current!.getElements(nexts), true);\n}\nfunction undoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = prev;\n    info.el!.innerText = prev;\n}\nfunction redoChangeText({ prev, next, id }: IObject<any>, editor: Editor) {\n    const info = editor.getViewport().getInfo(id)!;\n    info.innerText = next;\n    info.el!.innerText = next;\n}\nfunction undoMove({ prevInfos }: MovedResult, editor: Editor) {\n    editor.moves(prevInfos, true);\n}\nfunction redoMove({ nextInfos }: MovedResult, editor: Editor) {\n    editor.moves(nextInfos, true);\n}\nexport default class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n    debug?: boolean,\n}, Partial<ScenaEditorState>> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: ScenaEditorState = {\n        selectedTargets: [],\n        horizontalGuides: [],\n        verticalGuides: [],\n        zoom: 1,\n        selectedMenu: \"MoveTool\",\n    };\n    public historyManager = new HistoryManager(this);\n    public console = new Debugger(this.props.debug);\n    public eventBus = new EventBus();\n    public memory = new Memory();\n    public moveableData = new MoveableData(this.memory);\n    public keyManager = new KeyManager(this.console);\n    public clipboardManager = new ClipboardManager(this);\n\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveableManager = React.createRef<MoveableManager>();\n    public viewport = React.createRef<Viewport>();\n    public tabs = React.createRef<Tabs>();\n    public editorElement = React.createRef<StyledElement<HTMLDivElement>>();\n\n    public render() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveableManager,\n            viewport,\n            menu,\n            tabs,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            selectedTargets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = [0, height, height / 2, ...state.horizontalGuides];\n        const verticalSnapGuides = [0, width, width / 2, ...state.verticalGuides];\n        let unit = 50;\n\n        if (zoom < 0.8) {\n            unit = Math.floor(1 / zoom) * 50;\n        }\n        return (\n            <EditorElement className={prefix(\"editor\")} ref={this.editorElement}>\n                <Tabs ref={tabs} editor={this}></Tabs>\n                <Menu ref={menu} editor={this} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    unit={unit}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    useForceWheel={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || moveableManager.current!.getMoveable().isDragging()\n                            || selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        if (moveableManager.current!.getMoveable().isDragging()) {\n                            return;\n                        }\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport}\n                        onBlur={this.onBlur}\n                        style={{\n                            width: `${width}px`,\n                            height: `${height}px`,\n                        }}>\n                        <MoveableManager\n                            ref={moveableManager}\n                            selectedTargets={selectedTargets}\n                            selectedMenu={selectedMenu}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                            editor={this}\n                        ></MoveableManager>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[`.scena-viewport [${DATA_SCENA_ELEMENT_ID}]`]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n                                e.stop();\n                                this.setSelectedTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || state.selectedTargets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setSelectedTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveableManager.current!.getMoveable().dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </EditorElement>\n        );\n    }\n    public async componentDidMount() {\n        const {\n            infiniteViewer,\n            memory,\n            eventBus,\n        } = this;\n        memory.set(\"background-color\", \"#4af\");\n        memory.set(\"color\", \"#333\");\n\n        requestAnimationFrame(() => {\n            this.verticalGuides.current!.resize();\n            this.horizontalGuides.current!.resize();\n            infiniteViewer.current!.scrollCenter();\n        });\n        window.addEventListener(\"resize\", this.onResize);\n        const viewport = this.getViewport();\n\n\n        eventBus.on(\"blur\", () => {\n            this.menu.current!.blur();\n            this.tabs.current!.blur();\n        });\n        eventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setSelectedTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        eventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n\n\n        this.keyManager.keydown([\"left\"], e => {\n            this.move(-10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Left\");\n        this.keyManager.keydown([\"up\"], e => {\n            this.move(0, -10);\n            e.inputEvent.preventDefault();\n        }, \"Move Up\");\n        this.keyManager.keydown([\"right\"], e => {\n            this.move(10, 0);\n            e.inputEvent.preventDefault();\n        }, \"Move Right\");\n        this.keyManager.keydown([\"down\"], e => {\n            this.move(0, 10);\n            e.inputEvent.preventDefault();\n        }, \"Move Down\");\n        this.keyManager.keyup([\"backspace\"], () => {\n            this.removeElements(this.getSelectedTargets());\n        }, \"Delete\");\n\n        const agent = await getAccurateAgent()!;\n        const isMacintosh = agent.os.name === \"mac\" || agent.os.name === \"ios\";\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"x\"], () => { }, \"Cut\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"c\"], () => { }, \"Copy\");\n        // this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"c\"], e => {\n        //     this.clipboardManager.copyImage();\n        //     e.inputEvent.preventDefault();\n        // }, \"Copy to Image\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"v\"], () => { }, \"Paste\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"z\"], () => {\n            this.historyManager.undo();\n        }, \"Undo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"z\"], () => {\n            this.historyManager.redo();\n        }, \"Redo\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"a\"], e => {\n            this.setSelectedTargets(this.getViewportInfos().map(info => info.el!));\n            e.inputEvent.preventDefault();\n        }, \"Select All\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveInside();\n        }, \"Move Inside\");\n        this.keyManager.keydown([isMacintosh ? \"meta\" : \"ctrl\", \"shift\", \"alt\", \"g\"], e => {\n            e.inputEvent.preventDefault();\n            this.moveOutside();\n        }, \"Move Outside\");\n        this.historyManager.registerType(\"createElements\", undoCreateElements, restoreElements);\n        this.historyManager.registerType(\"removeElements\", restoreElements, undoCreateElements);\n        this.historyManager.registerType(\"selectTargets\", undoSelectTargets, redoSelectTargets);\n        this.historyManager.registerType(\"changeText\", undoChangeText, redoChangeText);\n        this.historyManager.registerType(\"move\", undoMove, redoMove);\n    }\n    public componentWillUnmount() {\n        this.eventBus.off();\n        this.memory.clear();\n        this.moveableData.clear();\n        this.keyManager.destroy();\n        this.clipboardManager.destroy();\n        window.removeEventListener(\"resize\", this.onResize);\n    }\n    public promiseState(state: Partial<ScenaEditorState>) {\n        return new Promise(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public getSelectedTargets() {\n        return this.state.selectedTargets;\n    }\n    public setSelectedTargets(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        targets = targets.filter(target => {\n            return targets.every(parnetTarget => {\n                return parnetTarget === target || !parnetTarget.contains(target);\n            });\n        });\n\n        return this.promiseState({\n            selectedTargets: targets,\n        }).then(() => {\n            if (!isRestore) {\n                const prevs = getIds(this.moveableData.getSelectedTargets());\n                const nexts = getIds(targets);\n\n                if (prevs.length !== nexts.length || !prevs.every((prev, i) => nexts[i] === prev)) {\n                    this.historyManager.addAction(\"selectTargets\", { prevs, nexts });\n                }\n            }\n            this.selecto.current!.setSelectedTargets(targets);\n            this.moveableData.setSelectedTargets(targets);\n            this.eventBus.trigger(\"setSelectedTargets\");\n            return targets;\n        });\n    }\n    public appendJSX(info: ElementInfo) {\n        return this.appendJSXs([info]).then(targets => targets[0]);\n    }\n\n    public appendJSXs(jsxs: ElementInfo[], isRestore?: boolean): Promise<Array<HTMLElement | SVGElement>> {\n        const viewport = this.getViewport();\n        const indexesList = viewport.getSortedIndexesList(this.getSelectedTargets());\n        const indexesListLength = indexesList.length;\n        let appendIndex = -1;\n        let scopeId: string = \"\";\n\n        if (!isRestore && indexesListLength) {\n            const indexes = indexesList[indexesListLength - 1];\n\n\n            const info = viewport.getInfoByIndexes(indexes);\n\n            scopeId = info.scopeId!;\n            appendIndex = indexes[indexes.length - 1] + 1;\n        }\n\n        this.console.log(\"append jsxs\", jsxs, appendIndex, scopeId);\n\n        return this.getViewport().appendJSXs(jsxs, appendIndex, scopeId).then(({ added }) => {\n            return this.appendComplete(added, isRestore);\n        });\n    }\n    public appendComplete(infos: ElementInfo[], isRestore?: boolean) {\n        !isRestore && this.historyManager.addAction(\"createElements\", {\n            infos,\n            prevSelected: getIds(this.getSelectedTargets()),\n        });\n        const data = this.moveableData;\n        const container = this.getViewport().viewportRef.current!;\n        const targets = infos.map(function registerFrame(info) {\n            const frame = data.createFrame(info.el!, info.frame);\n\n            if (info.frameOrder) {\n                frame.setOrderObject(info.frameOrder);\n            }\n            data.render(info.el!);\n\n            info.children!.forEach(registerFrame);\n            return info.el!;\n        }).filter(el => el);\n        infos.forEach(info => {\n            if (!info.moveMatrix) {\n                return;\n            }\n            const frame = data.getFrame(info.el!);\n            const nextMatrix = getOffsetOriginMatrix(info.el!, container);\n            mat4.invert(nextMatrix, nextMatrix);\n\n            const moveMatrix = mat4.multiply(mat4.create(), nextMatrix, info.moveMatrix);\n\n            setMoveMatrix(frame, moveMatrix);\n            data.render(info.el!);\n        });\n        return Promise.all(targets.map(target => checkImageLoaded(target))).then(() => {\n            this.setSelectedTargets(targets, true);\n\n            return targets;\n        });\n    }\n    public removeByIds(ids: string[], isRestore?: boolean) {\n        return this.removeElements(this.getViewport().getElements(ids), isRestore);\n    }\n    public getMoveable() {\n        return this.moveableManager.current!.getMoveable();\n    }\n    public removeFrames(targets: Array<HTMLElement | SVGElement>) {\n        const frameMap: IObject<any> = {};\n        const moveableData = this.moveableData;\n        const viewport = this.getViewport();\n\n        targets.forEach(function removeFrame(target) {\n            const info = viewport.getInfoByElement(target)!;\n            const frame = moveableData.getFrame(target);\n            frameMap[info.id!] = {\n                frame: frame.get(),\n                order: frame.getOrderObject(),\n            };\n            moveableData.removeFrame(target);\n\n            info.children!.forEach(childInfo => {\n                removeFrame(childInfo.el!);\n            });\n        });\n\n        return frameMap;\n    }\n    public restoreFrames(infos: MovedInfo[], frameMap: IObject<FrameInfo>) {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n\n        infos.map(({ info }) => info).forEach(function registerFrame(info: ElementInfo) {\n            info.frame = frameMap[info.id!].frame;\n            info.frameOrder = frameMap[info.id!].order;\n            delete frameMap[info.id!];\n\n            info.children!.forEach(registerFrame);\n        });\n\n        for (const id in frameMap) {\n            moveableData.createFrame(viewport.getInfo(id).el!, frameMap[id]);\n        }\n    }\n    public removeElements(targets: Array<HTMLElement | SVGElement>, isRestore?: boolean) {\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n        const indexesList = viewport.getSortedIndexesList(targets);\n        const indexesListLength = indexesList.length;\n        let scopeId = \"\";\n        let selectedInfo: ElementInfo | null = null;\n\n        if (indexesListLength) {\n            const lastInfo = viewport.getInfoByIndexes(indexesList[indexesListLength - 1]);\n            const nextInfo = viewport.getNextInfo(lastInfo.id!);\n\n            scopeId = lastInfo.scopeId!;\n            selectedInfo = nextInfo;\n        }\n        // return;\n        return viewport.removeTargets(targets).then(({ removed }) => {\n            let selectedTarget = selectedInfo || viewport.getLastChildInfo(scopeId)! || viewport.getInfo(scopeId);\n\n            this.setSelectedTargets(selectedTarget && selectedTarget.el ? [selectedTarget.el!] : [], true);\n\n            this.console.log(\"removeTargets\", removed);\n            !isRestore && this.historyManager.addAction(\"removeElements\", {\n                infos: removed.map(function removeTarget(info: ElementInfo): ElementInfo {\n                    return {\n                        ...info,\n                        children: info.children!.map(removeTarget),\n                        frame: frameMap[info.id!] || info.frame,\n                    };\n                }),\n            });\n            return targets;\n        });\n    }\n    public setProperty(scope: string[], value: any, isUpdate?: boolean) {\n        const infos = this.moveableData.setProperty(scope, value);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public setOrders(scope: string[], orders: NameType[], isUpdate?: boolean) {\n        const infos = this.moveableData.setOrders(scope, orders);\n\n        this.historyManager.addAction(\"renders\", { infos });\n\n        if (isUpdate) {\n            this.moveableManager.current!.updateRect();\n        }\n        this.eventBus.requestTrigger(\"render\");\n    }\n    public selectMenu(menu: string) {\n        this.menu.current!.select(menu);\n    }\n    public loadDatas(datas: SavedScenaData[]) {\n        const viewport = this.getViewport();\n        return this.appendJSXs(datas.map(function loadData(data): any {\n            const { componentId, jsxId, children } = data;\n\n            let jsx!: ScenaJSXElement;\n\n            if (jsxId) {\n                jsx = viewport.getJSX(jsxId);\n            }\n            if (!jsx && componentId) {\n                const Component = viewport.getComponent(componentId);\n\n                jsx = <Component />;\n            }\n            if (!jsx) {\n                jsx = React.createElement(data.tagName);\n            }\n            return {\n                ...data,\n                children: children.map(loadData),\n                jsx,\n            };\n        }).filter(info => info) as ElementInfo[]);\n    }\n    public saveTargets(targets: Array<HTMLElement | SVGElement>): SavedScenaData[] {\n        const viewport = this.getViewport();\n        const moveableData = this.moveableData;\n        this.console.log(\"save targets\", targets);\n        return targets.map(target => viewport.getInfoByElement(target)).map(function saveTarget(info): SavedScenaData {\n            const target = info.el!;\n            const isContentEditable = info.attrs!.contenteditable;\n            return {\n                name: info.name,\n                attrs: getScenaAttrs(target),\n                jsxId: info.jsxId || \"\",\n                componentId: info.componentId!,\n                innerHTML: isContentEditable ? \"\" : target.innerHTML,\n                innerText: isContentEditable ? (target as HTMLElement).innerText : \"\",\n                tagName: target.tagName.toLowerCase(),\n                frame: moveableData.getFrame(target).get(),\n                children: info.children!.map(saveTarget),\n            };\n        });\n    }\n    public getViewport() {\n        return this.viewport.current!;\n    }\n    public getViewportInfos() {\n        return this.getViewport().getViewportInfos();\n    }\n    public appendBlob(blob: Blob) {\n        const url = URL.createObjectURL(blob);\n\n        return this.appendJSX({\n            jsx: <img src={url} alt=\"appended blob\" />,\n            name: \"(Image)\",\n        });\n    }\n    public moves(movedInfos: MovedInfo[], isRestore?: boolean) {\n        const frameMap = this.removeFrames(movedInfos.map(({ info }) => info.el!));\n\n        return this.getViewport().moves(movedInfos).then(result => this.moveComplete(result, frameMap, isRestore));\n    }\n\n\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker(this.memory);\n        const scrollTop = -infiniteViewer.getScrollTop() + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n\n        const style = {\n            top: `${top}px`,\n            left: `${left}px`,\n            position: \"absolute\",\n            width: `${width}px`,\n            height: `${height}px`,\n            ...maker.style,\n        } as any;\n        this.appendJSX({\n            jsx: maker.tag,\n            attrs: maker.attrs,\n            name: `(${selectIcon.id})`,\n            frame: style,\n        }).then(selectIcon.makeThen);\n        return true;\n    }\n    private move(deltaX: number, deltaY: number) {\n        this.getMoveable().request(\"draggable\", { deltaX, deltaY }, true);\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        const selection = document.getSelection()!;\n\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        this.eventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n    private onBlur = (e: any) => {\n        const target = e.target as HTMLElement | SVGElement;\n\n        if (!checkInput(target)) {\n            return;\n        }\n        const parentTarget = getParnetScenaElement(target);\n\n        if (!parentTarget) {\n            return;\n        }\n        const info = this.getViewport().getInfoByElement(parentTarget)!;\n\n\n        if (!info.attrs!.contenteditable) {\n            return\n        }\n        const nextText = (parentTarget as HTMLElement).innerText;\n\n        if (info.innerText === nextText) {\n            return;\n        }\n        this.historyManager.addAction(\"changeText\", {\n            id: info.id,\n            prev: info.innerText,\n            next: nextText,\n        });\n        info.innerText = nextText;\n    }\n    private moveInside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n\n        const viewport = this.getViewport();\n        const frameMap = this.removeFrames(targets);\n\n        return viewport.moveInside(targets[0]).then(result => this.moveComplete(result, frameMap));\n    }\n    private moveOutside() {\n        let targets = this.getSelectedTargets();\n\n        const length = targets.length;\n        if (length !== 1) {\n            return;\n        }\n        targets = [targets[0]];\n\n        const frameMap = this.removeFrames(targets);\n        this.getViewport().moveOutside(targets[0]).then(result => this.moveComplete(result, frameMap));\n\n    }\n    private moveComplete(result: MovedResult, frameMap: IObject<any>, isRestore?: boolean) {\n        this.console.log(\"Move\", result);\n\n        const { prevInfos, nextInfos } = result;\n\n        this.restoreFrames(nextInfos, frameMap);\n\n        if (nextInfos.length) {\n            if (!isRestore) {\n                this.historyManager.addAction(\"move\", {\n                    prevInfos,\n                    nextInfos,\n                });\n            }\n            // move complete\n            this.appendComplete(nextInfos.map(({ info, moveMatrix }) => {\n                return {\n                    ...info,\n                    moveMatrix,\n                };\n            }), true);\n        }\n\n        return result;\n    }\n}\n","export const EDITOR_PROPERTIES = [\"memory\", \"eventBus\", \"keyManager\", \"moveableData\", \"moveableManager\", \"historyManager\", \"console\"];\nexport const PREFIX = \"scena-\";\nexport const DATA_SCENA_ELEMENT_ID = \"data-scena-element-id\";\nexport const DATA_SCENA_ELEMENT = \"data-scena-element\";\nexport const TYPE_SCENA_LAYERS = \"application/x-scena-layers\";\nexport const EDITOR_CSS = `\n@import url(\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600&display=swap\");\n\n{\n    position: relative;\n    width: 100%;\n    height: 100%;\n    font-family: sans-serif;\n    --mainColor: #4af;\n    --back1: #1a1a1a;\n    --back2: #2a2a2a;\n    --back3: #333;\n    --back4: #444;\n    --back5: #555;\n    --back6: #666;\n    transform-style: preserve-3d;\n\n    --menu: 45px;\n\n    --tabs: 40px;\n    --tab: 200px;\n}\n\n[class*=\"scena-\"] {\n    font-family: \"Open Sans\", sans-serif;\n}\n\n.scena-viewer {\n    position: absolute !important;\n    left: calc(30px + var(--menu));\n    top: 30px;\n    width: calc(100% - 30px - var(--menu) - var(--tabs));\n    height: calc(100% - 30px);\n}\n\n.scena-viewport-container {\n    position: relative;\n}\n.scena-viewport {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    border: 1px solid #eee;\n    box-sizing: border-box;\n}\n\n.scena-guides {\n    position: absolute !important;\n    top: 0;\n    left: 0;\n    transform: translateZ(1px);\n}\n\n.scena-guides.scena-horizontal {\n    left: calc(var(--menu) + 30px);\n    width: calc(100% - 30px - var(--menu) - var(--tabs));\n    height: 30px !important;\n}\n\n.scena-guides.scena-vertical {\n    top: 30px;\n    left: var(--menu);\n    height: calc(100% - 30px);\n    width: 30px !important;\n}\n\n.scena-reset {\n    position: absolute !important;\n    background: var(--back3);\n    width: 30px;\n    height: 30px;\n    z-index: 1;\n    border-right: 1px solid var(--back4);\n    border-bottom: 1px solid var(--back4);\n    box-sizing: border-box;\n    cursor: pointer;\n    left: var(--menu);\n    top: 0px;\n}\n\n.scena-overlay {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    background: rgba(0, 0, 0, 0.2);\n}\n.moveable-dimension {\n    position: absolute;\n    background: var(--mainColor);\n    border-radius: 2px;\n    padding: 1px 3px;\n    color: white;\n    font-size: 13px;\n    white-space: nowrap;\n    font-weight: bold;\n    transform: translate(-50%);\n    pointer-events: none;\n}\n.scena-frame-tab {\n    overflow: auto;\n    max-height: 300px;\n}\n\n.scena-overlay {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 100;\n    transform-style: preserve-3d;\n    transform: translateZ(15px);\n    background: rgba(0, 0, 0, 0.2);\n}\n\n.scena-popup {\n    position: absolute;\n    max-width: 600px;\n    width: 80%;\n    max-height: 1000px;\n    padding: 30px;\n    height: 80%;\n    overflow: auto;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 14px;\n    background: var(--back3);\n    box-sizing: border-box;\n    color: #fff;\n}\n.scena-popup h2 {\n    padding: 0;\n    margin: 0;\n    padding: 4px;\n}\n.scena-popup .scena-close {\n    position: absolute;\n    top: 30px;\n    right: 30px;\n    width: 40px;\n    height: 40px;\n    cursor: pointer;\n}\n.scena-popup .scena-close:before, .scena-popup .scena-close:after {\n    content: \"\";\n    position: absolute;\n    width: 30px;\n    height: 1px;\n    background: #ddd;\n    top: 50%;\n    left: 50%;\n}\n.scena-popup .scena-close:hover:before, .scena-popup .scena-close:hover:after {\n    height: 2px;\n    background: #fff;\n    border-radius: 1px;\n}\n.scena-popup .scena-close:before {\n    transform: translate(-50%, -50%) rotate(45deg);\n}\n.scena-popup .scena-close:after {\n    transform: translate(-50%, -50%) rotate(-45deg);\n}\n.scena-popup ul {\n    list-style: none;\n    padding: 0;\n}\n.scena-popup li {\n    padding: 4px 10px;\n    border-bottom: 1px solid var(--back2);\n    font-weight: bold;;\n}\n.scena-popup li:hover {\n    background: #fff;\n    color: var(--back2);\n}\n.scena-popup p {\n    position: relative;\n    padding: 2px 0px;\n}\n.scena-popup strong {\n    position: absolute;\n    right: 0;\n    text-transform: uppercase;\n}\n.scena-popup strong span {\n    display: inline-block;\n    padding: 2px 4px;\n    border: 1px solid #fff;\n    vertical-align: top;\n    margin: 0px 5px;\n}\n\n.scena-align {\n    position: relative;\n    width: 25px;\n    height: 25px;\n    /* background: #f55; */\n    display: inline-block;\n    margin-right: 5px;\n}\n.scena-align:hover {\n    cursor: pointer;\n}\n.scena-align:hover * {\n    background: white;\n}\n.scena-align-line,\n.scena-align-element1,\n.scena-align-element2 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    background: var(--back6);\n    transform: translate(-50%, -50%);\n}\n.scena-align-vertical .scena-align-line {\n    width: 1px;\n    height: 18px;\n}\n.scena-align-vertical .scena-align-element1 {\n    width: 10px;\n    height: 5px;\n    margin-top: -3.5px;\n}\n.scena-align-vertical .scena-align-element2 {\n    width: 14px;\n    height: 5px;\n    margin-top: 3.5px;\n}\n.scena-align-vertical.scena-align-start .scena-align-line {\n    margin-left: -7px;\n}\n.scena-align-vertical.scena-align-start .scena-align-element1 {\n    margin-left: -2px;\n}\n\n.scena-align-vertical.scena-align-end .scena-align-line {\n    margin-left: 7px;\n}\n.scena-align-vertical.scena-align-end .scena-align-element1 {\n    margin-left: 2px;\n}\n\n\n\n.scena-align-horizontal .scena-align-line {\n    height: 1px;\n    width: 18px;\n}\n.scena-align-horizontal .scena-align-element1 {\n    height: 10px;\n    width: 5px;\n    margin-left: -3.5px;\n}\n.scena-align-horizontal .scena-align-element2 {\n    height: 14px;\n    width: 5px;\n    margin-left: 3.5px;\n}\n.scena-align-horizontal.scena-align-start .scena-align-line {\n    margin-top: -7px;\n}\n.scena-align-horizontal.scena-align-start .scena-align-element1 {\n    margin-top: -2px;\n}\n\n.scena-align-horizontal.scena-align-end .scena-align-line {\n    margin-top: 7px;\n}\n.scena-align-horizontal.scena-align-end .scena-align-element1 {\n    margin-top: 2px;\n}\n`;\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX, DATA_SCENA_ELEMENT_ID } from \"../consts\";\nimport { EDITOR_PROPERTIES } from \"../consts\";\nimport { ScenaFunctionComponent, ScenaProps, ScenaComponent, ScenaJSXElement, ScenaFunctionJSXElement, ElementInfo } from \"../types\";\nimport { IObject, splitComma, isArray, isFunction, isObject } from \"@daybrush/utils\";\nimport { Frame } from \"scenejs\";\nimport { mat4 } from \"gl-matrix\";\nimport { createMatrix } from \"css-to-mat\";\nimport { getElementInfo } from \"react-moveable\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\") {\n        return el;\n    }\n    return null;\n}\n\nexport function connectEditorProps(component: any) {\n    const prototype = component.prototype;\n    Object.defineProperty(prototype, \"editor\", {\n        get: function () {\n            return this.props.editor;\n        },\n    });\n    EDITOR_PROPERTIES.forEach(name => {\n        Object.defineProperty(prototype, name, {\n            get: function () {\n                return this.props.editor[name];\n            },\n        });\n    })\n};\nexport function between(val: number, min: number, max: number) {\n    return Math.min(Math.max(min, val), max);\n}\n\nexport function getId(el: HTMLElement | SVGElement) {\n    return el.getAttribute(DATA_SCENA_ELEMENT_ID)!;\n}\nexport function getIds(els: Array<HTMLElement | SVGElement>): string[] {\n    return els.map(el => getId(el));\n}\n\nexport function checkInput(target: HTMLElement | SVGElement) {\n    const tagName = target.tagName.toLowerCase();\n\n    return (target as HTMLElement).isContentEditable || tagName === \"input\" || tagName === \"textarea\";\n}\nexport function checkImageLoaded(el: HTMLElement | SVGElement): Promise<any> {\n    if (el.tagName.toLowerCase() !== \"img\") {\n        return Promise.all([].slice.call(el.querySelectorAll(\"img\")).map(el => checkImageLoaded(el)));\n    }\n    return new Promise(resolve => {\n        if ((el as HTMLImageElement).complete) {\n            resolve();\n        } else {\n            el.addEventListener(\"load\", function loaded() {\n                resolve();\n\n                el.removeEventListener(\"load\", loaded);\n            })\n        }\n    });\n}\n\nexport function getParnetScenaElement(el: HTMLElement | SVGElement): HTMLElement | SVGElement | null {\n    if (!el) {\n        return null;\n    }\n    if (el.hasAttribute(DATA_SCENA_ELEMENT_ID)) {\n        return el;\n    }\n    return getParnetScenaElement(el.parentElement as HTMLElement | SVGElement);\n}\n\nexport function makeScenaFunctionComponent<T = IObject<any>>(id: string, component: (props: ScenaProps & T) => React.ReactElement<any, any>): ScenaFunctionComponent<T> {\n    (component as ScenaFunctionComponent<T>).scenaComponentId = id;\n\n    return component as ScenaFunctionComponent<T>;\n}\n\nexport function getScenaAttrs(el: HTMLElement | SVGElement) {\n    const attributes = el.attributes;\n    const length = attributes.length;\n    const attrs: IObject<any> = {};\n\n    for (let i = 0; i < length; ++i) {\n        const { name, value } = attributes[i];\n\n        if (name === DATA_SCENA_ELEMENT_ID || name === \"style\") {\n            continue;\n        }\n        attrs[name] = value;\n    }\n\n    return attrs;\n}\n\nexport function isScenaFunction(value: any): value is ScenaComponent {\n    return isFunction(value) && \"scenaComponentId\" in value;\n}\n\nexport function isScenaElement(value: any): value is ScenaJSXElement {\n    return isObject(value) && !isScenaFunction(value);\n}\nexport function isScenaFunctionElement(value: any): value is ScenaFunctionJSXElement {\n    return isScenaElement(value) && isFunction(value.type);\n}\n\nexport function setMoveMatrix(frame: Frame, moveMatrix: mat4) {\n    const transformOrders = [...(frame.getOrders([\"transform\"]) || [])];\n\n    if (`${transformOrders[0]}`.indexOf(\"matrix3d\") > -1) {\n        const matrix3d = frame.get(\"transform\", transformOrders[0]);\n        const prevMatrix = isArray(matrix3d)\n            ? matrix3d\n            : splitComma(matrix3d).map(v => parseFloat(v));\n\n        frame.set(\"transform\", transformOrders[0], mat4.multiply([] as any, moveMatrix, prevMatrix as any));\n    } else if (frame.has(\"transform\", \"matrix3d\")) {\n        let num = 1;\n        while (frame.has(\"transform\", `matrix3d${++num}`)) { }\n\n        frame.set(\"transform\", `matrix3d${num}`, [...moveMatrix]);\n        frame.setOrders([\"transform\"], [`matrix3d${num}`, ...transformOrders]);\n    } else {\n        frame.set(\"transform\", \"matrix3d\", [...moveMatrix]);\n        frame.setOrders([\"transform\"], [\"matrix3d\", ...transformOrders]);\n    }\n}\n\nexport function getOffsetOriginMatrix(el: HTMLElement | SVGElement, container: HTMLElement) {\n    const stack = getElementInfo(el, container);\n    const origin = stack.targetOrigin;\n    const translation = mat4.fromTranslation(createMatrix() as any, [origin[0], origin[1], origin[2] || 0]);\n\n    return mat4.multiply(createMatrix() as any, stack.offsetMatrix as any, translation);\n}\n\nexport function updateElements(infos: ElementInfo[]) {\n    return infos.map(function registerElement(info) {\n        const id = info.id!;\n\n        const target = document.querySelector<HTMLElement>(`[${DATA_SCENA_ELEMENT_ID}=\"${id}\"]`)!;\n        const attrs = info.attrs || {};\n\n        info.el = target;\n\n        for (const name in attrs) {\n            target.setAttribute(name, attrs[name]);\n        }\n        info.attrs = getScenaAttrs(target);\n        const children = info.children || [];\n\n        if (children.length) {\n            children.forEach(registerElement);\n        } else if (info.attrs!.contenteditable) {\n            if (\"innerText\" in info) {\n                (target as HTMLElement).innerText = info.innerText || \"\";\n            } else {\n                info.innerText = (target as HTMLElement).innerText || \"\";\n            }\n        } else if (!info.componentId) {\n            if (\"innerHTML\" in info) {\n                target.innerHTML = info.innerHTML || \"\";\n            } else {\n                info.innerHTML = target.innerHTML || \"\";\n            }\n        }\n        return { ...info };\n    });\n}\n","import * as React from \"react\";\nimport \"./App.css\";\nimport { ScenaProps } from \"../Editor/types\";\nimport Editor, { makeScenaFunctionComponent } from \"../Editor\";\n\nconst Badge = makeScenaFunctionComponent(\"Badge\", function Badge(props: ScenaProps) {\n    return <p className=\"badges\" data-scena-element-id={props.scenaElementId}>\n        <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n        <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n            <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n        </a>\n        <br />\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n        <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n        <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n    </p>;\n});\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor\n                ref={this.editor}\n                debug={false}\n            />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        // (window as any).a = this;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <Badge />,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"400px\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\" suppressContentEditableWarning={true}>Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n        ], true).then(targets => {\n            this.editor.current!.setSelectedTargets([targets[0]], true);\n        });\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './demo/Scena';\nimport App from './demo/Moveable';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import Editor from \"./Editor\";\n\nexport default Editor;\nexport { makeScenaFunctionComponent } from \"./utils/utils\";\nexport * from \"./types\";\n"],"sourceRoot":""}