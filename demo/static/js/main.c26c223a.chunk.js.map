{"version":3,"sources":["consts.ts","Editor/utils/utils.ts","Editor/utils/EventBus.ts","Editor/KeyManager/KeyManager.ts","Editor/Menu/Icon.tsx","Editor/Menu/MoveToolIcon.tsx","Editor/utils/Memory.ts","Editor/Menu/TextIcon.tsx","Editor/utils/MoveableData.ts","Editor/Menu/OvalIcon.tsx","Editor/Menu/RectIcon.tsx","Editor/Menu/CircleIcon.tsx","Editor/Menu/PolygonIcon.tsx","Editor/Menu/CropIcon.tsx","Editor/Menu/RoundRectIcon.tsx","Editor/Menu/Menu.tsx","Editor/Viewport/Viewport.tsx","Editor/Tabs/Tab.tsx","Editor/Inputs/Input.tsx","Editor/Inputs/TextBox.tsx","Editor/Inputs/NumberBox.tsx","Editor/Inputs/TabInputBox.tsx","Editor/Inputs/Anchor.tsx","Editor/Tabs/TransformTab.tsx","Editor/Tabs/Folder/Folder.tsx","Editor/Inputs/LabelBox.tsx","Editor/Tabs/Folder/File.tsx","Editor/Tabs/FrameTab/Property.tsx","Editor/Tabs/FrameTab/FrameTab.tsx","Editor/Tabs/AlignTab/Align.tsx","Editor/Tabs/AlignTab/AlignTab.tsx","Editor/Tabs/LayerTab/Layer.tsx","Editor/Tabs/LayerTab/LayerTab.tsx","Editor/Inputs/ColorPicker.tsx","Editor/Inputs/ColorBox.tsx","Editor/Tabs/ColorTab/ColorTab.tsx","Editor/Inputs/SelectBox.tsx","Editor/Tabs/FontTab/FontTab.tsx","Editor/Tabs/Tabs.tsx","Editor/Viewport/MoveableMananger.tsx","Editor/Editor.tsx","App.tsx","index.tsx"],"names":["PREFIX","prefix","classNames","prefixNames","getContentElement","el","contentEditable","parentElement","EventBus","eventMap","name","params","this","cancelAnimationFrame","requestAnimationFrame","trigger","Component","check","e","target","inputEvent","tagName","isContentEditable","keydown","keys","callback","KeyController","global","keyup","Icon","subContainer","React","onClick","props","selected","focusSub","onSelect","constructor","id","onSubClick","stopPropagation","blur","current","style","display","className","renderIcon","renderSubContainer","subIcons","renderSubIcons","length","key","ref","IconClass","isSelect","onSubSelect","camelize","on","off","maker","makeThen","MoveToolIcon","viewBox","d","fill","strokeLinejoin","strokeWidth","stroke","transformOrigin","transform","Memory","Map","set","TextIcon","tag","color","get","focus","MoveableData","MoveableHelper","create","createAuto","getTargets","getSelectedFrames","map","getFrame","renderFrames","forEach","render","OvalIcon","cx","cy","rx","ry","RectIcon","CircleIcon","PolygonIcon","CropIcon","frame","cropType","clipPath","splitBracket","renderSubIcon","remove","removeProperty","requestTrigger","forceUpdate","RoundRectIcon","MENUS","Menu","state","select","setState","renderMenus","MenuClass","filter","m","Viewport","ids","infos","children","info","jsx","Math","floor","random","jsxs","jsxInfos","makeId","setInfo","nextInfos","Promise","resolve","targets","i","document","querySelector","createFrame","appendJSXs","then","Tag","appendJSX","elements","find","splice","indexOf","Tab","title","renderTab","moveableManager","getMoveable","Input","input","value","updateValue","setValue","TextBox","inputAttributes","onInput","ev","nativeEvent","isUndefined","data","onChange","onKeyDown","onKeyUp","currentTarget","getKey","keyCode","inputProps","NumberBox","type","min","step","pattern","TabInputBox","label","InputType","v","getValue","HORIZONTAL_DIRECTIONS","VERTICAL_DIRECTIONS","Anchor","origin","indexes","getAttribute","split","parseFloat","max","round","h","j","push","data-anchor-index","TransformTab","xInput","yInput","wInput","hInput","oInput","rInput","onChangeRotate","rotate","request","isInstant","onChangePos","x","y","onChangeOrigin","rect","getRect","ow","offsetWidth","oh","offsetHeight","onChangeSize","width","height","onRender","left","top","rotation","Folder","fold","multiselect","nextSelected","slice","index","shiftKey","onClickFold","scope","fullName","join","isSelected","data-file-key","marginLeft","renderProperties","properties","FileComponent","getId","getName","getChildren","Object","nextScope","isObject","defaultProps","_","LabelBox","File","Property","FrameTab","renderProperty","updateRect","setTargets","Align","direction","TYPES","DIRECTIONS","getDirectionPos","size","start","AlignTab","moveable","moveables","pos","subRect","subPos","delta","translate","t","viewportPos","Layer","LayerTab","renderFile","changeLayers","AnyChromePicker","ChromePicker","ColorPicker","rgb","r","g","b","a","onChangeComplete","ColorBox","colorInput","textInput","onFocus","onBlur","relatedTarget","contains","onDragStart","preventDefault","backgroundColor","renderPicker","onMouseDown","onTouchStart","ColorTab","onChangeBackgroundColor","onChangeTextColor","frames","backgroundColors","colors","SelectBox","options","FONT_FAMILY_PROPS","TEXT_ALIGN_PROPS","FONT_STYLE_PROPS","FONT_WEIGHT_PROPS","TEXT_DECORATION_PROPS","FontTab","changeProperty","onChangeAlign","onChangeFamily","onChangeStyle","onChangeWeight","onChangeDecoration","defaultValues","property","getProperties","family","align","weight","decoration","names","TABS","CurrentTab","Tabs","tabs","onMouseOver","prevSelected","classList","add","onMouseOut","renderTabs","UserTab","data-target-id","MoveableManager","selectedMenu","menu","selecto","verticalGuidelines","horizontalGuidelines","elementGuidelines","isShift","draggable","resizable","throttleResize","clippable","dragArea","checkInput","throttleDragRotate","keepRatio","rotatable","snappable","snapCenter","snapGap","roundable","clipArea","onDrag","onDragGroupStart","onDragGroup","onScaleStart","onScale","onScaleGroupStart","onScaleGroup","onResizeStart","onResize","onResizeGroupStart","onResizeGroup","onRotateStart","onRotate","onRotateGroupStart","onRotateGroup","defaultClipPath","onClip","onDragOriginStart","onDragOrigin","onRound","inputTarget","isDouble","onClickGroup","clickTarget","onRenderGroup","onRenderEnd","onRenderGroupEnd","Editor","horizontalGuides","verticalGuides","zoom","infiniteViewer","viewport","onMenuChange","resize","onWheel","keycon","altKey","deltaY","horizontalSnapGuides","verticalSnapGuides","scrollCenter","snapThreshold","snaps","displayDragPos","dragPosFormat","onChangeGuides","guides","usePinch","pinchThreshold","checkBlur","nodeName","isMoveableElement","some","stop","onDragEnd","isDrag","onAbortPinch","triggerDragStart","onScroll","scroll","scrollLeft","scrollGuides","scrollTop","onPinch","dragContainer","hitRate","selectableTargets","selectByClick","selectFromInside","toggleContinueSelect","scrollOptions","container","getContainer","threshold","throttleTime","getScrollPosition","getScrollLeft","getScrollTop","undefined","contentElement","hasAttribute","isTrusted","scrollBy","onSelectEnd","isDragStart","selectEndMaker","dragStart","promiseState","appendElement","appendElements","nextTargets","removeFrame","removeTargets","setGlobal","window","addEventListener","passive","getInfo","removeElements","clear","destroy","removeEventListener","selectIcon","getSelected","position","activeElement","selection","getSelection","removeAllRanges","App","editor","href","src","alt","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c26c223a.chunk.js","sourcesContent":["export const PREFIX = \"scena-\";\n","import { prefixNames } from \"framework-utils\";\nimport { PREFIX } from \"../../consts\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\nexport function getContentElement(el: HTMLElement): HTMLElement | null {\n    if (el.contentEditable === \"inherit\") {\n        return getContentElement(el.parentElement!);\n    }\n    if (el.contentEditable === \"true\")  {\n        return el;\n    }\n    return null;\n}\n","import Component from \"@egjs/component\";\nimport { IObject } from \"@daybrush/utils\";\n\nclass Bus extends Component {\n    private eventMap: IObject<number> = {};\n    requestTrigger(name: string, params: IObject<any> = {}) {\n        const eventMap = this.eventMap;\n        cancelAnimationFrame(eventMap[name] || 0);\n\n        eventMap[name] = requestAnimationFrame(() => {\n            this.trigger(name, params);\n        });\n    }\n}\nconst EventBus = new Bus();\n\nexport default EventBus;\n","import KeyController from \"keycon\";\n\nfunction check(e: any) {\n    const inputEvent = e.inputEvent;\n    const target = inputEvent.target;\n    const tagName = target.tagName;\n\n    if (\n        target.isContentEditable\n        || tagName === \"INPUT\" || tagName === \"TEXTAREA\"\n    ) {\n        return false;\n    }\n    return true;\n}\nexport function keydown(keys: string[], callback: (e: any) => any) {\n    KeyController.global.keydown(keys, e => {\n        if (!check(e)) {\n            return false;\n        }\n        callback(e);\n    });\n}\nexport function keyup(keys: string[], callback: (e: any) => any) {\n    KeyController.global.keyup(keys, e => {\n        if (!check(e)) {\n            return false;\n        }\n        callback(e);\n    });\n}\n// KeyController.global.\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport { IObject, camelize } from \"@daybrush/utils\";\nimport EventBus from \"../utils/EventBus\";\nimport { keydown } from \"../KeyManager/KeyManager\";\n\n\nexport interface Maker {\n    tag: string,\n    props: IObject<any>,\n    style: IObject<any>,\n}\nexport default abstract class Icon extends React.PureComponent<{\n    selected?: boolean,\n    onSelect?: (id: string) => any;\n}> {\n    public static id: string;\n    public static maker?: () => Maker;\n    public static makeThen: (target: HTMLElement | SVGElement) => any = () => {};\n    public keys: string[] = [];\n    public abstract renderIcon(): any;\n    private subContainer = React.createRef<HTMLDivElement>();\n    public render() {\n        return (\n            <div className={prefix(\"icon\", this.props.selected ? \"selected\" : \"\")}\n                onClick={this.onClick}>\n                {this.renderIcon()}\n                {this.renderSubContainer()}\n            </div>\n        );\n    }\n    public renderSubContainer() {\n        const subIcons = this.renderSubIcons();\n\n        if (!subIcons.length) {\n            return;\n        }\n        return [\n            <div key={\"extends-icon\"} className={prefix(\"extends-icon\")}></div>,\n            this.props.selected && <div key={\"extends-container\"}\n                className={prefix(\"extends-container\")} ref={this.subContainer}\n                onClick={this.onSubClick}\n                >\n                {subIcons}\n            </div>,\n        ];\n    }\n    public renderSubIcons(): any[] {\n        return [];\n    }\n    public renderSubIcon(IconClass: typeof Icon, id: string, isSelect: boolean) {\n        return <div key={id} className={prefix(\"icon\", \"sub-icon\", isSelect ? \"selected\" : \"\")} onClick={() => {\n            this.onSubSelect!(id);\n        }}>\n            <IconClass selected={false} />\n            <div className={prefix(\"sub-icon-label\")}>\n                {camelize(` ${id}`)}\n            </div>\n        </div>;\n    }\n    public onClick = () => {\n        if (this.props.selected) {\n            this.focusSub();\n        }\n        const onSelect = this.props.onSelect;\n\n        if (onSelect) {\n            onSelect((this.constructor as any).id);\n        }\n    }\n    public onSubClick = (e: any) => {\n        e.stopPropagation();\n    }\n    public focusSub() {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        if (subContainer.style.display === \"block\") {\n            subContainer.style.display = \"none\";\n        } else {\n            subContainer.style.display = \"block\";\n        }\n\n    }\n    public blur = () => {\n        const subContainer = this.subContainer.current;\n        if (!subContainer) {\n            return;\n        }\n\n        subContainer.style.display = \"none\";\n    }\n    public onSubSelect(id: string) {}\n    public componentDidMount() {\n        EventBus.on(\"blur\", this.blur);\n\n        const keys = this.keys;\n        if (keys.length) {\n            keydown(keys, () => {\n                this.props.onSelect!((this.constructor as any).id);\n            });\n        }\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"blur\", this.blur);\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class MoveToolIcon extends Icon {\n    public static id = \"MoveTool\";\n    public keys = [\"v\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    d=\"M 21,21 L 35,60 L 40,44 L 54,58 A 3,3 0,0,0, 58,54 L 44,40 L 60,35 L 21,21Z\"\n                    fill=\"#222\" strokeLinejoin=\"round\"\n                    strokeWidth=\"3\" stroke=\"#eee\"\n                    style={{ transformOrigin: \"42px 42px\", transform: \"rotate(10deg)\" }} />\n            </svg>\n        );\n    }\n}\n","const Memory = new Map<any, any>();\n\nMemory.set(\"background-color\", \"#4af\");\nMemory.set(\"color\", \"#333\");\nexport default Memory;\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class TextIcon extends Icon {\n    public static id = \"Text\";\n    public keys = [\"t\"];\n    public static maker = () => ({\n        tag: \"div\",\n        props: {\n            contentEditable: true,\n        },\n        style: {\n            color: Memory.get(\"color\"),\n        },\n    });\n    public static makeThen = (target: HTMLElement | SVGElement) => {\n        target.focus();\n    };\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <g transform=\"matrix(0.987601,0,0,0.987601,-1.97306,0.554734)\">\n                    <path\n                        // tslint:disable-next-line: max-line-length\n                        d=\"M64.286,17.81L20.714,17.81L20.714,29.56L29.214,23L39.262,23L39.262,55.476L27.77,61.262L27.77,62.071L57.23,62.071L57.23,61.262L45.738,55.476L45.738,23L55.786,23L64.286,29.56L64.286,17.81Z\"\n                        style={{ fill: \"white\" }} />\n                </g>\n            </svg>\n        );\n    }\n}\n","import MoveableHelper from \"moveable-helper\";\nimport Memory from \"./Memory\";\nimport { Frame } from \"scenejs\";\n\nconst MoveableData = MoveableHelper.create({\n    createAuto: true,\n});\nexport default MoveableData;\n\nexport function getTargets(): HTMLElement[] {\n    const targets = Memory.get(\"targets\");\n\n    return targets || [];\n}\nexport function getSelectedFrames(): Frame[] {\n\n    return getTargets().map((target: any) => MoveableData.getFrame(target));\n}\n\nexport function renderFrames() {\n    getTargets().forEach((target: any) => {\n        MoveableData.render(target);\n    });\n}\n\nexport function setProperty(names: string[], value: any) {\n    getSelectedFrames().forEach(frame => {\n        frame.set(...names, value);\n    });\n    renderFrames();\n}\n\nexport function getProperties(properties: string[][], defaultValues: any[]) {\n    const frames = getSelectedFrames();\n\n    if (!frames.length) {\n        return properties.map((property, i) => Memory.get(property.join(\"///\")) || defaultValues[i]);\n    }\n\n    return properties.map((property, i) => {\n        const frameValues = frames.map(frame => frame.get(...property));\n\n        return frameValues.filter(color => color)[0] || defaultValues[i];\n    });\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class OvalIcon extends Icon {\n    public static id = \"Oval\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"20\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RectIcon extends Icon {\n    public static id = \"Rect\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M16.5,21.5 h40 a0,0 0 0 1 0,0 v30 a0,0 0 0 1 -0,0 h-40 a0,0 0 0 1 -0,-0 v-30 a0,0 0 0 1 0,-0 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class CircleIcon extends Icon {\n    public static id = \"Circle\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"50%\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <ellipse fill=\"#555\" cx=\"36.5\" cy=\"36.5\" rx=\"15\" ry=\"15\"\n                    strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></ellipse></svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\n\nexport default class PolygonIcon extends Icon {\n    public static id = \"Polygon\";\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M 20,15 L 10,35 L 20,55 L 35,45 L 40, 50 L 55,31 L 41,15 L 30, 25 Z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport { getSelectedFrames, renderFrames, getTargets } from \"../utils/MoveableData\";\nimport Memory from \"../utils/Memory\";\nimport { splitBracket } from \"@daybrush/utils\";\nimport OvalIcon from \"./OvalIcon\";\nimport RectIcon from \"./RectIcon\";\nimport EventBus from \"../utils/EventBus\";\nimport CircleIcon from \"./CircleIcon\";\nimport PolygonIcon from \"./PolygonIcon\";\n\nexport default class CropIcon extends Icon {\n    public static id = \"Crop\";\n    public keys = [\"c\"];\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 80 80\">\n                <path\n                    // tslint:disable-next-line: max-line-length\n                    d=\"M25,10L25,50L65,50   M10,25L50,25L50,65\"\n                    style={{ stroke: \"white\", strokeWidth: 5, fill: \"none\" }} />\n            </svg>\n        );\n    }\n    public renderSubIcons() {\n        const frame = getSelectedFrames()[0];\n        let cropType = Memory.get(\"crop\") || \"inset\";\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                cropType = splitBracket(clipPath).prefix!;\n            }\n        }\n        return [\n            this.renderSubIcon(RectIcon, \"inset\", cropType === \"inset\"),\n            this.renderSubIcon(RectIcon, \"rect\", cropType === \"rect\"),\n            this.renderSubIcon(CircleIcon, \"circle\", cropType === \"circle\"),\n            this.renderSubIcon(OvalIcon, \"ellipse\", cropType === \"ellipse\"),\n            this.renderSubIcon(PolygonIcon, \"polygon\", cropType === \"polygon\"),\n        ];\n    }\n    public onSubSelect(id: string) {\n        const frame = getSelectedFrames()[0];\n\n        if (frame) {\n            const clipPath = frame.get(\"clip-path\") || frame.get(\"clip\");\n\n            if (clipPath) {\n                const cropType = splitBracket(clipPath).prefix!;\n\n                if (id !== cropType) {\n                    frame.remove(\"clip-path\");\n                    frame.remove(\"clip\");\n                    const target = getTargets()[0];\n                    target.style.removeProperty(\"clip\");\n                    target.style.removeProperty(\"clip-path\");\n                    renderFrames();\n                }\n            }\n        }\n        Memory.set(\"crop\", id);\n\n        EventBus.requestTrigger(\"update\");\n\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Icon from \"./Icon\";\nimport Memory from \"../utils/Memory\";\n\nexport default class RoundRectIcon extends Icon {\n    public static id = \"RoundRect\";\n    public static maker = () => ({\n        tag: \"div\",\n        props: {},\n        style: {\n            \"background-color\": Memory.get(\"background-color\"),\n            \"border-radius\": \"10px\",\n        },\n    });\n    public renderIcon() {\n        return (\n            <svg viewBox=\"0 0 73 73\">\n                <path d=\"M26.5,21.5 h20 a10,10 0 0 1 10,10 v10 a10,10 0 0 1 -10,10 h-20 a10,10 0 0 1 -10,-10 v-10 a10,10 0 0 1 10,-10 z\"\n                    fill=\"#555\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#fff\"></path>\n            </svg>\n        );\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveToolIcon from \"./MoveToolIcon\";\nimport \"./Menu.css\";\nimport TextIcon from \"./TextIcon\";\nimport CropIcon from \"./CropIcon\";\nimport RectIcon from \"./RectIcon\";\nimport OvalIcon from \"./OvalIcon\";\nimport RoundRectIcon from \"./RoundRectIcon\";\nimport Icon from \"./Icon\";\n\nconst MENUS: Array<typeof Icon> = [\n    MoveToolIcon,\n    TextIcon,\n    CropIcon,\n    RectIcon,\n    RoundRectIcon,\n    OvalIcon,\n];\nexport default class Menu extends React.PureComponent<{\n    onSelect: (id: string) => any\n}> {\n    public state = {\n        selected: \"MoveTool\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"menu\")}>\n                {this.renderMenus()}\n            </div>\n        );\n    }\n    public renderMenus() {\n        const selected = this.state.selected;\n\n        return MENUS.map(MenuClass => {\n            const id = MenuClass.id;\n            return <MenuClass key={id} selected={selected === id} onSelect={this.select} />;\n        });\n    }\n    public select = (id: string) => {\n        this.setState({\n            selected: id,\n        });\n        this.props.onSelect(id);\n    }\n    public getSelected(): typeof Icon | undefined {\n        const selected = this.state.selected;\n        return MENUS.filter(m => m.id === selected)[0];\n    }\n}\n","import * as React from \"react\";\nimport { IObject, find } from \"@daybrush/utils\";\nimport MoveableData from \"../utils/MoveableData\";\nimport EventBus from \"../utils/EventBus\";\nimport Memory from \"../utils/Memory\";\nimport { prefix } from \"../utils/utils\";\n\nexport interface ElementInfo {\n    jsx: any;\n    el: HTMLElement | null;\n    id: string;\n    name: string;\n}\nexport default class Viewport extends React.PureComponent<{\n    style: IObject<any>,\n}> {\n    public state: {\n        ids: IObject<ElementInfo | null>;\n        infos: ElementInfo[],\n    } = {\n            ids: {},\n            infos: [],\n        };\n    public render() {\n        const style = this.props.style;\n        return <div className={prefix(\"viewport\")} style={style}>\n            {this.props.children}\n            {this.state.infos.map(info => info.jsx)}\n        </div>;\n    }\n    public makeId() {\n        const ids = this.state.ids;\n\n        while (true) {\n            const id = `scena${Math.floor(Math.random() * 100000000)}`;\n\n            if (ids[id]) {\n                continue;\n            }\n            return id;\n        }\n    }\n    public setInfo(id: string, info: ElementInfo) {\n        const ids = this.state.ids;\n\n        ids[id] = info;\n    }\n    public getInfo(id: string) {\n        return this.state.ids[id];\n    }\n    public appendJSXs(jsxs: Array<{ jsx: any, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        const infos = this.state.infos;\n        const jsxInfos = jsxs.map(({ jsx, name }) => {\n            const id = this.makeId();\n            const info: ElementInfo = {\n                jsx: React.cloneElement(jsx, {\n                    \"data-moveable\": true,\n                    \"data-moveable-id\": id,\n                    \"key\": id,\n                }),\n                el: null,\n                id,\n                name,\n            };\n            this.setInfo(id, info);\n\n            return info;\n        });\n        const nextInfos = [...infos, ...jsxInfos];\n\n\n        return new Promise(resolve => {\n            this.setState({\n                infos: nextInfos,\n            }, () => {\n\n                const targets = jsxInfos.map((info, i) => {\n                    const id = info.id;\n                    const frame = jsxs[i].frame || {};\n\n                    const target = document.querySelector<HTMLElement>(`[data-moveable-id=\"${id}\"]`)!;\n                    MoveableData.createFrame(target, frame);\n                    MoveableData.render(target);\n                    info.el = target;\n\n                    return target;\n                });\n                Memory.set(\"viewportInfos\", nextInfos);\n                EventBus.requestTrigger(\"changeLayers\", {\n                    infos: nextInfos,\n                });\n                resolve(targets);\n            });\n        });\n    }\n    public appendJSX(jsx: any, name: string, frame: IObject<any> = {}): Promise<HTMLElement | SVGElement> {\n        return this.appendJSXs([{\n            jsx,\n            name,\n            frame,\n        }]).then(targets => targets[0]);\n    }\n    public appendElement(Tag: any, props: IObject<any>, name: string, frame: IObject<any> = {}): Promise<HTMLElement | SVGElement> {\n        return this.appendJSX(<Tag {...props}></Tag>, name, frame);\n    }\n    public appendElements(elements: Array<{ tag: any, props: IObject<any>, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.appendJSXs(elements.map(({ props, name, frame, tag: Tag }) => ({\n            jsx: <Tag {...props}></Tag>,\n            name,\n            frame,\n        })));\n    }\n    public removeTargets(targets: Array<HTMLElement | SVGElement>) {\n        const { ids, infos } = this.state;\n\n        targets.forEach(target => {\n            const info = find(infos, ({ el }) => el === target);\n\n            if (!info) {\n                return;\n            }\n\n            delete ids[info.id];\n            infos.splice(infos.indexOf(info), 1);\n        });\n\n        this.setState({\n            ids: { ...ids },\n            infos: [...infos],\n        }, () => {\n            Memory.set(\"viewportInfos\", infos);\n            EventBus.requestTrigger(\"changeLayers\", {\n                infos,\n            });\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport MoveableManager from \"../Viewport/MoveableMananger\";\n\nexport default abstract class Tab extends React.PureComponent<{\n    moveableManager: React.RefObject<MoveableManager>,\n}> {\n    public static id: string;\n    public abstract title: string;\n    public abstract renderTab(): any;\n    public render() {\n        return (\n            <div className={prefix(\"tab\")}>\n                <h2>{this.title}</h2>\n                {this.renderTab()}\n            </div>\n        );\n    }\n    public getMoveable() {\n        return this.props.moveableManager.current!.getMoveable();\n    }\n}\n","import { IObject } from \"@daybrush/utils\";\nimport * as React from \"react\";\nimport \"./Input.css\";\n\nexport default class Input<T = {}, U = {}, I extends HTMLElement = HTMLElement> extends React.PureComponent<{\n    value?: any;\n    updateValue?: boolean;\n    inputProps?: IObject<any>,\n    onChange: (v: any) => any,\n} & T, U> {\n    public input = React.createRef<I>();\n    public getValue(): any {\n        return;\n    }\n    public setValue(value: any) {\n    }\n    public componentDidMount() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n    public componentDidUpdate() {\n        const props = this.props;\n\n        props.updateValue && this.setValue(props.value);\n    }\n}\n","import * as React from \"react\";\nimport { getKey } from \"keycon\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class TextBox extends Input<{}, {}, HTMLInputElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        return (\n            <input ref={this.input as any}\n                className={prefix(\"input\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}\n                onKeyDown={this.onKeyDown}\n                onKeyUp={this.onKeyUp} />\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n\n    protected onKeyDown = (e: any) => {\n        e.stopPropagation();\n    }\n    protected onKeyUp = (e: any) => {\n        const target = e.currentTarget as HTMLInputElement;\n\n        e.stopPropagation();\n        if (getKey(e.keyCode) === \"enter\") {\n            this.props.onChange(target.value);\n        }\n    }\n}\n","import TextBox from \"./TextBox\";\n\nexport default class NumberBox extends TextBox {\n    protected inputAttributes = {\n        type: \"number\",\n        min: 0,\n        step: 0.1,\n        pattern: \"[0-9.]*\",\n    };\n}\n","import * as React from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport Input from \"./Input\";\nimport { prefix } from \"../utils/utils\";\nimport \"./TabInputBox.css\";\n\nexport default class TabInputBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\" | \"twothird\",\n    onChange: (v: any) => any,\n    input: typeof Input,\n    label?: string,\n    props?: IObject<any>,\n    inputProps?: IObject<any>,\n    value?: any;\n    updateValue?: boolean;\n}> {\n    public input = React.createRef<Input>();\n    public render() {\n        const {\n            label,\n            type,\n            props = {},\n            inputProps = {},\n            input: InputType,\n            onChange,\n            value,\n            updateValue,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            {label && <h3>{label}</h3>}\n            <InputType ref={this.input} onChange={onChange}\n                {...props}\n                inputProps={inputProps} value={value} updateValue={updateValue}></InputType>\n        </div>;\n    }\n    public setValue(v: any) {\n        this.input.current!.setValue(v);\n    }\n    public getValue() {\n        return this.input.current!.getValue();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Anchor.css\";\n\n\nconst HORIZONTAL_DIRECTIONS = [\"w\", \"\", \"e\"];\nconst VERTICAL_DIRECTIONS = [\"n\", \"\", \"s\"];\nexport default class Anchor extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        origin: [50, 50],\n    }\n    public render() {\n        const origin = this.state.origin.map(v => Math.min(100, Math.max(0, Math.round(v / 50) * 50)));\n        return (\n            <div className={prefix(\"anchor-input\")}>\n                <div className={prefix(\"anchor-input-background\")} onClick={this.onClick}>\n                    {VERTICAL_DIRECTIONS.map((v, i) => {\n                        return HORIZONTAL_DIRECTIONS.map((h, j) => {\n                            const classNames: string[] = [];\n                            if (v) {\n                                classNames.push(`anchor-${v}`);\n                            }\n                            if (h) {\n                                classNames.push(`anchor-${h}`);\n                            }\n                            if (origin[0] === j * 50 && origin[1] === i * 50) {\n                                classNames.push(`anchor-selected`);\n                            }\n                            return <div key={`dir${h}-${v}`}\n                                className={prefix(\"anchor-control\", ...classNames)} data-anchor-index={`${j},${i}`}></div>;\n                        })\n                    })}\n                </div>\n            </div>\n        );\n    }\n    public onClick = (e: any) => {\n        const target = e.target as HTMLElement;\n        const indexes = target.getAttribute(\"data-anchor-index\");\n\n        if (!indexes) {\n            return;\n        }\n        const origin = indexes.split(\",\").map(v => parseFloat(v) * 50);\n        this.props.onChange(origin);\n    }\n    public setValue(v: string) {\n        this.setState({\n            origin: v,\n        });\n    }\n    public getValue() {\n        return this.state.origin;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"./Tab\";\nimport { prefix } from \"../utils/utils\";\nimport EventBus from \"../utils/EventBus\";\nimport NumberBox from \"../Inputs/NumberBox\";\nimport TabInputBox from \"../Inputs/TabInputBox\";\nimport Anchor from \"../Inputs/Anchor\";\n\nconst inputProps = {\n    step: 1,\n};\n\nexport default class TransformTab extends Tab {\n    public static id = \"Transform\";\n    public title = \"Transform\";\n    public xInput = React.createRef<TabInputBox>();\n    public yInput = React.createRef<TabInputBox>();\n    public wInput = React.createRef<TabInputBox>();\n    public hInput = React.createRef<TabInputBox>();\n    public oInput = React.createRef<TabInputBox>();\n    public rInput = React.createRef<TabInputBox>();\n    public renderTab() {\n\n        return <div className={prefix(\"transform-tab\")}>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.oInput}\n                    type={\"half\"} label=\"Anchor\" input={Anchor} onChange={this.onChangeOrigin} />\n                <TabInputBox ref={this.rInput}\n                    type={\"half\"} label=\"Rotation\" input={NumberBox} onChange={this.onChangeRotate} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.xInput} type={\"half\"} label=\"X\" input={NumberBox} onChange={this.onChangePos} />\n                <TabInputBox ref={this.yInput} type={\"half\"} label=\"Y\" input={NumberBox} onChange={this.onChangePos} />\n            </div>\n            <div className={prefix(\"tab-line\")}>\n                <TabInputBox ref={this.wInput} type={\"half\"}\n                    label=\"W\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n                <TabInputBox ref={this.hInput} type={\"half\"}\n                    label=\"H\" input={NumberBox} inputProps={inputProps} onChange={this.onChangeSize} />\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"renderGroup\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.onRender as any);\n\n        this.onRender();\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"renderGroup\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.onRender as any);\n    }\n    public onChangeRotate = (v: any) => {\n        const rotate = parseFloat(v);\n        this.getMoveable().request(\"rotatable\", { rotate, isInstant: true });\n    }\n    public onChangePos = () => {\n        const x = parseFloat(this.xInput.current!.getValue());\n        const y = parseFloat(this.yInput.current!.getValue());\n\n        this.getMoveable().request(\"draggable\", { x, y, isInstant: true });\n    }\n    public onChangeOrigin = (origin: number[]) => {\n        const moveable = this.getMoveable();\n        const rect = moveable.getRect();\n\n        const ow = rect.offsetWidth * origin[0] / 100;\n        const oh = rect.offsetHeight * origin[1] / 100;\n        this.getMoveable().request(\"originDraggable\", { origin: [ow, oh] }, true);\n    }\n    public onChangeSize = () => {\n        const width = parseFloat(this.wInput.current!.getValue());\n        const height = parseFloat(this.hInput.current!.getValue());\n\n        this.getMoveable().request(\"resizable\", { offsetWidth: width, offsetHeight: height, isInstant: true });\n    }\n    public onRender = () => {\n        const moveable = this.getMoveable();\n\n        const rect = moveable.getRect();\n\n        this.xInput.current!.setValue(rect.left);\n        this.yInput.current!.setValue(rect.top);\n        this.wInput.current!.setValue(rect.offsetWidth);\n        this.hInput.current!.setValue(rect.offsetHeight);\n        this.rInput.current!.setValue(Math.round(rect.rotation));\n\n        const origin = rect.transformOrigin;\n\n        this.oInput.current!.setValue([\n            origin[0] / rect.offsetWidth * 100,\n            origin[1] / rect.offsetHeight * 100,\n        ]);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\nimport { IObject, isObject } from \"@daybrush/utils\";\nimport \"./Folder.css\";\nimport File from \"./File\";\nimport KeyController from \"keycon\";\n\nexport default class Folder extends React.PureComponent<{\n    scope: string[],\n    name: string,\n    properties: IObject<any>,\n    selected: string[] | null,\n    multiselect?: boolean,\n    onSelect: (e: string[]) => any,\n    FileComponent: ((props: File[\"props\"]) => any) | typeof File,\n    getId?: (value: any, id: any) => any,\n    getName?: (value: any, id: any) => any,\n    getChildren?: (value: any, id: any) => any,\n}> {\n    public static defaultProps = {\n        getId: (_: any, id: any) => id,\n        getName: (_: any, id: any) => id,\n        getChildren: (value: any) => value,\n    }\n    public state = {\n        fold: false,\n    };\n    isSelected(key: string) {\n        const selected = this.props.selected;\n\n        return selected && selected.indexOf(key) > -1;\n    }\n    render() {\n        const {\n            scope,\n            name,\n        } = this.props;\n\n        const fullName = scope.join(\"///\");\n        return <div className={prefix(\"folder\")}>\n            {name && <div className={prefix(\"tab-input\", \"full\", \"file\",  this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <div className={prefix(\"fold-icon\", this.state.fold ? \"fold\" : \"\")} onClick={this.onClickFold}></div>\n                <h3 >{name}</h3>\n            </div>}\n            <div className={prefix(\"properties\")} style={{\n                marginLeft: scope.length ? \"10px\" : \"\",\n            }}>\n                {this.renderProperties()}\n            </div>\n        </div>\n    }\n    public onClick = ({ currentTarget }: any) => {\n        const key = currentTarget.getAttribute(\"data-file-key\")!;\n        const {\n            multiselect,\n            onSelect,\n            selected,\n        } = this.props;\n        if (multiselect) {\n            let nextSelected = (selected || []).slice();\n            const index = nextSelected.indexOf(key);\n\n            if (KeyController.global.shiftKey) {\n                if (index > -1) {\n                    nextSelected.splice(index, 1);\n                } else {\n                    nextSelected.push(key);\n                }\n            } else {\n                nextSelected = [key];\n            }\n            onSelect(nextSelected);\n        } else {\n            onSelect([key]);\n        }\n    }\n    public renderProperties() {\n        const {\n            scope,\n            properties,\n            selected,\n            multiselect,\n            onSelect,\n            FileComponent,\n            getId,\n            getName,\n            getChildren,\n        } = this.props;\n\n        if (this.state.fold) {\n            return;\n        }\n        const keys = Object.keys(properties);\n\n        return keys.map(key => {\n            const value = properties[key];\n            const name = getName!(value, key);\n            const nextScope = scope.slice();\n\n            nextScope.push(getId!(value, key));\n            const fullName = nextScope.join(\"///\");\n            const children = getChildren!(value, key);\n\n            if (children && isObject(children)) {\n                return <Folder key={fullName}\n                    name={name} scope={nextScope} properties={value}\n                    multiselect={multiselect}\n                    getId={getId} getName={getName}\n                    selected={selected} onSelect={onSelect} FileComponent={FileComponent} />;\n            }\n            return <div key={fullName} className={prefix(\"file\", this.isSelected(fullName) ? \"selected\" : \"\")}\n                data-file-key={fullName} onClick={this.onClick}>\n                <FileComponent scope={nextScope} name={name} value={value} fullName={fullName} />\n            </div>;\n        });\n    }\n    private onClickFold = (e: any) => {\n        e.stopPropagation();\n        this.setState({\n            fold: !this.state.fold,\n        })\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class LabelBox extends React.PureComponent<{\n    type: \"half\" | \"full\" | \"third\",\n    label: string,\n}> {\n    public render() {\n        const {\n            label,\n            type,\n        } = this.props;\n\n        return <div className={prefix(\"tab-input\", type)}>\n            <h3>{label}</h3>\n        </div>;\n    }\n}\n","import * as React from \"react\";\nimport \"./Folder.css\";\n\nexport default class File<T = {}> extends React.PureComponent<{\n    name: string,\n    scope: string[],\n    fullName: string,\n    value: any,\n} & T> {\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport \"../Folder/Folder.css\";\nimport File from \"../Folder/File\";\n\nexport default class Property extends File<{\n    onChange: (scope: string[], value: any) => any\n}> {\n    public render() {\n        const {\n            name,\n            value,\n        } = this.props;\n        return <><LabelBox type={\"third\"} label={name}></LabelBox>\n            <TabInputBox type={\"twothird\"} input={TextBox} value={value}\n                updateValue={true}\n                onChange={this.onChange}\n            ></TabInputBox></>;\n    }\n    public onChange = (v: any) => {\n        const {\n            onChange,\n            scope,\n        } = this.props;\n\n        onChange(scope, v);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport EventBus from \"../../utils/EventBus\";\nimport { getSelectedFrames, renderFrames } from \"../../utils/MoveableData\";\n\nimport Folder from \"../Folder/Folder\";\nimport Property from \"./Property\";\nimport File from \"../Folder/File\";\nimport \"./FrameTab.css\";\n\nexport default class FrameTab extends Tab {\n    public static id = \"Frame\";\n    public title = \"Frame\";\n    public state: {\n        selected: string[] | null,\n    } = {\n        selected: null,\n    };\n    public renderTab() {\n        const {\n            selected,\n        } = this.state;\n\n        const frame = getSelectedFrames()[0];\n\n        if (!frame) {\n            return;\n        }\n        return <div className={prefix(\"frame-tab\")}>\n            <Folder name=\"\" properties={frame.get()} scope={[]} selected={selected}\n                onSelect={this.onSelect} FileComponent={this.renderProperty} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.setTargets as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.setTargets as any);\n    }\n    private renderProperty = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Property name={name} fullName={fullName} scope={scope} value={value} onChange={this.onChange}></Property>;\n    }\n    private onSelect = (selected: string[]) => {\n        this.setState({\n            selected,\n        })\n    }\n    private onChange = (scope: string[], value: any) => {\n        const frames = getSelectedFrames();\n\n        if (!frames.length) {\n            return;\n        }\n        getSelectedFrames().forEach(frame => {\n            frame.set(...scope, value);\n        });\n        renderFrames();\n        this.getMoveable().updateRect();\n        EventBus.requestTrigger(\"render\");\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        const state = this.state;\n\n        state.selected = null;\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../../utils/utils\";\n\nexport default class Align extends React.PureComponent<{\n    type: \"horizontal\" | \"vertical\",\n    direction: \"start\" | \"center\" | \"end\",\n    onClick: (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => any,\n}> {\n    public render() {\n        const {\n            type,\n            direction,\n        } = this.props;\n        return <div className={prefix(\"align\", `align-${type}`, `align-${direction}`)}\n            onClick={this.onClick}>\n            <div className={prefix(\"align-line\")}></div>\n            <div className={prefix(\"align-element1\")}></div>\n            <div className={prefix(\"align-element2\")}></div>\n        </div>;\n    }\n    public onClick = () => {\n        const {\n            type,\n            direction,\n            onClick,\n        } = this.props;\n        onClick(type, direction);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport \"./AlignTab.css\";\nimport Align from \"./Align\";\nimport MoveableGroup from \"react-moveable/declaration/MoveableGroup\";\nimport MoveableData from \"../../utils/MoveableData\";\n\nconst TYPES = [\"vertical\", \"horizontal\"] as const;\nconst DIRECTIONS = [\"start\", \"center\", \"end\"] as const;\n\n\nfunction getDirectionPos(\n    type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\", rect: { left: number, top: number, width: number, height: number }): number {\n    let size: number;\n    let start: number;\n    if (type === \"horizontal\") {\n        size = rect.height;\n        start = rect.top;\n    } else {\n        size = rect.width;\n        start = rect.left;\n    }\n    if (direction === \"start\") {\n        return start;\n    }\n    if (direction === \"center\") {\n        return start + size / 2;\n    }\n    return start + size;\n}\nexport default class AlignTab extends Tab {\n    public static id = \"Align\";\n    public title = \"Align\";\n    public renderTab() {\n        return <div className={prefix(\"align-tab\")}>\n            {TYPES.map(type => {\n                return DIRECTIONS.map(direction => {\n                    return <Align key={`${type}-${direction}`}\n                        type={type} direction={direction} onClick={this.onClick}></Align>\n                });\n            })}\n        </div>;\n    }\n    public onClick = (type: \"horizontal\" | \"vertical\", direction: \"start\" | \"center\" | \"end\") => {\n        const moveable = this.getMoveable();\n\n        if (!moveable.moveable) {\n            return;\n        }\n        const moveables = (moveable.moveable as MoveableGroup).moveables;\n        const rect = moveable.getRect();\n        const pos = getDirectionPos(type, direction, rect);\n\n        if (moveables) {\n            // Group\n\n            const targets = moveables.map(m => {\n                const target = m.state.target!;\n                const frame = MoveableData.getFrame(target);\n\n                if (frame) {\n                    const subRect = m.getRect();\n                    const subPos = getDirectionPos(type, direction, subRect);\n                    const delta = pos - subPos;\n\n                    const translate = frame.get(\"transform\", \"translate\").split(\",\").map((v: string) => parseFloat(v));\n\n\n                    translate[type === \"horizontal\" ? 1 : 0] += delta;\n\n                    frame.set(\"transform\", \"translate\", translate.map((t: number) => `${t}px`).join(\", \"));\n                }\n                return target;\n            });\n\n            targets.forEach(target => {\n                if (!target) {\n                    return;\n                }\n                MoveableData.render(target);\n            });\n            moveable.updateRect();\n        } else {\n            const viewportRect = {\n                width: 400,\n                height: 600,\n                left: 0,\n                top: 0,\n            }\n            const viewportPos = getDirectionPos(type, direction, viewportRect);\n            const delta = pos - viewportPos;\n\n            moveable.request(\"draggable\", { [type === \"horizontal\" ? \"deltaY\" : \"deltaX\"]: -delta }, true);\n        }\n\n    }\n}\n","import * as React from \"react\";\nimport LabelBox from \"../../Inputs/LabelBox\";\nimport File from \"../Folder/File\";\n\nexport default class Layer extends File {\n    public render() {\n        const {\n            name,\n        } = this.props;\n        return <><LabelBox type={\"full\"} label={name}></LabelBox></>;\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport EventBus from \"../../utils/EventBus\";\n\nimport Folder from \"../Folder/Folder\";\nimport File from \"../Folder/File\";\nimport { ElementInfo } from \"../../Viewport/Viewport\";\nimport Layer from \"./Layer\";\nimport Memory from \"../../utils/Memory\";\nimport { getTargets } from \"../../utils/MoveableData\";\n\nexport default class LayerTab extends Tab {\n    public static id = \"Layers\";\n    public title = \"Layers\";\n\n    public renderTab() {\n        const infos = Memory.get(\"viewportInfos\") || [];\n        const selected = getTargets().map(target => target.getAttribute(\"data-moveable-id\")!)\n\n        return <Folder\n            scope={[]}\n            name=\"\" properties={infos}\n            multiselect={true}\n            getId={(v: ElementInfo) => v.id}\n            getName={(v: ElementInfo) => v.name}\n            getChildren={() => false}\n            selected={selected}\n            onSelect={this.onSelect}\n            FileComponent={this.renderFile} />;\n    }\n    public renderFile = ({ name, fullName, scope, value }: File[\"props\"]) => {\n        return <Layer name={name} fullName={fullName} scope={scope} value={value}></Layer>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"setTargets\", this.setTargets as any);\n        EventBus.on(\"changeLayers\", this.changeLayers as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"setTargets\", this.setTargets as any);\n        EventBus.off(\"changeLayers\", this.changeLayers as any);\n    }\n\n    private onSelect = (selected: string[]) => {\n        EventBus.requestTrigger(\"selectLayers\", {\n            selected,\n        })\n    }\n    private changeLayers = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject } from \"@daybrush/utils\";\nimport { ChromePicker, ColorResult } from \"react-color\";\n\nconst AnyChromePicker = ChromePicker as any;\n\nexport default class ColorPicker extends Input {\n    protected inputAttributes: IObject<any> = {};\n    public state = {\n        color: \"rgba(255, 255, 255, 255)\",\n    }\n    public render() {\n        const color = this.state.color;\n\n        return (\n            <AnyChromePicker\n                width={\"180px\"}\n                color={color}\n                onChange={this.onChange}\n                onChangeComplete={this.onChangeComplete}\n            />\n        );\n    }\n    public componentDidUpdate() { }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        });\n    }\n    public getValue() {\n        return this.state.color;\n    }\n    private onChange = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.setState({\n            color: `rgba(${r}, ${g}, ${b}, ${a})`,\n        });\n    }\n    private onChangeComplete = (e: ColorResult) => {\n        const { r, g, b, a } = e.rgb;\n\n        this.props.onChange(`rgba(${r}, ${g}, ${b}, ${a})`);\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { IObject, } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\nimport ColorPicker from \"./ColorPicker\";\nimport TextBox from \"./TextBox\";\nimport \"./ColorBox.css\";\n\nexport default class ColorBox extends Input<{}, {}, HTMLDivElement> {\n    protected inputAttributes: IObject<any> = {};\n    protected colorInput = React.createRef<ColorPicker>();\n    protected textInput = React.createRef<TextBox>();\n    public state = {\n        display: \"none\",\n        color: \"#fff\",\n    };\n    public render() {\n        return (\n            <div className={prefix(\"color-input\")} ref={this.input} onBlur={this.onBlur}>\n                <div className={prefix(\"color-background\")} style={{\n                    backgroundColor: this.state.color,\n                }} onClick={this.onClick}></div>\n                <TextBox\n                    ref={this.textInput}\n                    onChange={this.onChange}\n                    inputProps={{\n                        onFocus: this.onFocus,\n                    }}\n                ></TextBox>\n                {this.renderPicker()}\n            </div>\n        );\n    }\n    public renderPicker() {\n        const {\n            display,\n        } = this.state;\n\n        if (display === \"none\") {\n            return;\n        }\n        return <div className={prefix(\"color-picker\")}\n            onMouseDown={this.onDragStart} onTouchStart={this.onDragStart}\n            style={{\n                display,\n            }}>\n            <ColorPicker\n                ref={this.colorInput}\n                onChange={this.onChange} />\n        </div>;\n    }\n    public setValue(v: string) {\n        this.setState({\n            color: v,\n        })\n        this.textInput.current!.setValue(v);\n        if (this.colorInput.current!) {\n            this.colorInput.current!.setValue(v);\n        }\n    }\n    public getValue() {\n        return this.textInput.current!.getValue();\n    }\n    public onFocus = () => {\n        this.setState({\n            display: \"block\",\n        });\n    }\n    public onBlur = (e: any) => {\n        const relatedTarget = e.nativeEvent.relatedTarget;\n\n        if (this.input.current!.contains(relatedTarget)) {\n            return;\n        }\n        this.setState({\n            display: \"none\",\n        });\n    }\n    private onChange = (v: string) => {\n        this.props.onChange(v);\n    }\n    private onDragStart = (e: any) => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        e.preventDefault();\n    }\n    private onClick = (e: any) => {\n        this.textInput.current!.input.current!.focus();\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport { prefix } from \"../../utils/utils\";\nimport ColorBox from \"../../Inputs/ColorBox\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport EventBus from \"../../utils/EventBus\";\nimport Memory from \"../../utils/Memory\";\nimport { getSelectedFrames, renderFrames } from \"../../utils/MoveableData\";\n\nexport default class ColorTab extends Tab {\n    public static id = \"Colors\";\n    public title = \"Colors\";\n\n    public renderTab() {\n        const frames = getSelectedFrames();\n        let backgroundColor = Memory.get(\"background-color\");\n        let color = Memory.get(\"color\");\n\n        if (frames.length) {\n            const backgroundColors = frames.map(frame => frame.get(\"background-color\"));\n            const colors = frames.map(frame => frame.get(\"color\"));\n\n            backgroundColor = backgroundColors.filter(color => color)[0] || \"transparent\";\n            color = colors.filter(color => color)[0] || \"#333\";\n        }\n\n        return <div className={prefix(\"current-tab\")}>\n            <TabInputBox type={\"full\"}\n                label=\"Background Color\"\n                input={ColorBox}\n                value={backgroundColor}\n                updateValue={true}\n                onChange={this.onChangeBackgroundColor} />\n            <TabInputBox type={\"full\"}\n                label=\"Text Color\"\n                input={ColorBox}\n                value={color}\n                updateValue={true}\n                onChange={this.onChangeTextColor} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.onRender as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.onRender as any);\n    }\n    public onChangeBackgroundColor = (v: string) => {\n        Memory.set(\"background-color\", v);\n        getSelectedFrames().forEach(frame => {\n            frame.set(\"background-color\", v);\n        });\n        renderFrames();\n        this.forceUpdate();\n    }\n    public onChangeTextColor = (v: string) => {\n        Memory.set(\"color\", v);\n        getSelectedFrames().forEach(frame => {\n            frame.set(\"color\", v);\n        });\n        renderFrames();\n        this.forceUpdate();\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n}\n","import * as React from \"react\";\nimport Input from \"./Input\";\nimport { isUndefined, IObject } from \"@daybrush/utils\";\nimport { prefix } from \"../utils/utils\";\n\nexport default class SelectBox extends Input<{\n    options: string[]\n}, {}, HTMLSelectElement> {\n    protected inputAttributes: IObject<any> = {};\n    public render() {\n        const options = this.props.options || [];\n        return (\n            <select ref={this.input as any}\n                className={prefix(\"select\")}\n                {...this.inputAttributes}\n                {...this.props.inputProps}\n                onInput={this.onInput}>\n                {options.map(value => (<option key={value} value={value}>{value}</option>))}\n            </select>\n        );\n    }\n    public getValue(): any {\n        return this.input.current!.value;\n    }\n    public setValue(value: any) {\n        this.input.current!.value = `${isUndefined(value) ? \"\" : value}`;\n    }\n    protected onInput = (e: any) => {\n        const ev = e.nativeEvent || e;\n\n        if (!isUndefined(ev.data)) {\n            return;\n        }\n        // click (up / down)\n        this.props.onChange(this.input.current!.value);\n    }\n}\n","import * as React from \"react\";\nimport Tab from \"../Tab\";\nimport \"./FontTab.css\";\nimport { prefix } from \"../../utils/utils\";\nimport TabInputBox from \"../../Inputs/TabInputBox\";\nimport SelectBox from \"../../Inputs/SelectBox\";\nimport TextBox from \"../../Inputs/TextBox\";\nimport Memory from \"../../utils/Memory\";\nimport { setProperty, getProperties } from \"../../utils/MoveableData\";\nimport EventBus from \"../../utils/EventBus\";\n\nconst FONT_FAMILY_PROPS = {\n    options: [\"sans-serif\"],\n};\nconst TEXT_ALIGN_PROPS = {\n    options: [\"left\", \"center\", \"right\", \"justify\"],\n};\nconst FONT_STYLE_PROPS = {\n    options: [\"normal\", \"italic\", \"blique\"],\n};\nconst FONT_WEIGHT_PROPS = {\n    options: [\"100\", \"200\", \"300\", \"normal\", \"500\", \"600\", \"bold\", \"800\"],\n};\nconst TEXT_DECORATION_PROPS = {\n    options: [\"none\", \"underline\", \"overline\", \"line-through\"],\n}\nexport default class FontTab extends Tab {\n    public static id = \"Font\";\n    public title = \"Font\";\n    public renderTab() {\n        const [\n            family,\n            size,\n            align,\n            style,\n            weight,\n            decoration,\n        ] = getProperties([\n            [\"font-family\"],\n            [\"font-size\"],\n            [\"text-align\"],\n            [\"font-style\"],\n            [\"font-weight\"],\n            [\"text-decoration\"],\n        ], [\n            \"sans-serif\",\n            \"14px\",\n            \"left\",\n            \"normal\",\n            \"normal\",\n            \"none\",\n        ]);\n\n        return <div className={prefix(\"font-tab\")}>\n            <TabInputBox type={\"half\"} label=\"family\" input={SelectBox}\n                props={FONT_FAMILY_PROPS}\n                value={family} updateValue={true} onChange={this.onChangeFamily} />\n            <TabInputBox type={\"half\"} label=\"size\" input={TextBox}\n                value={size}\n                updateValue={true}\n                onChange={this.onChangeSize} />\n            <TabInputBox type={\"half\"} label=\"align\" input={SelectBox}\n                props={TEXT_ALIGN_PROPS}\n                value={align} updateValue={true}\n                onChange={this.onChangeAlign} />\n            <TabInputBox type={\"half\"} label=\"style\" input={SelectBox}\n                props={FONT_STYLE_PROPS}\n                value={style} updateValue={true}\n                onChange={this.onChangeStyle} />\n            <TabInputBox type={\"half\"} label=\"weight\" input={SelectBox}\n                props={FONT_WEIGHT_PROPS}\n                value={weight} updateValue={true}\n                onChange={this.onChangeWeight} />\n            <TabInputBox type={\"half\"} label=\"decoration\" input={SelectBox}\n                props={TEXT_DECORATION_PROPS}\n                value={decoration} updateValue={true}\n                onChange={this.onChangeDecoration} />\n        </div>;\n    }\n    public componentDidMount() {\n        EventBus.on(\"render\", this.onRender as any);\n        EventBus.on(\"setTargets\", this.setTargets as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"render\", this.onRender as any);\n        EventBus.off(\"setTargets\", this.setTargets as any);\n    }\n    private onChangeSize = (v: any) => {\n        this.changeProperty(\"font-size\", v);\n    }\n    private onChangeAlign = (v: any) => {\n        this.changeProperty(\"text-align\", v);\n    }\n    private onChangeFamily = (v: any) => {\n        this.changeProperty(\"font-family\", v);\n    }\n    private onChangeStyle = (v: any) => {\n        this.changeProperty(\"font-style\", v);\n    }\n    private onChangeWeight = (v: any) => {\n        this.changeProperty(\"font-weight\", v);\n    }\n    private onChangeDecoration = (v: any) => {\n        this.changeProperty(\"text-decoration\", v);\n    }\n    private onRender = () => {\n        this.forceUpdate();\n    }\n    private setTargets = () => {\n        this.forceUpdate();\n    }\n    private changeProperty(name: string, v: any) {\n        Memory.set(name, v);\n        setProperty([name], v);\n    }\n}\n","import * as React from \"react\";\nimport { prefix } from \"../utils/utils\";\nimport \"./Tabs.css\";\nimport TransformTab from \"./TransformTab\";\nimport Tab from \"./Tab\";\nimport FrameTab from \"./FrameTab/FrameTab\";\nimport AlignTab from \"./AlignTab/AlignTab\";\nimport LayerTab from \"./LayerTab/LayerTab\";\nimport CurrentTab from \"./ColorTab/ColorTab\";\nimport FontTab from \"./FontTab/FontTab\";\nimport EventBus from \"../utils/EventBus\";\nimport MoveableManager from \"../Viewport/MoveableMananger\";\n\nconst TABS: Array<typeof Tab> = [\n    CurrentTab,\n    AlignTab,\n    FontTab,\n    LayerTab,\n    TransformTab,\n    FrameTab,\n];\nexport default class Tabs extends React.PureComponent<{\n    moveableManager: React.RefObject<MoveableManager>,\n}> {\n    public tabs = React.createRef<HTMLDivElement>();\n    public state = {\n        selected: \"\",\n    }\n    public render() {\n        return <div className={prefix(\"tabs\")} ref={this.tabs} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\n            {this.renderTabs()}\n        </div>;\n    }\n    public renderTabs() {\n        const moveableManager = this.props.moveableManager;\n        const selected = this.state.selected;\n        return TABS.map(UserTab => {\n            const id = UserTab.id;\n            const isSelected = id === selected;\n            return <div key={id} className={prefix(\"tab-icon\", isSelected ? \"selected\" : \"\")}>\n                <div data-target-id={id} className={prefix(\"tab-icon-label\")} onClick={this.onClick}><span>{UserTab.id}</span></div>\n                {isSelected && <UserTab moveableManager={moveableManager} />}\n            </div>;\n            // return <UserTab moveable={moveable} />;\n        });\n    }\n    public componentDidMount() {\n        EventBus.on(\"blur\", this.onMouseOut as any);\n    }\n    public componentWillUnmount() {\n        EventBus.off(\"blur\", this.onMouseOut as any);\n    }\n\n    private onClick = (e: any) => {\n        this.onMouseOver();\n        const target = e.target;\n        const prevSelected = this.state.selected;\n        const selected = target.getAttribute(\"data-target-id\");\n        this.setState({\n            selected: prevSelected === selected ? \"\" : selected,\n        });\n    }\n    private onMouseOver = () => {\n        this.tabs.current!.classList.add(\"scena-over\");\n    }\n    private onMouseOut = () => {\n        this.tabs.current!.classList.remove(\"scena-over\");\n    }\n}\n","import * as React from \"react\";\nimport Moveable from \"react-moveable\";\nimport MoveableData from \"../utils/MoveableData\";\nimport Memory from \"../utils/Memory\";\nimport { getContentElement } from \"../utils/utils\";\nimport EventBus from \"../utils/EventBus\";\nimport Menu from \"../Menu/Menu\";\nimport Selecto from \"react-selecto\";\nimport { keydown, keyup } from \"../KeyManager/KeyManager\";\nimport KeyController from \"keycon\";\n\nexport default class MoveableManager extends React.PureComponent<{\n    selectedMenu: string,\n    targets: Array<HTMLElement | SVGElement>,\n    menu: React.RefObject<Menu>,\n    selecto: React.RefObject<Selecto>,\n    verticalGuidelines: number[],\n    horizontalGuidelines: number[],\n}> {\n    public moveable = React.createRef<Moveable>();\n    public getMoveable() {\n        return this.moveable.current!;\n    }\n    public render() {\n        const {\n            selectedMenu, targets, menu, selecto,\n            verticalGuidelines,\n            horizontalGuidelines,\n        } = this.props;\n        // const\n\n        const elementGuidelines = [...MoveableData.getTargets()].filter(el => {\n            return targets.indexOf(el) === -1;\n        });\n        const isShift = KeyController.global.shiftKey;\n        return <Moveable\n            ref={this.moveable}\n            targets={targets}\n            draggable={true}\n            resizable={true}\n            throttleResize={1}\n            clippable={selectedMenu === \"Crop\"}\n            dragArea={targets.length > 1 || selectedMenu !== \"Text\"}\n            checkInput={selectedMenu === \"Text\"}\n            throttleDragRotate={isShift ? 45 : 0}\n            keepRatio={isShift}\n            rotatable={true}\n            snappable={true}\n            snapCenter={true}\n            snapGap={false}\n            roundable={true}\n            verticalGuidelines={verticalGuidelines}\n            horizontalGuidelines={horizontalGuidelines}\n            elementGuidelines={elementGuidelines}\n            clipArea={true}\n            onDragStart={MoveableData.onDragStart}\n            onDrag={MoveableData.onDrag}\n            onDragGroupStart={MoveableData.onDragGroupStart}\n            onDragGroup={MoveableData.onDragGroup}\n\n            onScaleStart={MoveableData.onScaleStart}\n            onScale={MoveableData.onScale}\n            onScaleGroupStart={MoveableData.onScaleGroupStart}\n            onScaleGroup={MoveableData.onScaleGroup}\n\n            onResizeStart={MoveableData.onResizeStart}\n            onResize={MoveableData.onResize}\n            onResizeGroupStart={MoveableData.onResizeGroupStart}\n            onResizeGroup={MoveableData.onResizeGroup}\n\n            onRotateStart={MoveableData.onRotateStart}\n            onRotate={MoveableData.onRotate}\n            onRotateGroupStart={MoveableData.onRotateGroupStart}\n            onRotateGroup={MoveableData.onRotateGroup}\n\n            defaultClipPath={Memory.get(\"crop\") || \"inset\"}\n            onClip={MoveableData.onClip}\n\n            onDragOriginStart={MoveableData.onDragOriginStart}\n            onDragOrigin={e => {\n                MoveableData.onDragOrigin(e);\n            }}\n\n            onRound={MoveableData.onRound}\n\n            onClick={e => {\n                const target = e.inputTarget as any;\n                if (e.isDouble && target.isContentEditable) {\n                    menu.current!.select(\"Text\");\n                    const el = getContentElement(target);\n\n                    if (el) {\n                        el.focus();\n                    }\n                }\n            }}\n            onClickGroup={e => {\n                selecto.current!.clickTarget(e.inputEvent, e.inputTarget);\n            }}\n            onRender={e => {\n                EventBus.requestTrigger(\"render\", e);\n            }}\n            onRenderGroup={e => {\n                EventBus.requestTrigger(\"renderGroup\", e);\n            }}\n            onRenderEnd={e => {\n                EventBus.requestTrigger(\"render\", e);\n            }}\n            onRenderGroupEnd={e => {\n                EventBus.requestTrigger(\"renderGroup\", e);\n            }}\n        ></Moveable>\n    }\n    public componentDidMount() {\n        keydown([\"shift\"], () => {\n            this.forceUpdate();\n        });\n        keyup([\"shift\"], () => {\n            this.forceUpdate();\n        });\n    }\n}\n","import * as React from \"react\";\nimport InfiniteViewer from \"react-infinite-viewer\";\nimport Guides from \"@scena/react-guides\";\nimport Selecto, { Rect } from \"react-selecto\";\nimport keycon from \"keycon\";\nimport \"./Editor.css\";\nimport Menu from \"./Menu/Menu\";\nimport Viewport from \"./Viewport/Viewport\";\nimport { getContentElement, prefix } from \"./utils/utils\";\nimport Tabs from \"./Tabs/Tabs\";\nimport EventBus from \"./utils/EventBus\";\nimport { IObject } from \"@daybrush/utils\";\nimport Memory from \"./utils/Memory\";\nimport KeyController from \"keycon\";\nimport MoveableManager from \"./Viewport/MoveableMananger\";\nimport { keyup } from \"./KeyManager/KeyManager\";\nimport MoveableData, { getTargets } from \"./utils/MoveableData\";\n\n\nEventBus.on(\"setTargets\", ({ targets }) => {\n    Memory.set(\"targets\", targets);\n});\n\n\nexport class Editor extends React.PureComponent<{\n    width: number,\n    height: number,\n}> {\n    public static defaultProps = {\n        width: 400,\n        height: 600,\n    };\n    public state: {\n        targets: Array<SVGElement | HTMLElement>,\n        horizontalGuides: number[],\n        verticalGuides: number[],\n        selectedMenu: string,\n        zoom: number,\n    } = {\n            targets: [],\n            horizontalGuides: [],\n            verticalGuides: [],\n            zoom: 1,\n            selectedMenu: \"MoveTool\",\n        };\n    public horizontalGuides = React.createRef<Guides>();\n    public verticalGuides = React.createRef<Guides>();\n    public infiniteViewer = React.createRef<InfiniteViewer>();\n    public selecto = React.createRef<Selecto>();\n    public menu = React.createRef<Menu>();\n    public moveableManager = React.createRef<MoveableManager>();\n    public viewport = React.createRef<Viewport>();\n    public render() {\n        const {\n            horizontalGuides,\n            verticalGuides,\n            infiniteViewer,\n            moveableManager,\n            viewport,\n            menu,\n            selecto,\n            state,\n        } = this;\n        const {\n            selectedMenu,\n            targets,\n            zoom,\n        } = state;\n        const {\n            width,\n            height,\n        } = this.props;\n        const horizontalSnapGuides = [0, height, height / 2, ...state.horizontalGuides];\n        const verticalSnapGuides = [0, width, width / 2, ...state.verticalGuides];\n        return (\n            <div className={prefix(\"editor\")}>\n                <Tabs moveableManager={moveableManager}></Tabs>\n                <Menu ref={menu} onSelect={this.onMenuChange} />\n                <div className={prefix(\"reset\")} onClick={e => {\n                    infiniteViewer.current!.scrollCenter();\n                }}></div>\n                <Guides ref={horizontalGuides}\n                    type=\"horizontal\" className={prefix(\"guides\", \"horizontal\")} style={{}}\n                    snapThreshold={5}\n                    snaps={horizontalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    onChangeGuides={e => {\n                        this.setState({\n                            horizontalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <Guides ref={verticalGuides}\n                    type=\"vertical\" className={prefix(\"guides\", \"vertical\")} style={{}}\n                    snapThreshold={5}\n                    snaps={verticalSnapGuides}\n                    displayDragPos={true}\n                    dragPosFormat={v => `${v}px`}\n                    zoom={zoom}\n                    onChangeGuides={e => {\n                        this.setState({\n                            verticalGuides: e.guides,\n                        });\n                    }}\n                ></Guides>\n                <InfiniteViewer ref={infiniteViewer}\n                    className={prefix(\"viewer\")}\n                    usePinch={true}\n                    pinchThreshold={50}\n                    zoom={zoom}\n                    onDragStart={e => {\n                        const target = e.inputEvent.target;\n                        this.checkBlur();\n\n                        if (\n                            target.nodeName === \"A\"\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || targets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onDragEnd={e => {\n                        if (!e.isDrag) {\n                            selecto.current!.clickTarget(e.inputEvent);\n                        }\n                    }}\n                    onAbortPinch={e => {\n                        selecto.current!.triggerDragStart(e.inputEvent);\n                    }}\n                    onScroll={e => {\n                        horizontalGuides.current!.scroll(e.scrollLeft);\n                        horizontalGuides.current!.scrollGuides(e.scrollTop);\n\n                        verticalGuides.current!.scroll(e.scrollTop);\n                        verticalGuides.current!.scrollGuides(e.scrollLeft);\n                    }}\n                    onPinch={e => {\n                        this.setState({\n                            zoom: e.zoom,\n                        });\n                    }}\n                >\n                    <Viewport ref={viewport} style={{\n                        width: `${width}px`,\n                        height: `${height}px`,\n                    }}>\n                        <MoveableManager\n                            ref={moveableManager}\n                            targets={targets}\n                            selectedMenu={selectedMenu}\n                            selecto={selecto}\n                            menu={menu}\n                            verticalGuidelines={verticalSnapGuides}\n                            horizontalGuidelines={horizontalSnapGuides}\n                        ></MoveableManager>\n                    </Viewport>\n                </InfiniteViewer>\n                <Selecto\n                    ref={selecto}\n                    dragContainer={\".scena-viewer\"}\n                    hitRate={0}\n                    selectableTargets={[\"[data-moveable]\"]}\n                    selectByClick={true}\n                    selectFromInside={false}\n                    toggleContinueSelect={[\"shift\"]}\n                    preventDefault={true}\n                    scrollOptions={\n                        infiniteViewer.current ? {\n                            container: infiniteViewer.current.getContainer(),\n                            threshold: 30,\n                            throttleTime: 30,\n                            getScrollPosition: () => {\n                                const current = infiniteViewer.current!;\n                                return [\n                                    current.getScrollLeft(),\n                                    current.getScrollTop(),\n                                ];\n                            },\n                        } : undefined\n                    }\n                    onDragStart={e => {\n                        const inputEvent = e.inputEvent;\n                        const target = inputEvent.target;\n\n                        this.checkBlur();\n                        if (selectedMenu === \"Text\" && target.isContentEditable) {\n                            const contentElement = getContentElement(target);\n\n                            if (contentElement && contentElement.hasAttribute(\"data-moveable\")) {\n                                e.stop();\n                                this.setTargets([contentElement]);\n                            }\n                        }\n                        if (\n                            (inputEvent.type === \"touchstart\" && e.isTrusted)\n                            || moveableManager.current!.getMoveable().isMoveableElement(target)\n                            || state.targets.some(t => t === target || t.contains(target))\n                        ) {\n                            e.stop();\n                        }\n                    }}\n                    onScroll={({ direction }) => {\n                        infiniteViewer.current!.scrollBy(direction[0] * 10, direction[1] * 10);\n                    }}\n                    onSelectEnd={({ isDragStart, selected, inputEvent, rect }) => {\n                        if (isDragStart) {\n                            inputEvent.preventDefault();\n                        }\n                        if (this.selectEndMaker(rect)) {\n                            return;\n                        }\n                        this.setTargets(selected).then(() => {\n                            if (!isDragStart) {\n                                return;\n                            }\n                            moveableManager.current!.getMoveable().dragStart(inputEvent);\n                        });\n                    }}\n                ></Selecto>\n            </div>\n        );\n    }\n    public promiseState(state: IObject<any>) {\n        return new Promise(resolve => {\n            this.setState(state, () => {\n                resolve();\n            });\n        });\n    }\n    public setTargets(targets: Array<HTMLElement | SVGElement>) {\n        return this.promiseState({\n            targets,\n        }).then(() => {\n            EventBus.requestTrigger(\"setTargets\", { targets });\n        });\n    }\n    public appendJSX(jsx: any, name: string, frame: IObject<any> = {}) {\n        return this.viewport.current!.appendJSX(jsx, name, frame).then(target => {\n            this.setTargets([target]);\n\n            return target;\n        });\n    }\n    public appendElement(tag: any, props: IObject<any>, name: string, frame: IObject<any> = {}) {\n        return this.viewport.current!.appendElement(tag, props, name, frame).then(target => {\n            this.setTargets([target]);\n\n            return target;\n        });\n    }\n    public appendJSXs(jsxs: Array<{ jsx: any, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.viewport.current!.appendJSXs(jsxs).then(targets => {\n            this.setTargets([targets[0]]);\n\n            return targets;\n        });\n    }\n    public appendElements(elements: Array<{ tag: any, props: IObject<any>, name: string, frame: IObject<any> }>): Promise<Array<HTMLElement | SVGElement>> {\n        return this.viewport.current!.appendElements(elements).then(targets => {\n            this.setTargets([targets[0]]);\n\n            return targets;\n        });\n    }\n    public removeElements(targets: Array<HTMLElement | SVGElement>) {\n        const currentTargets = getTargets();\n        const nextTargets = currentTargets.filter(target => {\n            return targets.indexOf(target) === -1;\n        });\n        targets.forEach(target => {\n            MoveableData.removeFrame(target);\n        });\n        return this.setTargets(nextTargets).then(() => {\n            this.viewport.current!.removeTargets(targets);\n        });\n    }\n    public componentDidMount() {\n        const {\n            infiniteViewer,\n        } = this;\n        requestAnimationFrame(() => {\n            infiniteViewer.current!.scrollCenter();\n        });\n        keycon.setGlobal();\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"wheel\", this.onWheel, {\n            passive: false,\n        });\n        const viewport = this.viewport.current!\n\n\n        EventBus.on(\"selectLayers\", (e: any) => {\n            const selected = e.selected as string[];\n\n            this.setTargets(selected.map(key => viewport.getInfo(key)!.el!));\n        });\n        EventBus.on(\"update\", () => {\n            this.forceUpdate();\n        });\n\n        keyup([\"backspace\"], () => {\n            this.removeElements(getTargets());\n        });\n    }\n    public componentWillUnmount() {\n        EventBus.off();\n        Memory.clear();\n        KeyController.global.destroy();\n        window.removeEventListener(\"resize\", this.onResize);\n        window.removeEventListener(\"wheel\", this.onWheel);\n    }\n    private onMenuChange = (id: string) => {\n        this.setState({\n            selectedMenu: id,\n        });\n    }\n    private selectEndMaker(rect: Rect) {\n        const infiniteViewer = this.infiniteViewer.current!;\n        const selectIcon = this.menu.current!.getSelected();\n        const width = rect.width;\n        const height = rect.height;\n\n        if (!selectIcon || !selectIcon.maker || !width || !height) {\n            return false;\n        }\n        const maker = selectIcon.maker();\n        const scrollTop = -infiniteViewer.getScrollTop() + 30;\n        const scrollLeft = -infiniteViewer.getScrollLeft() + 75;\n        const top = rect.top - scrollTop;\n        const left = rect.left - scrollLeft;\n\n\n        const style = {\n            top: `${top}px`,\n            left: `${left}px`,\n            position: \"absolute\",\n            width: `${width}px`,\n            height: `${height}px`,\n            ...maker.style,\n        } as any;\n        this.appendElement(maker.tag, maker.props, `(${selectIcon.id})`, style).then(selectIcon.makeThen);\n        return true;\n    }\n    private checkBlur() {\n        const activeElement = document.activeElement;\n        if (activeElement) {\n            (activeElement as HTMLElement).blur();\n        }\n        const selection = document.getSelection()!;\n\n        if (selection) {\n            selection.removeAllRanges();\n        }\n        // if (activeElement && (\n        //     activeElement.tagName === \"INPUT\" ||\n        //     activeElement.tagName === \"TEXTAREA\"\n        //     || (activeElement as any).isContentEditable\n        // )) {\n\n\n        // }\n        EventBus.trigger(\"blur\");\n    }\n    private onResize = () => {\n        this.horizontalGuides.current!.resize();\n        this.verticalGuides.current!.resize();\n    }\n    private onWheel = (e: any) => {\n        if (keycon.global.altKey) {\n            e.preventDefault();\n            this.setState({\n                zoom: Math.max(0.1, this.state.zoom + e.deltaY / 300),\n            });\n        }\n    }\n}\n","import * as React from \"react\";\nimport { Editor } from \"./Editor/Editor\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    public editor = React.createRef<Editor>();\n    public render() {\n        return <div className=\"app\">\n            <Editor ref={this.editor} />\n            <div className=\"bottom\">\n                <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">Download</a>\n                <a href=\"https://daybrush.com/moveable/release/latest/doc\" target=\"_blank\">API</a>\n                <a href=\"https://daybrush.com/moveable/storybook\" target=\"_blank\">Storybook</a>\n            </div>\n        </div>;\n    }\n    public componentDidMount() {\n        // (window as any).a = this.editor.current!;\n        this.editor.current!.appendJSXs([\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable</div>,\n                name: \"(Logo)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"50%\",\n                    top: \"30%\",\n                    width: \"250px\",\n                    height: \"200px\",\n                    \"font-size\": \"40px\",\n                    \"transform\": \"translate(-125px, -100px)\",\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                    \"flex-direction\": \"column\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": 100,\n                },\n            },\n            {\n                jsx: <p className=\"badges\">\n                    <a href=\"https://www.npmjs.com/package/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/npm/v/moveable.svg?style=flat-square&amp;color=007acc&amp;label=version\" alt=\"npm version\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/github/stars/daybrush/moveable.svg?color=42b883&amp;style=flat-square\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable\" target=\"_blank\">\n                        <img src=\"https://img.shields.io/badge/language-typescript-blue.svg?style=flat-square\" />\n                    </a>\n                    <br/>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/react-moveable\" target=\"_blank\"><img alt=\"React\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=React&amp;style=flat-square&amp;color=61daeb\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/preact-moveable\" target=\"_blank\"><img alt=\"Preact\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Preact&amp;style=flat-square&amp;color=673ab8\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/ngx-moveable\" target=\"_blank\"><img alt=\"Angular\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Angular&amp;style=flat-square&amp;color=C82B38\" /></a>\n                    <a href=\"https://github.com/probil/vue-moveable\" target=\"_blank\"><img alt=\"Vue\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Vue&amp;style=flat-square&amp;color=3fb984\" /></a>\n                    <a href=\"https://github.com/daybrush/moveable/tree/master/packages/svelte-moveable\" target=\"_blank\"><img alt=\"Svelte\" src=\"https://img.shields.io/static/v1.svg?label=&amp;message=Svelte&amp;style=flat-square&amp;color=C82B38\" /></a>\n                </p>,\n                name: \"(Badges)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"50%\",\n                    width: \"400px\",\n                    \"text-align\": \"center\",\n                },\n            },\n            {\n                jsx: <div className=\"moveable\" contentEditable=\"true\">Moveable is Draggable! Resizable! Scalable! Rotatable! Warpable! Pinchable</div>,\n                name: \"(Description)\",\n                frame: {\n                    position: \"absolute\",\n                    left: \"0%\",\n                    top: \"65%\",\n                    width: \"400px\",\n                    \"font-size\": \"14px\",\n                    \"text-align\": \"center\",\n                    \"font-weight\": \"normal\",\n                },\n            },\n        ]);\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}